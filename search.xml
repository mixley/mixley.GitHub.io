<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>vscodium使用vscode扩展</title>
    <url>/2021/16VX7F1.html</url>
    <content><![CDATA[<p> 发现vscodium插件较少时，可以修改插件下载位置，使用微软的插件库 </p>
<p><a href="https://zhuanlan.zhihu.com/p/276000982">https://zhuanlan.zhihu.com/p/276000982</a></p>
<p>vscodium默认使用的扩展源是<code>open-vsx.org</code>，部分扩展没有加入此扩展源，需要使用微软官方扩展源才能直接安装和自动更新。</p>
<p>修改<code>安装根目录/resources/app/product.json</code>文件中的<code>extensionsGallery</code>键对应的值如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;extensionsGallery&quot;: &#123;</span><br><span class="line">    &quot;serviceUrl&quot;: &quot;https://marketplace.visualstudio.com/_apis/public/gallery&quot;,</span><br><span class="line">    &quot;itemUrl&quot;: &quot;https://marketplace.visualstudio.com/items&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>重启vscodium。扩展里就可以搜索安装微软官方扩展源里的扩展。</p>
<p><img src="https://mixley.stdcdn.com/2021/07/f73850c3c4002c0fab6a47804978b736.png" alt="image-20210713200101052"></p>
]]></content>
      <categories>
        <category>小技巧</category>
      </categories>
      <tags>
        <tag>mixley</tag>
      </tags>
  </entry>
  <entry>
    <title>学习交流(持续更新)</title>
    <url>/2021/11VPC9D.html</url>
    <content><![CDATA[<h2 id="软件下载专区"><a href="#软件下载专区" class="headerlink" title="软件下载专区"></a>软件下载专区</h2><p><a href="https://mixley.stdcdn.com/tools.html">常用工具/精品软件</a></p>
<h2 id="书籍购买专区"><a href="#书籍购买专区" class="headerlink" title="书籍购买专区"></a>书籍购买专区</h2><p>[书籍购买推荐】(<a href="https://mixley.stdcdn.com/book.html">https://mixley.stdcdn.com/book.html</a>)</p>
<h2 id="影视文学"><a href="#影视文学" class="headerlink" title="影视文学"></a>影视文学</h2><h3 id="电影"><a href="#电影" class="headerlink" title="电影"></a>电影</h3><p><a href="https://tv.cctv.com/2021/02/02/VIDAJNNHiuXByYkLTOs0zo2k210202.shtml">觉醒年代</a>——明白当代青年的使命</p>
<h2 id="代码编程"><a href="#代码编程" class="headerlink" title="代码编程"></a>代码编程</h2><h3 id="教程网站"><a href="#教程网站" class="headerlink" title="教程网站"></a>教程网站</h3><p><a href="https://www.runoob.com/">菜鸟教程</a>——基础学习必备</p>
<p><a href="https://www.yiibai.com/">易百教程</a>——基础学习必备</p>
<p><a href="https://learnku.com/">LearnKu</a>——终身编程</p>
<h2 id="spring-java"><a href="#spring-java" class="headerlink" title="spring/java"></a>spring/java</h2><p><a href="http://www.spring4all.com/">Spring For All</a> ——民间社区</p>
<p><a href="https://github.com/wuyouzhuguli/SpringAll">SpringAll</a>——开源项目，由浅入深Spring系列学习</p>
<h3 id="web端"><a href="#web端" class="headerlink" title="web端"></a>web端</h3><p><a href="http://www.ydma.cn/">兄弟连</a>——H5</p>
<p><a href="http://www.w3cschool.cn/index-4.html">W3C</a>——web前端</p>
<p><a href="http://www.w3school.com.cn/index.html">w3</a>——H5</p>
<p><a href="http://www.axure.com.cn/">Axure中文学习网</a>——快速原型Axure学习</p>
<p><a href="https://waylau.gitbooks.io/netty-4-user-guide/content/">Netty 4.x</a>——Netty中文文档</p>
<p><a href="http://www.ruanyifeng.com/blog/">阮一峰</a>——web前端 yyds</p>
<h3 id="论坛-博客平台"><a href="#论坛-博客平台" class="headerlink" title="论坛/博客平台"></a>论坛/博客平台</h3><p><a href="https://www.52programer.com/">吾爱程序猿</a></p>
<p><a href="https://www.csdn.net/">csdn</a></p>
<p><a href="https://www.cnblogs.com/">博客园</a></p>
<h3 id="php相关"><a href="#php相关" class="headerlink" title="php相关"></a>php相关</h3><p><a href="http://www.thinkphp.cn/">ThinkPHP</a></p>
<p><a href="http://www.golaravel.com/">Laravel(PHP)</a></p>
<h3 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h3><p><a href="http://www.hcharts.cn/">Highcharts中文网</a></p>
<h2 id="设计相关"><a href="#设计相关" class="headerlink" title="设计相关"></a>设计相关</h2><p><a href="https://icomoon.io/">ico</a></p>
<p><a href="https://mp.weixin.qq.com/s/I2f4NYE13xLvnsxwDDnWrw">免费素材合集</a></p>
<p><a href="https://www.bilibili.com/video/BV1A4411M729">PS2019从入门到精通</a>——从安装到卸载</p>
<h2 id="英语学习"><a href="#英语学习" class="headerlink" title="英语学习"></a>英语学习</h2><p><a href="https://v.youku.com/v_show/id_XNTgwODM0MTYw.html?spm=a2h1n.8251843.0.0&f=19476545">《跟我学》(Follow Me)BBC 视频</a></p>
<h2 id="公务员"><a href="#公务员" class="headerlink" title="公务员"></a>公务员</h2><p><a href="https://pan.baidu.com/s/1_qpcc2hMFgdab7oO8gfgzA">公考备考资料</a>——度盘 提取码: 4but 考公资料分享 含思维导图 </p>
<p><a href="https://m.xue.huatu.com/fx/zx/detail/97845?t=LIAcEr9QHEbxm8rqpoHBJg==">华图在线常识-口诀歌系列</a>——粉笔常识课 王鹏讲得很有趣，可以听听。听完再配合李梦娇的魔性歌曲。一个是帮助理解，一个是加深记忆。两个都学是最好的</p>
<p><a href="https://pan.baidu.com/s/1OQpccl3AdRRoHgeWsr5mtA">公务员粉笔</a>——度盘 提取码: s3wd  系列教程，较全面 分模块攻略，总结出每道题型的正确答题思路，并固化这种答题思路（划重点）</p>
<h2 id="事业编"><a href="#事业编" class="headerlink" title="事业编"></a>事业编</h2><p><a href="http://www.fenbi.com/spa/doc-user/dir/4910">事业编—公基资料</a>——事业编资料(打不开多试几次)</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>mixley</tag>
        <tag>前端</tag>
        <tag>java</tag>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>卸载edge</title>
    <url>/2021/254DB2D.html</url>
    <content><![CDATA[<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">.\setup.exe -<span class="literal">-uninstall</span> -<span class="literal">-system</span><span class="literal">-level</span> -<span class="literal">-verbose</span><span class="literal">-logging</span> -<span class="literal">-force</span><span class="literal">-uninstall</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>小技巧</category>
      </categories>
  </entry>
  <entry>
    <title>书籍购买推荐(持续更新)</title>
    <url>/2021/18A0XWM.html</url>
    <content><![CDATA[<h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><h3 id="神经网络"><a href="#神经网络" class="headerlink" title="神经网络"></a>神经网络</h3><h4 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h4><p>python 神经网络编程——非常适合入门神经网络编程的一本书，初中生就能看懂（微量代码，原理通透）。</p>
<h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p>从零开始学架构——由浅入深，有经验的程序员和才开始入行的架构师能收获很多，具体实践中能避免踩坑和注意到一些关键事项</p>
<h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>Linux编程与Shell脚本编程大全——比较全面详细的linux工具书</p>
<h2 id="建筑"><a href="#建筑" class="headerlink" title="建筑"></a>建筑</h2><h3 id="装修"><a href="#装修" class="headerlink" title="装修"></a>装修</h3><p>小家越住越大——漫画教人搞装修</p>
<h2 id="闲暇阅读"><a href="#闲暇阅读" class="headerlink" title="闲暇阅读"></a>闲暇阅读</h2><h3 id="漫画"><a href="#漫画" class="headerlink" title="漫画"></a>漫画</h3><p>今天你真好看</p>
<p>一禅小和尚</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
  </entry>
  <entry>
    <title>使用Hexo搭建博客</title>
    <url>/2021/3NPATC1.html</url>
    <content><![CDATA[<p>我需要的快速、简洁且高效的博客框架-&gt;Hexo</p>
<blockquote>
<p>Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</p>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">##全局安装hexo</span></span><br><span class="line">npm install hexo<span class="literal">-cli</span> <span class="literal">-g</span></span><br><span class="line"><span class="comment">#初始化hexo目录</span></span><br><span class="line">hexo init &lt;folder&gt;</span><br><span class="line"><span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<p>安装后目录结构说明：</p>
<!-- vscode -> file-tree-generator -->

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">📦blog</span> <span class="comment">#博客·安装路径</span></span><br><span class="line"> <span class="string">┣</span> <span class="string">📂scaffolds</span>	<span class="comment">#模板文件</span></span><br><span class="line"> <span class="string">┃</span> <span class="string">┣</span> <span class="string">📜draft.md</span>	<span class="comment">#草稿模板</span></span><br><span class="line"> <span class="string">┃</span> <span class="string">┣</span> <span class="string">📜page.md</span>	<span class="comment">#页面模板</span></span><br><span class="line"> <span class="string">┃</span> <span class="string">┗</span> <span class="string">📜post.md</span>	<span class="comment">#文章模板</span></span><br><span class="line"> <span class="string">┣</span> <span class="string">📂source</span>	<span class="comment">#资源文件</span></span><br><span class="line"> <span class="string">┃</span> <span class="string">┗</span> <span class="string">📂_posts</span>	<span class="comment">#文章路径</span></span><br><span class="line"> <span class="string">┃</span> <span class="string">┃</span> <span class="string">┗</span> <span class="string">📜hello-world.md</span>	<span class="comment">#实际文章</span></span><br><span class="line"> <span class="string">┣</span> <span class="string">📂themes</span>	<span class="comment">#主题</span></span><br><span class="line"> <span class="string">┃</span> <span class="string">┗</span> <span class="string">📜.gitkeep</span></span><br><span class="line"> <span class="string">┣</span> <span class="string">📜package.json</span></span><br><span class="line"> <span class="string">┣</span> <span class="string">📜_config.landscape.yml</span>	<span class="comment">#_config.[theme].yml 用于编辑主题配置</span></span><br><span class="line"> <span class="string">┗</span> <span class="string">📜_config.yml</span>	<span class="comment">#配置文件 ！重要！！</span></span><br></pre></td></tr></table></figure>

<h2 id="启动命令"><a href="#启动命令" class="headerlink" title="启动命令"></a>启动命令</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#更多详细命令查看官网：https://hexo.io/zh-cn/docs/commands.html</span></span><br><span class="line"><span class="comment">#启动</span></span><br><span class="line">hexo s</span><br><span class="line"><span class="comment">#下面为指定配置文件</span></span><br><span class="line">hexo s -<span class="literal">-config</span> custom.yml,custom2.json,custom3.yml</span><br></pre></td></tr></table></figure>

<p>打开浏览器输入<a href="http://localhost:4000/">http://localhost:4000/</a> 出现hexo界面则表示启动成功了</p>
<h2 id="管理与编写博客"><a href="#管理与编写博客" class="headerlink" title="管理与编写博客"></a>管理与编写博客</h2><h3 id="文档管理结构"><a href="#文档管理结构" class="headerlink" title="文档管理结构"></a>文档管理结构</h3><p>下面是我们常见的一个文档管理方式，不论doc也好，还是md也罢，我们都喜欢通过建立文件夹的方式进行分类然后梳理，下面的我通过建立文档同名的方式(或者图床)表示文档需要的文件。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">📦macdown</span></span><br><span class="line"> <span class="string">┣</span> <span class="string">📂工具</span> <span class="comment">#分类</span></span><br><span class="line"> <span class="string">┃</span> <span class="string">┣</span> <span class="string">📂minio</span> <span class="comment">#分类</span></span><br><span class="line"> <span class="string">┃</span> <span class="string">┃</span> <span class="string">┣</span> <span class="string">📂minio</span> <span class="comment">#对应md文件的附件</span></span><br><span class="line"> <span class="string">┃</span> <span class="string">┃</span> <span class="string">┃</span> <span class="string">┗</span> <span class="string">📜simplicity.gif</span></span><br><span class="line"> <span class="string">┃</span> <span class="string">┃</span> <span class="string">┗</span> <span class="string">📜minio.md</span> <span class="comment">#md文件</span></span><br><span class="line"> <span class="string">┃</span> <span class="string">┣</span> <span class="string">📂博客</span> <span class="comment">#分类</span></span><br><span class="line"> <span class="string">┃</span> <span class="string">┃</span> <span class="string">┣</span> <span class="string">📂使用Hexo搭建博客</span>  <span class="comment">#对应md文件的附件</span></span><br><span class="line"> <span class="string">┃</span> <span class="string">┃</span> <span class="string">┃</span> <span class="string">┗</span> <span class="string">📜image-20210623193347044.png</span></span><br><span class="line"> <span class="string">┃</span> <span class="string">┃</span> <span class="string">┣</span> <span class="string">📜使用Hexo搭建博客.md</span></span><br><span class="line"> <span class="string">┃</span> <span class="string">┃</span> <span class="string">┗</span> <span class="string">📜关于管理与写博客.md</span></span><br><span class="line"> <span class="string">┃</span> <span class="string">┗</span> <span class="string">📜常用工具.md</span> <span class="comment">#文章</span></span><br><span class="line"> <span class="string">┣</span> <span class="string">📂开发</span> <span class="comment">#分类</span></span><br><span class="line"> <span class="string">┃</span> <span class="string">┗</span> <span class="string">📂bat</span> <span class="comment">#更多分类与文章</span></span><br></pre></td></tr></table></figure>

<p>上面这个目录结构，我相信不管是写博客还是仅仅做笔记或者整理资料的人，大部分过程应该都是这样的，我习惯将这个结构放在OneDrive中，OneDrive可以通过邀请增加容量，嫌麻烦某宝有售(1.5¥,10G(最大10G,写文章够用),5分钟到)。</p>
<h3 id="推荐工具"><a href="#推荐工具" class="headerlink" title="推荐工具"></a>推荐工具</h3><p>编辑神器：<a href="https://typora.io/">Typora</a>  MacDown编辑神器 (万年bate版本，免费使用)</p>
<p>生产力工具：<a href="https://u.tools/">uTools</a> -&gt;安装自动化助手 辅助编辑更加方便（免费使用）</p>
<h2 id="发布配置"><a href="#发布配置" class="headerlink" title="发布配置"></a>发布配置</h2><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><p>下面的自定义配置为使用git发布博客，首先需安装hexo-deployer-git 插件,其它插件为更方便使用</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">## git上传发布，一键部署时使用</span></span><br><span class="line">npm install hexo<span class="literal">-deployer</span><span class="literal">-git</span> -<span class="literal">-save</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#hexo增强配置，可以不用手动维护 front-matter，文章标题建议使用 20210628 标题.md</span></span><br><span class="line">npm install hexo<span class="literal">-enhancer</span> -<span class="literal">-save</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#处理图片路径转换问题，当开启post_asset_folder时，使用文件路径转换</span></span><br><span class="line">npm hexo<span class="literal">-asset</span><span class="literal">-image</span> -<span class="literal">-save</span></span><br></pre></td></tr></table></figure>

<h3 id="自定义配置文件"><a href="#自定义配置文件" class="headerlink" title="自定义配置文件"></a>自定义配置文件</h3><p>自定义配置文件如下，可在hexo目录下建立<strong>custom.yml</strong>文件，自定义以下内容，不污染原始文件便于后期升级hexo</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#详情看附录中配置文件详细介绍</span></span><br><span class="line"><span class="comment">#Site 网站设置 基础设置</span></span><br><span class="line"><span class="comment">#网站标题</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">mixley</span></span><br><span class="line"><span class="comment">#网站副标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;呜啦啦&#x27;</span></span><br><span class="line"><span class="comment">#网站描述，SEO优化时会扫描</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#网站关键字，SEO优化时会扫描，多个逗号分隔</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">&#x27;技术栈A,技术栈B&#x27;</span></span><br><span class="line"><span class="comment">#作者</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">mixley</span></span><br><span class="line"><span class="comment">#语言，使用主题时支持的语言列表,主题文件中languages文件夹下查看</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="comment">#时区，默认为电脑时区，中国大陆：Asia/Shanghai</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#URL 网址 基础设置,url如果发布到gitbub，请参考注册github.io建立免费页面</span></span><br><span class="line"><span class="comment">#生成的地址中，会携带这个地址，博客根路径(怎么访问的就怎么填写)</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">&#x27;https://mixley.github.io&#x27;</span></span><br><span class="line"><span class="comment">#文章访问编号 hexo-enhancer增强配置中提供</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:abbrlink.html</span></span><br><span class="line"><span class="comment">#网站关键字，增强配置专用，其余tag会收集keywords中tags自动匹配</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">&#x27;关键字A,关键字B&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动 Asset 文件夹(推荐开启，会将同名目录一起打包，否则只打包md，也可以使用第三方图床解决)</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#把链接改为与根目录的相对位址</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Home page setting 首页文章设置（可以不设置）</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="comment">#每页数量</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Category &amp; Tag   分类 &amp; 标签 中文标签可能存在编码问题，需转换，格式为 中文: 英文 多个记录直接换行</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="comment">#分类对应值 后期建立文件夹，需要在这里增加英文映射</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line">	<span class="string">嘿嘿:</span> <span class="string">heihei</span></span><br><span class="line">	<span class="string">哈哈:</span> <span class="string">haha</span></span><br><span class="line"><span class="comment">#标签对应值 keywords 关键字中文全部需要进行处理，tags中关键字同样需要处理</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line">	<span class="string">技术栈A:</span> <span class="string">jA</span></span><br><span class="line">	<span class="string">技术栈B:</span> <span class="string">jB</span></span><br><span class="line">	</span><br><span class="line"><span class="comment">#Pagination 分页设置（可以不设置）</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用主题，可以选择其它主题，这是默认主题</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">landscape</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#发布配置，若使用git，需要安装 npm install hexo-deployer-git --save</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="comment">#多服务配置</span></span><br><span class="line"> <span class="attr">repository:</span></span><br><span class="line">   <span class="comment">#使用ssh的方式，配置ssh密钥可以免登录发布</span></span><br><span class="line">   <span class="attr">github:</span> <span class="string">git@github.com:mixley/mixley.GitHub.io.git</span></span><br><span class="line">   <span class="attr">gitee:</span> <span class="string">git@gitee.com:mixley/mixley.git</span></span><br><span class="line"> <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<h3 id="Hexo三连命令"><a href="#Hexo三连命令" class="headerlink" title="Hexo三连命令"></a>Hexo三连命令</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#清除</span></span><br><span class="line">hexo clean</span><br><span class="line"></span><br><span class="line"><span class="comment">#指定配置文件生成</span></span><br><span class="line">hexo g -<span class="literal">-config</span> custom.yml</span><br><span class="line"></span><br><span class="line"><span class="comment">#发布</span></span><br><span class="line">hexo d -<span class="literal">-config</span> custom.yml</span><br><span class="line"></span><br><span class="line"><span class="comment">#指定配置文件生成并发布，可以使用下面命令</span></span><br><span class="line"><span class="comment">#hexo g -d --config custom.yml</span></span><br></pre></td></tr></table></figure>

<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><h3 id="三连命令操作文件"><a href="#三连命令操作文件" class="headerlink" title="三连命令操作文件"></a>三连命令操作文件</h3><p>手动创建文件push.cmd(任意调整)，针对文章放在OneDrive或其它同步文件夹，不习惯使用hexo目录的，可以使用此cmd进行发布。cmd设置好后，可以放开始菜单快速调用或者使用uTools等效率工具快速呼出 。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">chcp  65001 &gt; nul 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">@REM 此处设定安装的hexo文件夹路径</span><br><span class="line"><span class="built_in">set</span> dir=E:\work\js\hexo</span><br><span class="line">@REM 此处设定文章目录路径</span><br><span class="line"><span class="built_in">set</span> blog=.</span><br><span class="line"></span><br><span class="line">@REM 备份文件夹路径</span><br><span class="line"><span class="built_in">set</span> backDir=%dir%\back\%DATE%</span><br><span class="line"><span class="built_in">set</span> _postsDir=%dir%\<span class="built_in">source</span>\_posts</span><br><span class="line"><span class="built_in">set</span> aboutDir=%dir%\<span class="built_in">source</span>\about</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 清理文件</span><br><span class="line">IF EXIST <span class="string">&quot;%backDir%&quot;</span> RD /Q/S <span class="string">&quot;%backDir%&quot;</span> &gt; nul 2&gt;&amp;1</span><br><span class="line">IF NOT EXIST <span class="string">&quot;%backDir%&quot;</span> md <span class="string">&quot;%backDir%&quot;</span> &gt; nul 2&gt;&amp;1</span><br><span class="line"><span class="built_in">echo</span> 备份文件夹（若发现备份异常，请将 关于我.md 中文修改为英文，如 about.md ，系统原因）</span><br><span class="line">IF EXIST <span class="string">&quot;%aboutDir%\index.md&quot;</span> move <span class="string">&quot;%aboutDir%\index.md&quot;</span> <span class="string">&quot;%_postsDir%\关于我.md&quot;</span></span><br><span class="line">move  <span class="string">&quot;%_postsDir%&quot;</span> <span class="string">&quot;%backDir%&quot;</span></span><br><span class="line"><span class="built_in">echo</span> 备份成功，创建文件夹</span><br><span class="line">IF NOT EXIST <span class="string">&quot;%_postsDir%&quot;</span> md <span class="string">&quot;%_postsDir%&quot;</span></span><br><span class="line"><span class="built_in">echo</span> 复制文件夹 </span><br><span class="line">Xcopy <span class="string">&quot;%blog%&quot;</span> <span class="string">&quot;%_postsDir%&quot;</span> /Y/E/C/I &gt; nul 2&gt;&amp;1</span><br><span class="line">move <span class="string">&quot;%_postsDir%\关于我.md&quot;</span> <span class="string">&quot;%aboutDir%\index.md&quot;</span> </span><br><span class="line"></span><br><span class="line">@REM 切换文件夹到hexo路径下执行命令</span><br><span class="line"><span class="built_in">pushd</span> %dir%</span><br><span class="line"><span class="built_in">echo</span> 复制成功，清理中。</span><br><span class="line">call hexo clean &gt; nul 2&gt;&amp;1</span><br><span class="line"><span class="built_in">echo</span> 清理完成，生成发布文章中</span><br><span class="line">call hexo g -d --config custom.yml &gt; nul 2&gt;&amp;1</span><br><span class="line"><span class="built_in">echo</span> 发布文件成功</span><br><span class="line">@REM 切换到当前目录</span><br><span class="line"><span class="built_in">popd</span></span><br><span class="line"><span class="built_in">echo</span> 执行结束</span><br><span class="line"></span><br><span class="line">pause</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure>



<h3 id="uTools自动化助手脚本"><a href="#uTools自动化助手脚本" class="headerlink" title="uTools自动化助手脚本"></a>uTools自动化助手脚本</h3><p>uTools，自动化助手脚本，快速生成<a href="https://hexo.io/zh-cn/docs/front-matter.html">Front Matter</a> （PS，开启文本无匹配功能，任意位置可以使用此脚本。另，超级面板输入脚本名称，按中键可以呼出执行脚本）</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//自动化助手，Fornt Matter Date Gennerate</span></span><br><span class="line"><span class="comment">//获取当前日期，格式YYYY-MM-DD</span></span><br><span class="line"><span class="keyword">let</span> getNowFormatDay = <span class="function"><span class="keyword">function</span>(<span class="params">nowDate</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> char = <span class="string">&quot;-&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(nowDate == <span class="literal">null</span>)&#123;</span><br><span class="line">        nowDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> day = nowDate.getDate();</span><br><span class="line">    <span class="keyword">let</span> month = nowDate.getMonth() + <span class="number">1</span>;<span class="comment">//注意月份需要+1</span></span><br><span class="line">    <span class="keyword">let</span> year = nowDate.getFullYear();</span><br><span class="line">    <span class="comment">//补全0，并拼接</span></span><br><span class="line">    <span class="keyword">return</span> year + char + completeDate(month) + char +completeDate(day);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取当前时间，格式YYYY-MM-DD HH:mm:ss</span></span><br><span class="line"><span class="keyword">let</span> getNowFormatTime = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> nowDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="keyword">let</span> colon = <span class="string">&quot;:&quot;</span>;</span><br><span class="line">    <span class="keyword">let</span> h = nowDate.getHours();</span><br><span class="line">    <span class="keyword">let</span> m = nowDate.getMinutes();</span><br><span class="line">    <span class="keyword">let</span> s = nowDate.getSeconds();</span><br><span class="line">    <span class="comment">//补全0，并拼接</span></span><br><span class="line">    <span class="keyword">return</span> getNowFormatDay(nowDate) + <span class="string">&quot; &quot;</span> + completeDate(h) + colon + completeDate(m) + colon + completeDate(s);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//补全0</span></span><br><span class="line"><span class="keyword">let</span> completeDate =<span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> value &lt; <span class="number">10</span> ? <span class="string">&quot;0&quot;</span>+value:value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> date = getNowFormatTime();</span><br><span class="line"><span class="comment">//下面两行自动移动到MD头部增加日期，b</span></span><br><span class="line">utools.simulateKeyboardTap(<span class="string">&#x27;home&#x27;</span>, utools.isMacOs() ? <span class="string">&#x27;command&#x27;</span> : <span class="string">&#x27;ctrl&#x27;</span>)</span><br><span class="line">date=<span class="string">&quot;---\ndate: &quot;</span>+date+<span class="string">&quot;\n---\n &quot;</span></span><br><span class="line"></span><br><span class="line">utools.copyText(date)</span><br><span class="line">utools.simulateKeyboardTap(<span class="string">&#x27;v&#x27;</span>, utools.isMacOs() ? <span class="string">&#x27;command&#x27;</span> : <span class="string">&#x27;ctrl&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="主题推荐：next"><a href="#主题推荐：next" class="headerlink" title="主题推荐：next"></a>主题推荐：<a href="http://theme-next.iissnan.com/getting-started.html">next</a></h3><h3 id="配置文件详解"><a href="#配置文件详解" class="headerlink" title="配置文件详解"></a>配置文件详解</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Hexo Configuration</span></span><br><span class="line"><span class="comment">##Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">##Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"><span class="comment">##中文文档：https://hexo.io/zh-cn/docs/configuration</span></span><br><span class="line"><span class="comment">#Site 网站设置 基础设置</span></span><br><span class="line"><span class="comment">#网站标题</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span></span><br><span class="line"><span class="comment">#网站副标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#网站描述，SEO优化时会扫描</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;全栈的自我修养……&#x27;</span></span><br><span class="line"><span class="comment">#网站关键字，SEO优化时会扫描，多个逗号分隔</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">&#x27;java,C&#x27;</span></span><br><span class="line"><span class="comment">#作者</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">John</span></span><br><span class="line"><span class="comment">#语言，使用主题时支持的语言列表,主题文件中languages文件夹下查看</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="comment">#时区，默认为电脑时区，中国大陆：Asia/Shanghai</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#URL 网址 基础设置,url如果发布到gitbub，请参考注册github.io建立免费</span></span><br><span class="line"><span class="comment">##Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="comment">#生成的地址中，会携带这个地址，博客根路径(怎么访问的就怎么填写)</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">&#x27;http://example.com&#x27;</span></span><br><span class="line"><span class="comment">#文章路径，title为中文在github发布无法显示</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span>	<span class="string">&#x27;&#x27;</span>					<span class="comment">#永久链接中各部分的默认值,如下</span></span><br><span class="line"><span class="comment">#------------------------</span></span><br><span class="line"><span class="comment">#permalink_defaults: </span></span><br><span class="line"><span class="comment">#year: 2021</span></span><br><span class="line"><span class="comment">#------------------------</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="comment">#是否在永久链接中保留尾部的 index.html，设置为 false 时去除</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#是否在永久链接中保留尾部的 .html, 设置为 false 时去除 (对尾部的 index.html无效)</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Directory 目录</span></span><br><span class="line"><span class="comment">#资源文件夹，这个文件夹用来存放内容</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="comment">#公共文件夹，这个文件夹用于存放生成的站点文件</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="comment">#标签文件夹</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="comment">#归档文件夹</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="comment">#分类文件夹</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="comment">#Include code 文件夹，source_dir 下的子目录</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="comment">#国际化（i18n）文件夹</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="comment">#跳过指定文件的渲染。匹配到的文件将会被不做改动地复制到 public 目录中。您可使用 glob 表达式来匹配路径。如下</span></span><br><span class="line"><span class="comment">#------------------------</span></span><br><span class="line"><span class="comment">##skip_render: &quot;mypage/**/*&quot;</span></span><br><span class="line"><span class="comment">#将会直接将 `source/mypage/index.html` 和 `source/mypage/code.js` 不做改动地输出到 &#x27;public&#x27; 目录</span></span><br><span class="line"><span class="comment">#你也可以用这种方法来跳过对指定文章文件的渲染</span></span><br><span class="line"><span class="comment">#skip_render: &quot;_posts/test-post.md&quot;</span></span><br><span class="line"><span class="comment">#这将会忽略对 &#x27;test-post.md&#x27; 的渲染</span></span><br><span class="line"><span class="comment">#------------------------</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Writing 文章 基本不用动，只有那个post_asset_folder用来设置图片路径</span></span><br><span class="line"><span class="comment">#新文章的文件名称</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span></span><br><span class="line"><span class="comment">#预设布局，默认布局是文章</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="comment">#把标题转换为 title case</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">external_link:</span></span><br><span class="line">  <span class="comment">#在新标签中打开链接</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#对整个网站（site）生效或仅对文章（post）生效</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span></span><br><span class="line">  <span class="comment">#需要排除的域名。主域名和子域名如 www 需分别配置[]</span></span><br><span class="line">  <span class="attr">exclude:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#把文件名称转换为 (1) 小写或 (2) 大写</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="comment">#显示草稿</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">#启动 Asset 文件夹(推荐开启)</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#把链接改为与根目录的相对位址</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">#显示未来的文章  ??</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#代码块的设置, 请参考 Highlight.js 进行设置</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">#代码块的设置, 请参考 PrismJS 进行设置</span></span><br><span class="line"><span class="attr">prismjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">preprocess:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Home page setting 首页文章设置</span></span><br><span class="line"><span class="comment">#path: Root path for your blogs index page. (default = &#x27;&#x27;)</span></span><br><span class="line"><span class="comment">#per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment">#order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Category &amp; Tag   分类 &amp; 标签 !!需要映射为URLEncode</span></span><br><span class="line"><span class="comment">#uncategorized默认从属分类,%E6%9C%AA%E5%88%86%E7%B1%BB是未分类的URLEncode值</span></span><br><span class="line"><span class="comment">#default_category: uncategorized</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="comment">#分类对应值</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="comment">#标签对应值</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Metadata elements</span></span><br><span class="line"><span class="comment">##https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</span></span><br><span class="line"><span class="comment">#Meta generator 标签。 值为 false 时 Hexo 不会在头部插入该标签</span></span><br><span class="line"><span class="attr">meta_generator:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Date / Time format</span></span><br><span class="line"><span class="comment">##Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">##You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">##http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="string">HH:mm:ss</span></span><br><span class="line"><span class="comment">##updated_option supports &#x27;mtime&#x27;, &#x27;date&#x27;, &#x27;empty&#x27;</span></span><br><span class="line"><span class="attr">updated_option:</span> <span class="string">&#x27;mtime&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Pagination</span></span><br><span class="line"><span class="comment">##Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Include / Exclude file(s)</span></span><br><span class="line"><span class="comment">##include:/exclude: options only apply to the &#x27;source/&#x27; folder</span></span><br><span class="line"><span class="comment">#Hexo 默认会忽略隐藏文件和文件夹（包括名称以下划线和 . 开头的文件和文件夹，Hexo 的 _posts 和 _data 等目录除外）。通过设置此字段将使 Hexo 处理他们并将它们复制到 source 目录下。</span></span><br><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="comment">#Hexo 会忽略这些文件和目录，项目文件忽略配置</span></span><br><span class="line"><span class="attr">exclude:</span></span><br><span class="line"><span class="comment">#Ignore files/folders,忽略包括themes/下文件与文件夹(所有上传忽略配置)</span></span><br><span class="line"><span class="attr">ignore:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Extensions</span></span><br><span class="line"><span class="comment">##Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">##Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="comment">#使用主题</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">landscape</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Deployment</span></span><br><span class="line"><span class="comment">##Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="comment">#发布配置，若使用git，需要安装 npm install hexo-deployer-git --save</span></span><br><span class="line"><span class="comment">#安装</span></span><br><span class="line"><span class="comment">#------------------------</span></span><br><span class="line"><span class="comment">#deploy:</span></span><br><span class="line"><span class="comment"># type: git</span></span><br><span class="line"><span class="comment">#单服务配置</span></span><br><span class="line"><span class="comment"># repo: &lt;repository url&gt; #https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io</span></span><br><span class="line"><span class="comment">#多服务配置</span></span><br><span class="line"><span class="comment"># repository:</span></span><br><span class="line"><span class="comment">#   github: &lt;github url&gt;</span></span><br><span class="line"><span class="comment">#   gitee: &lt;gitee url&gt;</span></span><br><span class="line"><span class="comment"># branch: [branch]</span></span><br><span class="line"><span class="comment"># message: [message]</span></span><br><span class="line"><span class="comment">#------------------------</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>mixley</tag>
        <tag>java</tag>
        <tag>全栈</tag>
        <tag>收集</tag>
      </tags>
  </entry>
  <entry>
    <title>快速上传微信素材</title>
    <url>/2021/1P5AD68.html</url>
    <content><![CDATA[<p> 当我们编写了博客后，想将博客内容发送到微信公众平台时，会遇到一个新的阻碍：图片需要重新上传。</p>
<p>MD转成微信样式后有很多方式，之前我们提到的<a href="https://md.openwrite.cn/">md.openwrite.cn</a>，或者直接使用OpenWrite中编辑文章后显示的<strong>公众号预览</strong>功能都能基本满足要求，但是！复制的内容粘贴在微信后，无法解决图片无法加载的问题，功能实用性大打折扣。</p>
<h2 id="理清思路"><a href="#理清思路" class="headerlink" title="理清思路"></a>理清思路</h2><h3 id="失败的素材的处理"><a href="#失败的素材的处理" class="headerlink" title="失败的素材的处理"></a>失败的素材的处理</h3><p>图片不是微信的，会提示失败图片，我们需要通过点击<strong>查看失败图片</strong>找到对应的图片，然后选中失败图片后，点击<strong>图片</strong>-&gt;<strong>本地上传</strong>再从本地选择图片上传，若提前存图片库的，可以从图片库中选择。</p>
<p><img src="https://mixley.stdcdn.com/2021/07/68bbd53c0ed7e3797596e738ad1c8be8.png" alt="失败图片显示"></p>
<h3 id="重复动作梳理"><a href="#重复动作梳理" class="headerlink" title="重复动作梳理"></a>重复动作梳理</h3><p>1、找到失败图片，选中失败图片</p>
<p>2、获取失败图片路径</p>
<p>3、点击图片-&gt;本地上传</p>
<p>4、找到对应失败图片的本地路径</p>
<p>5、点击确定</p>
<h3 id="需要处理的核心问题"><a href="#需要处理的核心问题" class="headerlink" title="需要处理的核心问题"></a>需要处理的核心问题</h3><p>1、通过失败图片路径找到本地路径</p>
<p>2、重复动作太多，需要简化操作</p>
<h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><h3 id="替换图片路径为本地路径"><a href="#替换图片路径为本地路径" class="headerlink" title="替换图片路径为本地路径"></a>替换图片路径为本地路径</h3><p>我们可以uTools的自动化助手，帮我们将图片下载，然后替换成本地的路径</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> path = ENTER.payload</span><br><span class="line"><span class="comment">//路径为https://mixley.stdcdn.com/ 替换为应用中路径</span></span><br><span class="line"><span class="keyword">let</span> url=<span class="string">&quot;https://mixley.stdcdn.com/&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> dic=<span class="string">&quot;C:/Users/micke/OneDrive/应用/PoweredBy.Cloud/mixley.stdcdn.com/&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//图片下载保存路径</span></span><br><span class="line"><span class="keyword">let</span> imgdowndir=<span class="string">&quot;E:/mixley/Pictures/Saved Pictures/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义获取UUID的方法</span></span><br><span class="line"><span class="keyword">let</span> getUUID=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="comment">//UUID来自UUID插件中算法</span></span><br><span class="line">  <span class="keyword">const</span> uuid = <span class="string">&#x27;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&#x27;</span>.replace(<span class="regexp">/[xy]/g</span>, <span class="function"><span class="params">c</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> r = <span class="built_in">Math</span>.random() * <span class="number">16</span> | <span class="number">0</span></span><br><span class="line">    <span class="keyword">let</span> v = c === <span class="string">&#x27;x&#x27;</span> ? r : (r &amp; <span class="number">0x3</span> | <span class="number">0x8</span>)</span><br><span class="line">    <span class="keyword">return</span> v.toString(<span class="number">16</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> uuid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义执行路径</span></span><br><span class="line"><span class="keyword">let</span> executePath=<span class="function"><span class="keyword">function</span>(<span class="params">path</span>)</span>&#123;</span><br><span class="line">  utools.copyText(path);</span><br><span class="line">  utools.simulateKeyboardTap(<span class="string">&#x27;v&#x27;</span>,utools.isMacOs() ? <span class="string">&#x27;command&#x27;</span> : <span class="string">&#x27;ctrl&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(path.indexOf(url)&gt;-<span class="number">1</span>)&#123;</span><br><span class="line">  path = path.replace(url,dic);</span><br><span class="line">  executePath(path);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//下面为下载图片后替换本地路径</span></span><br><span class="line">path = imgdowndir+getUUID()+<span class="string">&#x27;.png&#x27;</span>;</span><br><span class="line"><span class="comment">//下载</span></span><br><span class="line">utools.ubrowser.goto(ENTER.payload)</span><br><span class="line">  .wait(<span class="number">500</span>)</span><br><span class="line">  <span class="comment">//将Img截图，保存为png</span></span><br><span class="line">  .screenshot(<span class="string">&quot;img&quot;</span>, path)</span><br><span class="line">  .run(&#123; <span class="attr">show</span>: <span class="literal">false</span> &#125;)</span><br><span class="line">  .then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    executePath(path)</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123; utools.showNotification(err.message) &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://mixley.stdcdn.com/2021/07/752819242ad82d1fbeba89cc4c373144.png" alt="自动化设置"></p>
<p><strong>特别说明</strong></p>
<p>如果使用OD作为图床，再OD中找到应用文件夹，将它设置为始终在此设备保留，解决同步问题。</p>
<p><img src="https://mixley.stdcdn.com/2021/07/76e2576d1cca88aeaa6722fdbb5ca9ad.png" alt="设置始终在此设备上保留"></p>
<h3 id="解决重复步骤问题"><a href="#解决重复步骤问题" class="headerlink" title="解决重复步骤问题"></a>解决重复步骤问题</h3><p>先看下浏览器有哪些操作可以让我们后面进行使用。</p>
<h4 id="浏览器特定操作说明"><a href="#浏览器特定操作说明" class="headerlink" title="浏览器特定操作说明"></a>浏览器特定操作说明</h4><p>1、Ctrl+L可以进入到link栏，即浏览器的地址栏（大部分浏览器）。</p>
<p>2、输入<strong>javascript:指令</strong>可以执行对应页面对应的指令，如下指令在浏览器地址栏输入后可在当前页面显示时间戳(注意，**javascript:**无法可能粘贴到浏览器，可以先输入j，再复制粘贴后面的部分)</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">javascript:(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert((<span class="keyword">new</span> <span class="built_in">Date</span>()).valueOf());&#125;)();</span><br></pre></td></tr></table></figure>

<p>3、选择文件的文件框选择中，如果输入互联网地址，系统会自动下载文件，并且跳转到对应的本地路径，但是可能存在下载多次。</p>
<p><img src="https://mixley.stdcdn.com/2021/07/a3c4c1f72933512e083a2404bd147a84.png" alt="选择文件"></p>
<h4 id="微信公众号特定DOM元素及操作分析"><a href="#微信公众号特定DOM元素及操作分析" class="headerlink" title="微信公众号特定DOM元素及操作分析"></a>微信公众号特定DOM元素及操作分析</h4><p>咱们不用分析太多微信的内部逻辑，就顺着微信公众号的操作来简化，咱们是为了简化操作不是为了破解。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取到ueditor_0编辑器的上下文(iframe)</span></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;ueditor_0&quot;</span>)</span><br><span class="line"><span class="comment">//下面为具体获取的document</span></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;ueditor_0&quot;</span>).contentWindow.document</span><br><span class="line"><span class="comment">//说明，后面的document都是指上面这个方式获取的。</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--这个是获取到的错误图片的大概结构，具体内容分析见下--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;page_image_error js_catchremoteimageerror js_uneditable custom_select_card js_uneditablemouseover custom_select_card_selected&quot;</span> <span class="attr">data-remoteid</span>=<span class="string">&quot;c1625917818338&quot;</span> <span class="attr">data-scene</span>=<span class="string">&quot;catch&quot;</span> <span class="attr">data-global</span>=<span class="string">&quot;0&quot;</span> <span class="attr">data-canretry</span>=<span class="string">&quot;1&quot;</span> <span class="attr">data-reason</span>=<span class="string">&quot;%E6%8B%89%E5%8F%96%E5%9B%BE%E7%89%87%E6%95%B0%E6%8D%AE%E5%A4%B1%E8%B4%A5&quot;</span> <span class="attr">data-imgtype</span>=<span class="string">&quot;img&quot;</span> <span class="attr">data-cacheurl</span>=<span class="string">&quot;https://mixley.stdcdn.com/2021/07/maven/clip_image010.jpg&quot;</span> <span class="attr">data-filename</span>=<span class="string">&quot;undefined&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:553px;height:153px;&quot;</span> <span class="attr">contenteditable</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="comment">&lt;!--省略--&gt;</span><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>1、 选中到错误的图片</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取方式1 可能存在多个，可以轮询。</span></span><br><span class="line"><span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;page_image_error&quot;</span>)[<span class="number">0</span>].click();</span><br><span class="line"><span class="comment">//获取选中图片</span></span><br><span class="line"><span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;page_image_error&quot;</span>)[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取方式2 .js_msg_next 进行点击，模拟界面上 查看失败图片按钮，不建议</span></span><br><span class="line"><span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;js_msg_next&quot;</span>)[<span class="number">0</span>].click();</span><br><span class="line"><span class="comment">//获取选中图片</span></span><br><span class="line"><span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;custom_select_card_selected&quot;</span>)[<span class="number">0</span>];</span><br></pre></td></tr></table></figure>
<p>2、获取到错误图片的地址</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//读取元素中的data-cacheurl,直接使用dataset</span></span><br><span class="line"><span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;page_image_error&quot;</span>)[<span class="number">0</span>].dataset.cacheurl</span><br></pre></td></tr></table></figure>

<p>3、点击上传按钮</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//实际研究源码，是使用的jq，有兴趣的可以把图片下载后转base64，直接免打开上传按钮</span></span><br><span class="line"><span class="built_in">document</span>.getElementsByName(<span class="string">&quot;file&quot;</span>)[<span class="number">0</span>].click()</span><br></pre></td></tr></table></figure>

<p>4、粘贴并转换地址，这里使用替换图片路径为本地路径或者直接复制原地址</p>
<p>5、确定后上传，其余的步骤重复</p>
<h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><p>在uTools自动化工具中，我们编写代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义替换图片的本地路径</span></span><br><span class="line"><span class="keyword">let</span> url=<span class="string">&quot;https://mixley.stdcdn.com/&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> dic=<span class="string">&quot;C:/Users/micke/OneDrive/应用/PoweredBy.Cloud/mixley.stdcdn.com/&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//貌似会出现命令串行，需要暂停下</span></span><br><span class="line"><span class="keyword">let</span> sleep =<span class="function"><span class="keyword">function</span>(<span class="params">numberMillis</span>) </span>&#123; </span><br><span class="line">  <span class="keyword">let</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>(); </span><br><span class="line">  <span class="keyword">let</span> exitTime = now.getTime() + numberMillis; </span><br><span class="line">  <span class="keyword">while</span> (<span class="literal">true</span>) &#123; </span><br><span class="line">    now = <span class="keyword">new</span> <span class="built_in">Date</span>(); </span><br><span class="line">    <span class="keyword">if</span> (now.getTime() &gt; exitTime) </span><br><span class="line">    <span class="keyword">return</span>; </span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//此方法在浏览器中执行js语句，可以直接操作dom</span></span><br><span class="line"><span class="keyword">let</span> executeJs=<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> d = <span class="string">&#x27;let url=&quot;&#x27;</span>+url+<span class="string">&#x27;&quot;;&#x27;</span>+</span><br><span class="line">  <span class="string">&#x27;let dic=&quot;&#x27;</span>+dic+<span class="string">&#x27;&quot;;&#x27;</span>;</span><br><span class="line">  <span class="comment">//进入到浏览器地址栏</span></span><br><span class="line">  utools.simulateKeyboardTap(<span class="string">&#x27;l&#x27;</span>,utools.isMacOs() ? <span class="string">&#x27;command&#x27;</span> : <span class="string">&#x27;ctrl&#x27;</span>);</span><br><span class="line">  <span class="comment">//这里不停下，可能会将文本复制到正文</span></span><br><span class="line">  sleep(<span class="number">100</span>);</span><br><span class="line">  <span class="comment">//本来是先输入j再输入后面的内容的，但是发现中文输入有问题，改为录入后删除</span></span><br><span class="line">  <span class="keyword">let</span> val=<span class="string">&quot;_javascript:(function()&#123;&quot;</span>+d+data+<span class="string">&quot;&#125;)();&quot;</span></span><br><span class="line">  utools.copyText(val);</span><br><span class="line">  utools.simulateKeyboardTap(<span class="string">&#x27;v&#x27;</span>,utools.isMacOs() ? <span class="string">&#x27;command&#x27;</span> : <span class="string">&#x27;ctrl&#x27;</span>);</span><br><span class="line">  sleep(<span class="number">20</span>);</span><br><span class="line">  utools.simulateKeyboardTap(<span class="string">&#x27;home&#x27;</span>,utools.isMacOs() ? <span class="string">&#x27;command&#x27;</span> : <span class="string">&#x27;ctrl&#x27;</span>);</span><br><span class="line">  sleep(<span class="number">20</span>);</span><br><span class="line">  utools.simulateKeyboardTap(<span class="string">&#x27;delete&#x27;</span>);</span><br><span class="line">  sleep(<span class="number">20</span>);</span><br><span class="line">  utools.simulateKeyboardTap(<span class="string">&#x27;enter&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//注意，execCommand已废弃，替代方法暂无。</span></span><br><span class="line"><span class="comment">//执行的内容，获取图片地址，注意，结尾需要分号; 别写//注释哦，否则无法执行</span></span><br><span class="line"><span class="keyword">let</span> urlPath=<span class="string">`</span></span><br><span class="line"><span class="string">let editDocument = document.getElementById(&quot;ueditor_0&quot;).contentWindow.document;</span></span><br><span class="line"><span class="string">let errorimg = editDocument.getElementsByClassName(&quot;page_image_error&quot;);</span></span><br><span class="line"><span class="string">/**将文本复制到剪贴板，后期浏览器废弃后，升级为其它方式**/</span></span><br><span class="line"><span class="string">let copyText=function(text)&#123;</span></span><br><span class="line"><span class="string">  let input = document.createElement(&#x27;input&#x27;);</span></span><br><span class="line"><span class="string">  input.setAttribute(&quot;value&quot;, text);</span></span><br><span class="line"><span class="string">  document.body.appendChild(input);</span></span><br><span class="line"><span class="string">  input.select();</span></span><br><span class="line"><span class="string">  document.execCommand(&quot;copy&quot;); </span></span><br><span class="line"><span class="string">  document.body.removeChild(input);</span></span><br><span class="line"><span class="string">&#125;;</span></span><br><span class="line"><span class="string">if(errorimg.length)&#123;</span></span><br><span class="line"><span class="string">  errorimg[0].click();</span></span><br><span class="line"><span class="string">  let cacheurl = errorimg[0].dataset.cacheurl;</span></span><br><span class="line"><span class="string">  /**替换为本地路径**/</span></span><br><span class="line"><span class="string">  cacheurl = cacheurl.replace(url,dic);</span></span><br><span class="line"><span class="string">  if(cacheurl.indexOf(dic)&gt;-1)&#123;</span></span><br><span class="line"><span class="string">    cacheurl=cacheurl.replaceAll(&quot;/&quot;, &quot;\\\\&quot;);</span></span><br><span class="line"><span class="string">  &#125;;</span></span><br><span class="line"><span class="string">  copyText(cacheurl);</span></span><br><span class="line"><span class="string">  /**此处使用模拟打开文件上传的方式，可以替换为其它，源码是操作base64的，我懒得解析了，够用**/</span></span><br><span class="line"><span class="string">  document.getElementsByName(&quot;file&quot;)[0].click();</span></span><br><span class="line"><span class="string">&#125;;</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"><span class="comment">//开始执行(可以写循环，全部执行完毕，判断条件)</span></span><br><span class="line">executeJs(urlPath);</span><br><span class="line"><span class="comment">//依据电脑性能停留不同的时间</span></span><br><span class="line">sleep(<span class="number">500</span>);</span><br><span class="line">utools.simulateKeyboardTap(<span class="string">&#x27;v&#x27;</span>,utools.isMacOs() ? <span class="string">&#x27;command&#x27;</span> : <span class="string">&#x27;ctrl&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//这里回车可以你自己按下去,继续使用前面提供的替换脚本，将图片快速下载，使用自带的下载比较慢</span></span><br><span class="line"><span class="comment">// sleep(20);</span></span><br><span class="line"><span class="comment">// utools.simulateKeyboardTap(&#x27;enter&#x27;);</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h2><p><img src="https://mixley.stdcdn.com/2021/07/5882273b259e21171750eacdc8a9d86f.gif" alt="动画3"></p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>mixley</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>使用PicGo搭建图床</title>
    <url>/2021/1PN15P4.html</url>
    <content><![CDATA[<p>我需要能帮助我管理图片的工具，让我的博客能在网络获取图片，我将使用OneDrive作为免费的图床。</p>
<blockquote>
<p><strong>PicGo: 一个用于快速上传图片并获取图片 URL 链接的工具</strong></p>
</blockquote>
<h2 id="调研"><a href="#调研" class="headerlink" title="调研"></a>调研</h2><p>经过了调研，PicGo实际并不提供存储，而是一个可以与博客工具配合的本地软件，他本身支持的格式能满足大部分，还可以支持插件。很赞的是，我发现了他有个Amazon S3插件，能支持Amazon S3格式，搜索S3就能得到它。</p>
<p><img src="https://mixley.stdcdn.com/2021/07/4ea848da27772395ab80ea6fb496dc6a.png" alt="PicGo插件中搜索S3插件"></p>
<p>Amazon S3 是一个产品，也是一个标准，我们使用的主流的存储产品，比如阿里云OSS、华为OSS、minio等都是支持S3标准的。这意味着，当我拥有这个替代我存储的工具，我将来的文件迁移是0成本的。</p>
<h3 id="为什么使用S3"><a href="#为什么使用S3" class="headerlink" title="为什么使用S3"></a>为什么使用S3</h3><blockquote>
<p>引用自：<a href="https://zhuanlan.zhihu.com/p/112057573">一文读懂 AWS S3</a></p>
<p>AWS S3 全名是 Simple Storage Service，简便的存储服务。为什么这么起名啊？它：</p>
<ol>
<li>提供了统一的接口 REST/SOAP 来统一访问任何数据</li>
<li>对 S3 来说，存在里面的数据就是对象名（键），和数据（值）</li>
<li>不限量，单个文件最高可达 5TB</li>
<li>高速。每个 bucket 下每秒可达 3500 PUT/COPY/POST/DELETE 或 5500 GET/HEAD 请求</li>
<li>具备版本，权限控制能力</li>
<li>具备数据生命周期管理能力</li>
</ol>
</blockquote>
<p>简单的说，S3更多是一个标准，使用S3后我们能无缝切换其它S3协议的服务，而目前大部分存储服务都是支持S3的！</p>
<h3 id="如何搭建s3存储服务"><a href="#如何搭建s3存储服务" class="headerlink" title="如何搭建s3存储服务"></a>如何搭建s3存储服务</h3><blockquote>
<p>引用自：<a href="http://www.minio.org.cn/">minio</a></p>
<p>构建高性能的云原生数据<br>机器学习，大数据分析，海量存储的基础架构<br>MinIO支持各种应用程序数据工作负载<br>在中国：阿里巴巴、腾讯、百度、中国联通、华为、中国移动等等9000多家企业也都在使用MinIO产品</p>
</blockquote>
<p>你可以使用minio搭建高性能的存储服务。</p>
<h2 id="安装PicGo"><a href="#安装PicGo" class="headerlink" title="安装PicGo"></a>安装PicGo</h2><p><a href="https://picgo.github.io/PicGo-Doc/zh/">PicGo</a>是开源产品，你可以在GitHub找到它，点击此处下载 <a href="https://github.com/Molunerfinn/PicGo/releases">应用</a>。</p>
<p>这是一个应用，直接安装完成点击打开就可以运行了，它为Win、Linux、MacOS都提供了程序。</p>
<h2 id="配置PoweredBy-Cloud"><a href="#配置PoweredBy-Cloud" class="headerlink" title="配置PoweredBy.Cloud"></a>配置PoweredBy.Cloud</h2><p>PicGo是S3插件，需要一个支持S3的服务，当我们不想额外花费时，可以使用免费的方式，比如使用OneDrive提供的存储。PoweredBy.Cloud可以提供我们需要的服务。</p>
<h3 id="注册PoweredBy-Cloud"><a href="#注册PoweredBy-Cloud" class="headerlink" title="注册PoweredBy.Cloud"></a>注册PoweredBy.Cloud</h3><blockquote>
<p>引用自：<a href="https://zhuanlan.zhihu.com/p/376414195">免费把你的 GoogleDrive 和 OneDrive 变成图床</a></p>
<p>1、打开 PoweredBy.Cloud 并注册。注册非常简单，只需要提供一个可收邮件的邮箱，登录地址会发送到你的邮箱。<br>2、在邮箱里找到登录地址，并点击登录地址登录到 PoweredBy.Cloud。<br>3、在 PoweredBy.Cloud 的控制台里添加一个 site，例如 <a href="http://demo.stdcdn.com,选择/">http://demo.stdcdn.com，选择</a> GoogleDrive 或者 OneDrive 作为存储空间。PoweredBy.Cloud 会在你的网盘里创建一个 <a href="http://demo.stdcdn.com/">http://demo.stdcdn.com</a> 的文件夹。</p>
</blockquote>
<p>注册site截图如下，Site Name将在后面使用</p>
<p><img src="https://mixley.stdcdn.com/2021/07/5328e699c03243c4c8abff5f4c172f1d.png" alt="在PoweredBy.Cloud中创建你的站点名称"></p>
<h3 id="创建Developer密钥-S3"><a href="#创建Developer密钥-S3" class="headerlink" title="创建Developer密钥(S3)"></a>创建Developer密钥(S3)</h3><p>点击Developer选项-&gt;点击 Create Access Key 按钮-&gt;输入任意key名称(仅做备注)</p>
<p><img src="https://mixley.stdcdn.com/2021/07/0f88e1fa24fef8197afb6ec55d8ca7a2.png" alt="image-20210707222843012"></p>
<h3 id="配置PicGo的S3"><a href="#配置PicGo的S3" class="headerlink" title="配置PicGo的S3"></a>配置PicGo的S3</h3><p>配置S3的关键参数在创建密钥后，access_key、secret_access_key都已经出现，剩下的还有两个关键值</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//下面是两个关键参数</span></span><br><span class="line"><span class="comment">//固定值,endpoint 自定义节点</span></span><br><span class="line">endpoint_url=<span class="string">&#x27;https://stdcdn.com&#x27;</span></span><br><span class="line"><span class="comment">//桶,bucketName 这就是你的SiteName。</span></span><br><span class="line">bucket=<span class="string">&quot;mixley&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://mixley.stdcdn.com/2021/07/c4243fe369515cc8acd8084d8c18c29e.png" alt="配置S3"></p>
<h3 id="测试图片上传效果"><a href="#测试图片上传效果" class="headerlink" title="测试图片上传效果"></a>测试图片上传效果</h3><p>我们使用PicGo测试上传效果，最终会在我们的OneDrive中出现。</p>
<p><img src="https://mixley.stdcdn.com/2021/07/fd3283b3a953c78e88540cf9e3fc20f6.png" alt="配置完成后测试上传的图片位置"></p>
<h2 id="Typora中使用PicGo"><a href="#Typora中使用PicGo" class="headerlink" title="Typora中使用PicGo"></a>Typora中使用PicGo</h2><p>Typora中，可以在图像中配置上传图片，并且上传可以进行验证图片上传选项操作。</p>
<p><img src="https://mixley.stdcdn.com/2021/07/1d10d4fb89ddeaaa2771a0f7494a962e.png" alt="image-20210707224953978"></p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>mixley</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建Minio服务</title>
    <url>/2021/1GB6XPC.html</url>
    <content><![CDATA[<h2 id="minio介绍"><a href="#minio介绍" class="headerlink" title="minio介绍"></a>minio介绍</h2><blockquote>
<p>minio 是高性能、可扩展、云的原生支持、开源免费的企业级文件存储服务，与Amazon S3 兼容，配置极简。</p>
</blockquote>
<p>minio中文网：<a href="http://www.minio.org.cn/">http://www.minio.org.cn/</a><br>minio官网：<a href="https://min.io/">https://min.io/</a></p>
<h3 id="linux下配置"><a href="#linux下配置" class="headerlink" title="linux下配置"></a>linux下配置</h3><p><img src="https://mixley.stdcdn.com/2021/07/4af3675d787d672cf6bc725351405524.gif" alt="img"></p>
<p>1、下载minio，建议下载到/usr/local/bin/ 目录下，可全局访问</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/bin/</span><br><span class="line">wget   http://dl.minio.org.cn/server/minio/release/linux-amd64/minio</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#连不上，使用下面的：wget   https://dl.minio.io/server/minio/release/linux-amd64/minio</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#还不行，试试：wget https://dl.min.io/server/minio/release/linux-amd64/minio</span></span></span><br><span class="line">chmod +x minio</span><br></pre></td></tr></table></figure>

<p>2、设置minio用户名密码到临时环境变量（重启后消失）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">旧版使用 MINIO_ACCESS_KEY MINIO_SECRET_KEY，作废时间：Deprecated since version RELEASE.2021-04-22T15-44-28Z.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">新版 配置用户名密码</span></span><br><span class="line">export MINIO_ROOT_USER=admin</span><br><span class="line">export MINIO_ROOT_PASSWORD=password</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">查看环境变量</span></span><br><span class="line">echo $MINIO_ROOT_USER</span><br><span class="line">echo $MINIO_ROOT_PASSWORD</span><br></pre></td></tr></table></figure>

<p>3、永久环境变量</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 修改系统配置</span></span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">最后一行输入(新版)</span> </span><br><span class="line">export MINIO_ROOT_USER=admin</span><br><span class="line">export MINIO_ROOT_PASSWORD=password</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置立即生效</span></span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>

<p>4、指定配置路径后启动 （建议修改默认端口）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">后端启动</span></span><br><span class="line">nohup minio server --address &#x27;:9000&#x27; --console-address &#x27;:9001&#x27; --config-dir /root/.minio /data/minio &gt; /data/minio.log 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="meta">#</span><span class="bash">确认是否启动</span></span><br><span class="line">ps -ef | grep minio | grep -v grep</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">前端启动</span></span><br><span class="line">minio server --address &#x27;:9000&#x27; --console-address &#x27;:9001&#x27; --config-dir /root/.minio /data/minio</span><br><span class="line"><span class="meta">#</span><span class="bash">查看端口占用lsof -i:d</span></span><br><span class="line">lsof -i:9000</span><br><span class="line"></span><br><span class="line">docker run -p 9000:9000 minio server /data/minio</span><br><span class="line"></span><br><span class="line">docker run -p 29235:29235 -p 29236:29236  \</span><br><span class="line">  --name minio1 \</span><br><span class="line">  -e &quot;MINIO_ROOT_USER=minioUser&quot; \</span><br><span class="line">  -e &quot;MINIO_ROOT_PASSWORD=minioPassword&quot; \</span><br><span class="line">  -e &quot;MINIO_KMS_SECRET_KEY=my-minio-encryption-key:17Ej+Y0pA/BTjoTDom6W4ymEDIMNeDoB8ss83CtZVbE=&quot; \</span><br><span class="line">  -v /data/minio/dir:/data \</span><br><span class="line">  -v /data/minio/config:/root/.minio \</span><br><span class="line">  minio/minio server --address &#x27;:29235&#x27; --console-address &#x27;:29236&#x27; /data </span><br></pre></td></tr></table></figure>

<p>5、开机启动（方式很多，例举其一）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">修改系统配置</span></span><br><span class="line">vim /etc/rc.d/rc.local</span><br><span class="line">chmod +x /etc/rc.d/rc.local</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">每次登录 vim /etc/profile</span></span><br><span class="line"><span class="meta">#</span><span class="bash">最后一行输入</span></span><br><span class="line">nohup minio server --address &#x27;:9000&#x27; --config-dir /root/.minio /data/minio &gt; /data/minio.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>

<p>6、服务方式启动</p>
<p>来自博文：<a href="https://blog.csdn.net/qq_38431927/article/details/107377166">MinIO安装并将MinIO设置成服务启动</a></p>
<h3 id="win配置"><a href="#win配置" class="headerlink" title="win配置"></a>win配置</h3><p>1、下载minio，下载到C:\WINDOWS可全局启动</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#powershell 命令直接下载，选定</span></span><br><span class="line">powershell (<span class="built_in">new-object</span> System.Net.WebClient).DownloadFile(<span class="string">&#x27;http://dl.minio.org.cn/server/minio/release/windows-amd64/minio.exe&#x27;</span>,<span class="string">&#x27;minio.exe&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">### 下载时建议下载到环境变量，或者建议设置path路径，使用minio即可访问最好。</span></span><br></pre></td></tr></table></figure>

<p>2、设置minio用户名密码到临时环境变量（重启后消失）</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> MINIO_ROOT_USER=admin</span><br><span class="line"><span class="built_in">set</span> MINIO_ROOT_PASSWORD=password</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看环境变量</span></span><br><span class="line"><span class="built_in">echo</span> %MINIO_ROOT_USER%</span><br><span class="line"><span class="built_in">echo</span> %MINIO_ROOT_PASSWORD%</span><br></pre></td></tr></table></figure>

<p>3、永久环境变量（手动设置也比较简单）</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#用户环境变量</span></span><br><span class="line">setx MINIO_ROOT_USER admin</span><br><span class="line">setx MINIO_ROOT_PASSWORD password</span><br><span class="line"></span><br><span class="line"><span class="comment">#系统环境变量(需管理员，建议)</span></span><br><span class="line">setx MINIO_ROOT_USER admin /m</span><br><span class="line">setx MINIO_ROOT_PASSWORD password /m</span><br><span class="line"></span><br><span class="line"><span class="comment">#以下指令保存为setMinio.bat后，自动获取管理员权限</span></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">%<span class="number">1</span>  %<span class="number">2</span>  mshta  vbscript:createobject(<span class="string">&quot;shell.application&quot;</span>).shellexecute(<span class="string">&quot;%~s0&quot;</span>,<span class="string">&quot;goto  :runas&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;runas&quot;</span>,<span class="number">1</span>)(window.close)&amp;<span class="keyword">exit</span> </span><br><span class="line">:runas setMinio.bat</span><br><span class="line">setx MINIO_ROOT_USER admin /m</span><br><span class="line">setx MINIO_ROOT_PASSWORD password /m</span><br><span class="line"><span class="built_in">echo</span> MINIO_ROOT_USER=%MINIO_ROOT_USER%</span><br><span class="line"><span class="built_in">echo</span> MINIO_ROOT_PASSWORD=%MINIO_ROOT_PASSWORD%</span><br><span class="line">pause&amp;<span class="keyword">exit</span> </span><br></pre></td></tr></table></figure>

<p>4、指定配置路径后启动 （建议修改默认端口）</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#静默启动(服务启动，以下命令设置服务为自动，开机后会自启动)</span></span><br><span class="line"><span class="built_in">set</span> confdir=<span class="string">&quot;D:\\data\\.minio&quot;</span></span><br><span class="line"><span class="built_in">set</span> datadir=<span class="string">&quot;D:\\data\\minio&quot;</span></span><br><span class="line"><span class="built_in">sc</span> create minio binpath=<span class="string">&quot;minio server --address &#x27;:9000&#x27; --config-dir %confdir% %datadir%&quot;</span> <span class="built_in">type</span>=own <span class="built_in">start</span>=auto displayname=minio</span><br><span class="line"><span class="comment">#启动服务 sc [start|stop|delete] server</span></span><br><span class="line"><span class="built_in">sc</span> <span class="built_in">start</span> minio</span><br><span class="line"><span class="comment">#查看服务状态</span></span><br><span class="line"><span class="built_in">sc</span> query minio</span><br><span class="line"></span><br><span class="line"><span class="comment">#cmd启动</span></span><br><span class="line">minio server -<span class="literal">-address</span> <span class="string">&#x27;:9000&#x27;</span> -<span class="literal">-config</span><span class="literal">-dir</span> D:\\data\\.minio D:\\data\\minio </span><br></pre></td></tr></table></figure>

<h3 id="其它事项"><a href="#其它事项" class="headerlink" title="其它事项"></a><strong>其它事项</strong></h3><h4 id="安装宝塔的linux下运行闪退"><a href="#安装宝塔的linux下运行闪退" class="headerlink" title="安装宝塔的linux下运行闪退"></a>安装宝塔的linux下运行闪退</h4><p>通过宝塔面板中系统加固功能检查管理进程白名单，不存在则加入到白名单</p>
<p><img src="https://mixley.stdcdn.com/2021/07/08727c087384727021d598511ea00803.png" alt="image-20210707230525365"></p>
<h4 id="win下使用cmd-minio-server无法启动解决办法"><a href="#win下使用cmd-minio-server无法启动解决办法" class="headerlink" title="win下使用cmd minio server无法启动解决办法"></a>win下使用cmd minio server无法启动解决办法</h4><p>1、若文件夹在本地，使用./minio server再重试</p>
<p>2、环境变量中设置path，指定minio目录路径</p>
<h4 id="win下执行命令时提示需要管理员权限"><a href="#win下执行命令时提示需要管理员权限" class="headerlink" title="win下执行命令时提示需要管理员权限"></a>win下执行命令时提示需要管理员权限</h4><p>方法1：可使用管理员命令窗口打开</p>
<p>方法2：参考<strong>永久环境变量</strong>，设置一个cmd脚本自动提升管理员权限</p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>mixley</tag>
        <tag>前端</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>MQ</title>
    <url>/2022/C64GPN.html</url>
    <content><![CDATA[<p><img src="/2022/C64GPN/1355489-20180823155405420-191105903.png" alt="img"></p>
]]></content>
      <categories>
        <category>学习</category>
        <category>MQ</category>
      </categories>
  </entry>
  <entry>
    <title>npmrc与scope</title>
    <url>/2022/JGXQTS.html</url>
    <content><![CDATA[<h2 id="npmrc简介"><a href="#npmrc简介" class="headerlink" title="npmrc简介"></a>npmrc简介</h2><p>我们经常会设置镜像源，用于加速，实际设置镜像源最终是保存在npm的配置文件中的，对应的配置文件叫.npmrc</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">npm config <span class="built_in">set</span> key value</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">下面是设置淘宝镜像的指令</span></span><br><span class="line">npm config set registry https://registry.npm.taobao.org</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">下面是全局设置，带了-g</span></span><br><span class="line"><span class="meta">#</span><span class="bash">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org -g</span></span><br></pre></td></tr></table></figure>

<p>对应的.npmrc文件会出现用户目录或npm的安装目录(全局情况下)，并会有一个记录值</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">registry</span>=https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure>

<p>优先级：<strong>项目配置&gt;用户配置&gt;全局配置</strong>，在项目根目录建立的.npmrc优先级别最高。仅支持单个地址。</p>
<h2 id="scope简介"><a href="#scope简介" class="headerlink" title="scope简介"></a>scope简介</h2><p>scope是作用域包的意思。使用@开头，到斜杠之间，整个包名带上域可以按”域”处理。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@scope/project-name</span><br></pre></td></tr></table></figure>

<p>域的作用更多是私服时使用，在发布时指定name=@scope/project-name，使用时，同样使用@scope/project-name。</p>
<p>在使用npm时可能会遇见私服A、私服B、私服C镜像的问题。但是按.npmrc文件的配置，我们也肯定知道，只能选择其中一个作为镜像地址。普遍的办法就是自己再搭建一个私服，引用A、B、C私服的包。还有一个更简单的办法是，指定域的服务地址。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">设置@scope开头的包从test.npm下载</span></span><br><span class="line">npm config set @scope:registry https://test.npm.com</span><br><span class="line"><span class="meta">#</span><span class="bash">设置@testScope1开头的包从服务1.2.3.4下载</span></span><br><span class="line">npm config set @testScope1:registry http://1.2.3.4/npm-test/</span><br></pre></td></tr></table></figure>

<p>最后保留的.npmrc文件里面对应的是</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line">@scope:<span class="attr">registry</span>=https://test.npm.com</span><br><span class="line">@testScope1:<span class="attr">registry</span>=http://<span class="number">1.2</span>.<span class="number">3.4</span>/npm-test/</span><br></pre></td></tr></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>简单的处理方式：手动建立一个.npmrc直接丢<strong>项目</strong>里面啦<strong>（优先级最高）</strong>，记得文件要<strong>和package.json同级</strong>，根目录哦。打开项目就是npm install，私包和公共包全下载了。</p>
]]></content>
      <categories>
        <category>学习</category>
        <category>node</category>
      </categories>
  </entry>
  <entry>
    <title>install</title>
    <url>/2022/QWNFBS.html</url>
    <content><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">指定windows-build-tools版本，4.0好安装一点</span></span><br><span class="line"><span class="meta">#</span><span class="bash">搞不定可以c</span></span><br><span class="line">npm install --global --production windows-build-tools@4.0.0</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>学习</category>
        <category>node</category>
      </categories>
  </entry>
  <entry>
    <title>Netflix</title>
    <url>/2022/1M55EP7.html</url>
    <content><![CDATA[<h4 id="Netflix组件替代方案"><a href="#Netflix组件替代方案" class="headerlink" title="Netflix组件替代方案"></a>Netflix组件替代方案</h4><p>Spring Cloud既然把Netflix OSS套件大刀阔斧的砍掉了，那总归得有替代方案吧。那是必然的，Spring Cloud团队给我们推荐了用于替代的产品：</p>
<table>
<thead>
<tr>
<th>Netflix</th>
<th>推荐替代品</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Hystrix</td>
<td>Resilience4j</td>
<td>Hystrix自己也推荐你使用它代替自己</td>
</tr>
<tr>
<td>Hystrix Dashboard / Turbine</td>
<td>Micrometer + Monitoring System</td>
<td>说白了，监控这件事交给更专业的组件去做</td>
</tr>
<tr>
<td>Ribbon</td>
<td>Spring Cloud Loadbalancer</td>
<td>忍不住了，Spring终究亲自出手</td>
</tr>
<tr>
<td>Zuul 1</td>
<td>Spring Cloud Gateway</td>
<td>忍不住了，Spring终究亲自出手</td>
</tr>
<tr>
<td>Archaius 1</td>
<td>Spring Boot外部化配置 + Spring Cloud配置</td>
<td>比Netflix实现的更好、更强大</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>学习</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>spring boot</tag>
        <tag>spring cloud</tag>
      </tags>
  </entry>
  <entry>
    <title>nrm</title>
    <url>/2022/29G4ED9.html</url>
    <content><![CDATA[<p>npm install -g nrm</p>
<p>nrm ls   //查看镜像源, *表示正在使用的</p>
<pre><code>* npm -------- https://registry.npmjs.org/       
  yarn ------- https://registry.yarnpkg.com/     
  cnpm ------- http://r.cnpmjs.org/
  taobao ----- https://registry.npm.taobao.org/  
  nj --------- https://registry.nodejitsu.com/   
  npmMirror -- https://skimdb.npmjs.com/registry/
  edunpm ----- http://registry.enpmjs.org/       
</code></pre>
<p>nrm use taobao //切换</p>
]]></content>
      <categories>
        <category>学习</category>
        <category>node</category>
      </categories>
  </entry>
  <entry>
    <title>Spring Cloud注册中心</title>
    <url>/2022/7PXA8K.html</url>
    <content><![CDATA[<p><a href="https://www.jianshu.com/p/bc2587ec4e56">https://www.jianshu.com/p/bc2587ec4e56</a></p>
<h3 id="1、-什么是注册中心"><a href="#1、-什么是注册中心" class="headerlink" title="1、 什么是注册中心"></a>1、 什么是注册中心</h3><p>注册中心可以说是微服务架构中的”通讯录“，它记录了服务和服务地址的映射关系。在分布式架构中，服务会注册到这里，当服务需要调用其它服务时，就到这里找到服务的地址，进行调用。<br> 服务提供者provider: 启动的时候向注册中心上报自己的网络信息。<br> 服务消费者consumer: 启动的时候向注册中心上报自己的网络信息，拉取provider的相关网络信息。</p>
<h3 id="2-、为什么需要注册中心"><a href="#2-、为什么需要注册中心" class="headerlink" title="2 、为什么需要注册中心"></a>2 、为什么需要注册中心</h3><p>微服务应用和机器越来越多，调用方需要知道接口的网络地址，如果靠配置文件的方式去控制网络地址，对于动态新增机器，维护带来很大问题。</p>
<ul>
<li>主流的注册中心：zookeeper、Eureka、consul、etcd 等</li>
</ul>
<h3 id="3、分布式应用知识CAP定理"><a href="#3、分布式应用知识CAP定理" class="headerlink" title="3、分布式应用知识CAP定理"></a>3、分布式应用知识CAP定理</h3><p>CAP定理：指的是在一个分布式系统中，Consistency（一致性）、 Availability（可用性）、Partition tolerance（分区容错性）,三者不可同时获得。</p>
<ul>
<li>一致性（C）：在分布式系统中的所有数据备份，在同一时刻是否同样的值。（所有节点在同一时间的数据完全一致，越多节点，数据同步越耗时）。</li>
<li>可用性（A）：负载过大后，集群整体是否还能响应客户端的读写请求。（服务一直可用，而且是正常响应时间）。</li>
<li>分区容错性（P）：分区容忍性，就是高可用性，一个节点崩了，并不影响其它的节点（100个节点，挂了几个，不影响服务，越多机器越好）。</li>
</ul>
<h3 id="4、分布式系统CAP注册中心选择"><a href="#4、分布式系统CAP注册中心选择" class="headerlink" title="4、分布式系统CAP注册中心选择"></a>4、分布式系统CAP注册中心选择</h3><p>CAP三者不可同时获得的原因：</p>
<ol>
<li>C A 满足的情况下，P不能满足的原因：<br> 数据同步(C)需要时间，也要正常的时间内响应(A)，那么机器数量就要少，所以P就不满足。</li>
<li>CP 满足的情况下，A不能满足的原因：<br> 数据同步(C)需要时间, 机器数量也多(P)，但是同步数据需要时间，所以不能再正常时间内响应，所以A就不满足。</li>
<li>AP 满足的情况下，C不能满足的原因：<br> 机器数量也多(P)，正常的时间内响应(A)，那么数据就不能及时同步到其他节点，所以C不满足。</li>
</ol>
<h6 id="注册中心选择："><a href="#注册中心选择：" class="headerlink" title="注册中心选择："></a>注册中心选择：</h6><ul>
<li><p>Zookeeper：CP设计，保证了一致性，集群搭建的时候，某个节点失效，则会进行选举行的leader，或者半数以上节点不可用，则无法提供服务，因此可用性没法满足</p>
</li>
<li><p>Eureka：AP原则，无主从节点，一个节点挂了，自动切换其他节点可以使用，去中心化<br> 结论：没有最好的选择，最好是根据业务场景来进行架构设计</p>
<p>注册中心对比图：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/16750801-6939c67bd9713238.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p>
<p>注册中心对比图</p>
</li>
</ul>
<h3 id="5、注册中心搭建-使用IDEA"><a href="#5、注册中心搭建-使用IDEA" class="headerlink" title="5、注册中心搭建(使用IDEA)"></a>5、注册中心搭建(使用IDEA)</h3><p>File –&gt; New –&gt;Project</p>
<ul>
<li><p>拉取项目</p>
<p><img src="https://upload-images.jianshu.io/upload_images/16750801-b170be204585485a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/16750801-3252793a85e5e2cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/16750801-9d74d4f2f2e3e735.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p>
</li>
<li><p>打开项目在启动类添加注解@EnableEurekaServer</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaServerApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(EurekaServerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>增加配置application.yml<br> (配置文件默认是application.properties格式，如需修改为yml直接重命名即可)</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 8761</span><br><span class="line"></span><br><span class="line">eureka:</span><br><span class="line">  instance:</span><br><span class="line">    hostname: localhost</span><br><span class="line">  client:</span><br><span class="line">  <span class="comment">#声明自己是个服务端</span></span><br><span class="line">    registerWithEureka: <span class="literal">false</span></span><br><span class="line">    fetchRegistry: <span class="literal">false</span></span><br><span class="line">    serviceUrl:</span><br><span class="line">      defaultZone: http://<span class="variable">$&#123;eureka.instance.hostname&#125;</span>:<span class="variable">$&#123;server.port&#125;</span>/eureka/</span><br></pre></td></tr></table></figure>

<ul>
<li>启动项目 访问注册中心页面<br> http:// localhost:8761</li>
</ul>
<h3 id="6、创建服务提供者向注册中心上报"><a href="#6、创建服务提供者向注册中心上报" class="headerlink" title="6、创建服务提供者向注册中心上报"></a>6、创建服务提供者向注册中心上报</h3><ul>
<li><p>如上所示创建注册中心一样创建项目，不同的是选择依赖如下:</p>
<p><img src="https://upload-images.jianshu.io/upload_images/16750801-7d25bbaf0be5406e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p>
</li>
<li><p>开发接口</p>
<p><img src="https://upload-images.jianshu.io/upload_images/16750801-e284a51d7b3ae84d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p>
</li>
<li><p>增加配置application.yml</p>
</li>
</ul>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: <span class="number">8771</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#服务的名称</span></span><br><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: product-service</span><br><span class="line"></span><br><span class="line"><span class="meta">#指定注册中心地址</span></span><br><span class="line">eureka:</span><br><span class="line">  client:</span><br><span class="line">    service-url:</span><br><span class="line">      defaultZone: http:<span class="comment">//localhost:8761/eureka/</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>启动服务</p>
<p>此时访问注册中心地址：http:// localhost:8761 就可以看到如下注册的服务了</p>
<p><img src="https://upload-images.jianshu.io/upload_images/16750801-ead6dfe3cad3ef26.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p>
</li>
</ul>
<h3 id="7、Eureka服务注册中心配置控制台问题"><a href="#7、Eureka服务注册中心配置控制台问题" class="headerlink" title="7、Eureka服务注册中心配置控制台问题"></a>7、Eureka服务注册中心配置控制台问题</h3><ol>
<li><p>eureka管理后台出现一串红色字体：是警告，说明有服务上线率低                 </p>
<p><img src="https://upload-images.jianshu.io/upload_images/16750801-2947d933608a24ef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p>
<p>由于自我保护模式默认是开启状态<br> 关闭检查方法：eureka服务端配置文件加入</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server:</span><br><span class="line">  enable-self-preservation: <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>注意:不建议关闭，因为关闭会导致如若因为网络问题没上报至注册中心的服务也会被认为挂掉而清除掉了此服务。</p>
<ol>
<li><p>为什么只加一个注册中心地址，就可以注册，而且很多资料显示启动类加注解@EnableEurekaClient</p>
<p>查阅官网，给出解释如下：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/16750801-ce9478fd6ad5ab9e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p>
<p>官方文档：</p>
<p><a href="http://cloud.spring.io/spring-cloud-netflix/single/spring-cloud-netflix.html#spring-cloud-eureka-server">http://cloud.spring.io/spring-cloud-netflix/single/spring-cloud-netflix.html#spring-cloud-eureka-server</a></p>
</li>
</ol>
<p>作者：二圈儿<br>链接：<a href="https://www.jianshu.com/p/bc2587ec4e56">https://www.jianshu.com/p/bc2587ec4e56</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
]]></content>
      <categories>
        <category>学习</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>spring</tag>
        <tag>架构设计</tag>
      </tags>
  </entry>
  <entry>
    <title>Undertow</title>
    <url>/2022/3FH16VE.html</url>
    <content><![CDATA[<p><a href="https://www.cnblogs.com/javastack/p/13552577.html">https://www.cnblogs.com/javastack/p/13552577.html</a></p>
<h1 id="吊打-Tomcat-，Undertow-性能很炸！！"><a href="#吊打-Tomcat-，Undertow-性能很炸！！" class="headerlink" title="吊打 Tomcat ，Undertow 性能很炸！！ "></a><a href="https://www.cnblogs.com/javastack/p/13552577.html">吊打 Tomcat ，Undertow 性能很炸！！ </a></h1><p>在 Java Web 容器的世界里，Tomcat 和 Jetty 是大名鼎鼎的、用的最多的开源项目，也是大众熟知的。</p>
<p>今天再介绍另外一款能和 Tomcat 媲美的神器：Undertow，据说性能方面还要吊打 Tomcat，如果你还不知道它，那你就 OUT 了。</p>
<p>我们来看下 Spring Boot 默认支持的三种 Servlet 容器：</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Servlet Version</th>
</tr>
</thead>
<tbody><tr>
<td>Tomcat 9.0</td>
<td>4.0</td>
</tr>
<tr>
<td>Jetty 9.4</td>
<td>3.1</td>
</tr>
<tr>
<td>Undertow 2.0</td>
<td>4.0</td>
</tr>
</tbody></table>
<p>以上来源于 Spring Boot 2.3.2 官方文档，更多信息请点击<a href="https://mp.weixin.qq.com/s/YfPFl1_l2sp9YirTppzRow">这里</a>参考这篇文章。</p>
<p>Undertow 它能成为 Spring Boot 默认集成的三大容器之一，就凭这点，我想就足以说明它的地位。</p>
<h2 id="Undertow-什么鬼？"><a href="#Undertow-什么鬼？" class="headerlink" title="Undertow 什么鬼？"></a>Undertow 什么鬼？</h2><p>Undertow 是 RedHat(红帽公司)的开源产品，采用 Java 开发，是一款灵活、高性能的 Web 服务器，提供了基于 NIO 的阻塞/非阻塞 APIs，也是 Wildfly 的默认 Web 容器。</p>
<p>搜索 Undertow：</p>
<p><img src="/2022/3FH16VE/1218593-20200824105305699-195814623.png" alt="img"></p>
<p>页面显示的是 JBoss Community，因为 2006 年 RedHat 收购了 JBoss，那也就不足为怪了。</p>
<p>Undertow 它是一个基于组合的体系结构，可以通过组合一系列小型处理器来构建一个 Web 服务器。这就让我们可以灵活的在 Java EE servlet 4.0 容器和底层非阻塞处理器或者其他更多之间进行选择。</p>
<p>Undertow 被设计成完全可嵌入式的，所以也叫嵌入式容器，具有易于使用的流畅构建 API，另外，Undertow 的生命周期也完全由所嵌入的应用程序所控制。</p>
<p>这也是为什么 Spring Boot 可以直接嵌入 Undertow 的原因，Undertow 它就是为了嵌入而发烧的。Spring Boot 基础知识就不介绍了，关注公众号Java技术栈在后台回复boot获取我写的系列教程。</p>
<p>官方网站：</p>
<blockquote>
<p><a href="https://undertow.io/">https://undertow.io/</a></p>
</blockquote>
<p>源码托管在 Github：</p>
<blockquote>
<p><a href="https://github.com/undertow-io/undertow">https://github.com/undertow-io/undertow</a></p>
</blockquote>
<h2 id="Undertow-有啥特性？"><a href="#Undertow-有啥特性？" class="headerlink" title="Undertow 有啥特性？"></a>Undertow 有啥特性？</h2><p><strong>1）HTTP/2 Support</strong></p>
<p>Undertow 支持 HTTP/2 开箱即用，不需要重写引导类路径。</p>
<p><strong>2）支持 HTTP 升级</strong></p>
<p>支持 HTTP 升级，允许多个协议通过 HTTP 端口上进行复用。</p>
<p><strong>3）支持 Web Socket</strong></p>
<p>Undertow 提供对 Web 套接字的全面支持，包括对 JSR-356 的支持。</p>
<p><strong>4）支持 Servlet 4.0</strong></p>
<p>Undertow 提供了对 Servlet 4.0 的支持，包括对嵌入式 Servlet 的支持，还可以混合部署 Servlet 和原生 Undertow 非阻塞处理程序。</p>
<p><strong>5）可嵌入式</strong></p>
<p>Undertow 可以嵌入到应用程序中，也可以通过几行代码独立运行。</p>
<p><strong>6）高灵活性</strong></p>
<p>一个 Undertow 服务器是通过链式处理器来配置的，可以根据需要添加功能，因此可以避免添加没有必要的功能。</p>
<h2 id="Undertow-性能如何？"><a href="#Undertow-性能如何？" class="headerlink" title="Undertow 性能如何？"></a>Undertow 性能如何？</h2><p>国外有篇帖子做了 Tomcat vs. Jetty vs. Undertow 三者的性能比较：</p>
<blockquote>
<p><a href="https://examples.javacodegeeks.com/enterprise-java/spring/tomcat-vs-jetty-vs-undertow-comparison-of-spring-boot-embedded-servlet-containers/">https://examples.javacodegeeks.com/enterprise-java/spring/tomcat-vs-jetty-vs-undertow-comparison-of-spring-boot-embedded-servlet-containers/</a></p>
</blockquote>
<p><img src="/2022/3FH16VE/1218593-20200824105306098-1526118676.png" alt="img"></p>
<p>从测试结果看，这三个 Servlet 容器都具有不错的性能，但 Undertow 性能更好，Tomcat 和 Jetty 紧随其后。</p>
<p>Jetty 在启动时的内存占用最大，为：311 MB, Tomcat 和 Undertow 的初始内存占用都很低，大约为：120 MB，而 Undertow 的初始内存占用最低，为：114 MB。</p>
<p>最后，关键的区别在于，Undertow 响应头参数默认包含 HTTP 持久连接信息，这个头参数在支持持久连接的客户端时，可以通过重用连接来优化性能。</p>
<h2 id="Show-me-the-code"><a href="#Show-me-the-code" class="headerlink" title="Show me the code"></a>Show me the code</h2><p>Undertow 目前有两个主要版本：</p>
<ul>
<li>2.1：当前支持 Servlet 4.0, JDK8+ 的稳定版本；</li>
<li>1.4：当前支持 Servlet 3.1, JDK7 的稳定版本；</li>
</ul>
<p>独立使用 Undertow 需要添加以下依赖：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.undertow<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>undertow-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.undertow<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>undertow-servlet<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.undertow<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>undertow-websockets-jsr<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>以下示例来源官网：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldServer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">final</span> String[] args)</span> </span>&#123;</span><br><span class="line">        Undertow server = Undertow.builder()</span><br><span class="line">                .addHttpListener(<span class="number">8080</span>, <span class="string">&quot;localhost&quot;</span>)</span><br><span class="line">                .setHandler(<span class="keyword">new</span> HttpHandler() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleRequest</span><span class="params">(<span class="keyword">final</span> HttpServerExchange exchange)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                        exchange.getResponseHeaders().put(Headers.CONTENT_TYPE, <span class="string">&quot;text/plain&quot;</span>);</span><br><span class="line">                        exchange.getResponseSender().send(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;).build();</span><br><span class="line">            server.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这是一个使用了异常 IO 的简单 Hello World 示例。</p>
<h2 id="Spring-Boot-amp-Undertow"><a href="#Spring-Boot-amp-Undertow" class="headerlink" title="Spring Boot &amp; Undertow"></a>Spring Boot &amp; Undertow</h2><p>上面讲到，Undertow 是为嵌入式而生的 Web 容器，又是 Spring Boot 默认集成的容器之一，下面栈长带大家来看下如何在 Spring Boot 中使用 Undertow。</p>
<p>因为在 <code>spring-boot-starter-web</code> 启动器中，Tomcat 是 Spring Boot 默认的嵌入式容器，即：<code>spring-boot-starter-tomcat</code>。</p>
<p>Spring Boot 还提供了其他两个启动器以方便进行代替：</p>
<ul>
<li>spring-boot-starter-jetty</li>
<li>spring-boot-starter-undertow</li>
</ul>
<p>下面来简单实战下，如何在 Spring Boot 中使用 Undertow。Spring Boot 基础知识就不介绍了，不熟悉的可以关注公众号Java技术栈在后台回复boot获取我写的系列教程。</p>
<p>排除 Tomcat 依赖，然后加入 Undertow 依赖：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- Exclude the Tomcat dependency --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Use Undertow instead --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-undertow<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>一步就完成集成了，当然实际情况还需要在 application 配置文件中加入 Undertow 的更多自定义或者优化配置参数。</p>
<p>Undertow容器的具体配置可以看这两个类：</p>
<ul>
<li>org.springframework.boot.autoconfigure.web.ServerProperties</li>
<li>org.springframework.boot.autoconfigure.web.ServerProperties.Undertow</li>
</ul>
<p>也可以看 Spring Boot 官方文档：</p>
<blockquote>
<p><a href="https://docs.spring.io/spring-boot/docs/2.3.2.RELEASE/reference/htmlsingle/#server-properties">https://docs.spring.io/spring-boot/docs/2.3.2.RELEASE/reference/htmlsingle/#server-properties</a></p>
</blockquote>
<p>上面有所有 Server 配置参数和说明。</p>
<p>再写一个测试方法测试下：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 微信公众号：Java技术栈</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">void</span> <span class="function"><span class="title">main</span>(<span class="params"><span class="built_in">String</span>[] args</span>)</span> &#123;</span><br><span class="line">        SpringApplication.run(Application.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(value = <span class="string">&quot;/undertow/test&quot;</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">String</span> <span class="function"><span class="title">undertow</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello undertow&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>启动 Application：</p>
<p><img src="/2022/3FH16VE/1218593-20200824105306581-130064430.png" alt="img"></p>
<p>如上所示，可以看到 Undertow 的启动日志。</p>
<p>访问测试方法：</p>
<blockquote>
<p><a href="http://localhost:8080/undertow/test">http://localhost:8080/undertow/test</a></p>
</blockquote>
<p><img src="/2022/3FH16VE/1218593-20200824105306889-830058720.png" alt="img"></p>
<p>输出成功，测试完成。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本文对 Undertow 作了一个介绍和集成实战，虽然 Undertow 性能很炸，但你可以去网上找一圈，根本没啥学习资料。</p>
<p>所以，对于学习和一般应用来说，Tomcat 足矣，一方面 Tomcat 学习资料多，另一方面 Tomcat 用的更广泛，很多坑别人帮你踩了，很多漏洞也已经暴露出来了。</p>
<p>那于那些一定要追求极致性能的又不想优化 Tomcat 的，可以考虑使用 Undertow，但同时你要有能力 Hold 住它，需要一定的积累经验，不然出一个问题你线上卡半天显然是不愿意看到的。</p>
<p>最后，网上很多文章说干掉 Tomcat 而要使用 Undertow 的，这就有点夸张，我只能呵呵了，持有保留意见，用啥都行，关键能不能用好。</p>
]]></content>
      <categories>
        <category>学习</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>spring</tag>
        <tag>spring boot</tag>
      </tags>
  </entry>
  <entry>
    <title>配置优先级</title>
    <url>/2022/22ZWC5R.html</url>
    <content><![CDATA[<p>前言<br>本文介绍SpringBoot常用外部化配置方法，其中优先级数值越高，优先级越大，会覆盖优先级底的配置</p>
<p>配置文件方式（优先级3）<br>boostrap.yml内指定spring.cloud.nacos.config.server-addr参数参考如下：</p>
<p>spring:<br>  application:<br>    name: service-a<br>  cloud:<br>    nacos:<br>      config:<br>        server-addr: 127.0.0.1:8848<br>        file-extension: yml<br>      discovery:<br>        server-addr: 127.0.0.1:8848<br>项目打包</p>
<p>target/service-a-0.0.1-SNAPSHOT.jar</p>
<p>Java系统属性方式（优先级6）<br>java -jar target/service-a-0.0.1-SNAPSHOT.jar -Dspring.cloud.nacos.config.server-addr=127.0.0.2:8848<br>命令行参数方式（优先级11）<br>java -jar target/service-a-0.0.1-SNAPSHOT.jar –spring.cloud.nacos.config.server-addr=127.0.0.3:8848<br>系统环境变量参数方式（优先级5）<br>export SPRING_CLOUD_NACOS_CONFIG_SERVERADDR=127.0.0.4:8848<br>java -jar target/service-a-0.0.1-SNAPSHOT.jar<br>注意：环境变量同意采用大写字母，不允许使用.-符号，采用下划线“_”取代点“.”  减号“-”直接删除。</p>
<p>说明：系统环境变量方式自由度高，可配合k8s部署脚本，动态切换到各运行环境</p>
<p>参考如下：</p>
<p>kind: Deployment<br>apiVersion: apps/v1<br>metadata:<br>  name: service-a<br>spec:<br>  template:<br>    spec:<br>      containers:<br>        - name: service-a<br>          env:<br>            - name: SPRING_PROFILES_ACTIVE<br>              value: prod<br>            - name: JAVA_OPTIONS<br>              value: ‘-XX:MaxRAMFraction=2’<br>            - name: SPRING_CLOUD_NACOS_CONFIG_SERVERADDR<br>              value: ‘10.0.0.2:8848’<br>            - name: SPRING_CLOUD_NACOS_DISCOVERY_SERVERADDR<br>              value: ‘10.0.0.2:8848’</p>
<p>加载顺序、优先级参考<br>Spring Boot uses a very particular PropertySource order that is designed to allow sensible<br>overriding of values. Properties are considered in the following order (with values from lower<br>items overriding earlier ones):</p>
<ol>
<li>Default properties (specified by setting SpringApplication.setDefaultProperties).</li>
<li>@PropertySource annotations on your @Configuration classes. Please note that such property<br>sources are not added to the Environment until the application context is being refreshed. This is<br>too late to configure certain properties such as logging.* and spring.main.* which are read<br>before refresh begins.</li>
<li>Config data (such as application.properties files)</li>
<li>A RandomValuePropertySource that has properties only in random.*.</li>
<li>OS environment variables.</li>
<li>Java System properties (System.getProperties()).</li>
<li>JNDI attributes from java:comp/env.</li>
<li>ServletContext init parameters.</li>
<li>ServletConfig init parameters.</li>
<li>Properties from SPRING_APPLICATION_JSON (inline JSON embedded in an environment variable or<br>system property).</li>
<li>Command line arguments.</li>
<li>properties attribute on your tests. Available on @SpringBootTest and the test annotations for<br>54testing a particular slice of your application.</li>
<li>@TestPropertySource annotations on your tests.</li>
<li>Devtools global settings properties in the $HOME/.config/spring-boot directory when devtools is<br>active.</li>
</ol>
]]></content>
      <categories>
        <category>学习</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>spring</tag>
        <tag>spring boot</tag>
      </tags>
  </entry>
  <entry>
    <title>基本概念</title>
    <url>/2021/338AHRP.html</url>
    <content><![CDATA[<p>系统·子系统</p>
<p>系统：由多个”部件”关联，使用某些”规则”去完成独立组件无法完成的”工作”。</p>
<p>部件：可以是子系统、模块、组件、框架等个体。</p>
<p>规则：是部件协作的规则</p>
<p>工作：指最终完成的事件</p>
<p>(工作   -&gt;部件1，部件2，规则连接)</p>
<p>子系统：是系统的组成部分，本身也是一个系统，子系统依然可以包含子系统(套娃)。</p>
<p>如：售票系统，有产品、票价、订单、登录等相关子系统和模块组成，产品子系统还有更多的架构设计，登录模块可以直接在售票系统中集成。</p>
<p>模块·组件</p>
<p>模块：逻辑划分功能，如：登录注册模块。</p>
<p>组件：物理划分功能，如：鉴权组件(可复用，组件化编程)</p>
<p>我们可以将一个或多个模块的全部或一部分封装为组件，提供单元复用。</p>
<p>框架·架构</p>
<p>如Spring MVC框架，属于MVC架构。</p>
]]></content>
      <categories>
        <category>学习</category>
        <category>架构师之路</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>架构设计</tag>
      </tags>
  </entry>
  <entry>
    <title>批量插入</title>
    <url>/2022/2W88D9Q.html</url>
    <content><![CDATA[<p>批量方式插入数据库</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">SqlSession batchSqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 获取批量方式的sqlsession</span></span><br><span class="line">    batchSqlSession = sessionFactory.openSession(ExecutorType.BATCH, <span class="keyword">false</span>);</span><br><span class="line">    <span class="keyword">for</span> (Ticket ticket : tickets) &#123;</span><br><span class="line">        batchSqlSession.insert(<span class="string">&quot;com.newland.mapper.TicketMapper.insert&quot;</span>,ticket);</span><br><span class="line">    &#125;</span><br><span class="line">    batchSqlSession.commit();</span><br><span class="line">&#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">    batchSqlSession.rollback();</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">    <span class="keyword">throw</span> e;</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">    batchSqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>学习</category>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>图片的由来与存储</title>
    <url>/2021/1DC25F7.html</url>
    <content><![CDATA[<p>我们知道，计算机中的数据都是0和1，但是展示在我们屏幕上的却是多姿多彩，文字、图片、视频和游戏等等，0和1怎么变成我们从屏幕看到的内容的？</p>
<h2 id="黑白图片"><a href="#黑白图片" class="headerlink" title="黑白图片"></a>黑白图片</h2><p>假定，1=白色，0=黑色，我们现在就可以用0和1组合为一个黑白画面了</p>
<p>我们使用ps新建一个只有0、1的位图</p>
<p><img src="https://mixley.stdcdn.com/2021/07/face/1.png" alt="img"></p>
<p>图片新建完成如下（放大后效果）</p>
<p><img src="https://mixley.stdcdn.com/2021/07/face/2.png" alt="img"></p>
<p>假定我们直接按1表示白，0表示黑的方式排列，可以得到我们的存储结果</p>
<p><img src="https://mixley.stdcdn.com/2021/07/face/3.png" alt="img"></p>
<h2 id="图片存储格式"><a href="#图片存储格式" class="headerlink" title="图片存储格式"></a>图片存储格式</h2><p>我们按 OS/2 bmp 方式进行保存（win位图最初保存方式，且无压缩，这里面去除了ps自动生成的元信息）</p>
<p><img src="https://mixley.stdcdn.com/2021/07/face/4.png" alt="img"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">OS/2 bmp：</span><br><span class="line">0x00-0x01: 2byte 424D表示BMP格式</span><br><span class="line">0x02-0x05: 4byte 此文件大小是0x0030bit(注意高低位，低位在前)</span><br><span class="line">0x06-0x09: 4byte 保留位</span><br><span class="line">0x0A-0x0D: 4byte 偏移量，数据开始起点，图中数据从0x0020开始 </span><br><span class="line">0x0E-0x11: 4byte BITMAPINFOHEADER结构体大小(以下为结构体定义)，图中大小为0x000C（OS/2：12 | Windows DIB 40）</span><br><span class="line">0x12-0x13: 2byte 图像宽 图中为4像素</span><br><span class="line">0x14-0x15: 2byte 图像高 图中为2像素 </span><br><span class="line">0x16-0x17: 2byte 图像平面数 图中为1</span><br><span class="line">0x18-0x19: 2byte 一个像素有多少bit 图中为1</span><br><span class="line">0x1A-0x1C: 3byte 0表示的颜色BGR格式，图中为0x000000黑色</span><br><span class="line">0x1D-0x1F: 3byte 1表示的颜色BGR格式，图中为0xFFFFFF白色</span><br></pre></td></tr></table></figure>

<p>由于Windows默认的扫描的最小单位是4byte，所以bmp默认每行对齐是4的倍数，我们可以得到第一行的长度为宽度4*1分辨率*1位(bit)=4bit,对齐为byte时最小单位4byte，所以需要占用4byte，但仅前4个bit填充的值有效。</p>
<p>且bmp是从左下角开始扫码，从左到右，从下到上，二进制转换0101为5，1010为a</p>
<p>最终对应的结果在不对齐的情况下为a5a5，在对齐后补0的情况如下所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A0 00 00 00 50 00 00 00 A0 00 00 00 50 00 00 00</span><br></pre></td></tr></table></figure>

<p>但是ps等软件在生成时会有一些元信息，所以可能会出现对齐为4byte时不是补0的情况，在算法读取时会自动跳过，但是人眼进行查看时，会造成干扰，自己排除掉即可</p>
<p><img src="https://mixley.stdcdn.com/2021/07/face/5.png" alt="img"></p>
<p>上图中，6 7F、8 22 56 F3等数据都是干扰数据，可替换为0或者替换为其它内容。</p>
<h2 id="图片放大"><a href="#图片放大" class="headerlink" title="图片放大"></a>图片放大</h2><p>图片放大是在图片使用中最常使用的功能，我们从图片放大这个角度看下黑白颜色后面该怎么处理，尝试放大下面这个长宽2x2的黑白图</p>
<p><img src="https://mixley.stdcdn.com/2021/07/face/6.png" alt="img"></p>
<p>我们存储在电脑中的数据可以抽象理解为，长宽2个像素的</p>
<p><img src="https://mixley.stdcdn.com/2021/07/face/7.png" alt="img"></p>
<p>当我们将这个放大为长宽4个像素很好处理</p>
<p>![а о 11  е 011  11 ее  11 ее ](<a href="https://mixley.stdcdn.com/2021/07/face/8">https://mixley.stdcdn.com/2021/07/face/8</a> .png)</p>
<p>我们得到的图片还是这样的没什么变化</p>
<p>但是当我们想将这个放大为长宽3像素呢？要知道，我们的图片放大缩小，从来都不是按倍数放大，动不动就直接放大2倍的，几乎没有。</p>
<p>可能我们得到的理想结果是</p>
<p>![e ø.5 1  ø.5 ø.5 ø.s ](<a href="https://mixley.stdcdn.com/2021/07/face/9">https://mixley.stdcdn.com/2021/07/face/9</a> .png)</p>
<p>但是我们的01世界中，不存在0.5这种数据，按四舍五入或者退1法，我们可以得到这样的结果</p>
<p>![1 1 1 ](<a href="https://mixley.stdcdn.com/2021/07/face/10">https://mixley.stdcdn.com/2021/07/face/10</a> .png)</p>
<p><img src="https://mixley.stdcdn.com/2021/07/face/11.png" alt="img"></p>
<p>但是这无疑是差距太大了，一个小的图片差距都如此大，更大一点的图片也会出现更大的偏差，无疑只使用黑白两个颜色是无法将图片的细节表述清楚的。</p>
<p>那么我们现在拓展下：0b00表示黑色，0b11表示白色，0b01与0b10表示灰色。这样在放大的时候可以有灰色填充，某些细节可以达到完善的程度了。（这只是一个极端例子，不用深究,我要表达的是0与1黑白中间拓展更多的颜色表达，让图片内容更加丰富）</p>
<h2 id="8位灰阶"><a href="#8位灰阶" class="headerlink" title="8位灰阶"></a>8位灰阶</h2><p>在计算机中，8位是1个字节，1byte=8bit，我们存储的最小单元几乎都是使用byte进行存储，8位灰阶就是将黑白颜色数据继续拓展，都是黑、灰、白色之间，有256个层次组成。</p>
<p>或许五彩斑斓的黑无法实现，但是层次分明的灰是可以达成的。</p>
<p><img src="https://mixley.stdcdn.com/2021/07/face/12.png" alt="img"></p>
<h2 id="彩色图片"><a href="#彩色图片" class="headerlink" title="彩色图片"></a>彩色图片</h2><p>层次分明的灰再怎么分明，都无法表达我们看到的真实颜色，光学三原色与颜料三原色中红、绿、蓝可以组合出所有颜色，依据无色系黑白灰+彩色系红绿蓝可以组合出任何颜色的特性，我们继续拓展到0和1中的队伍来。</p>
<p><img src="https://mixley.stdcdn.com/2021/07/face/13.jpeg" alt="img"></p>
<p>首先 红+绿+蓝，在RGB光学三原色中可以组成白色，所有颜色都不存在，则可以变成黑色。</p>
<p>按上图我们先简单扩展（自定义），3位表示3个颜色0b000表示白色 0b100 表示红色 0b010表示绿色，0b001表示蓝色，0b111是白色，对应的0b010+0b001=0b011，蓝+绿=青,0b110=红+绿=黄，0b101=红+蓝=紫。彩色出现了。</p>
<p>那么现在我们已经有了最基本的颜色后，我们依然需要进行图片的放大</p>
<p>看下面这个四像素的图片，我们依然希望放大</p>
<p><img src="https://mixley.stdcdn.com/2021/07/face/14.png" alt="img"></p>
<p><img src="https://mixley.stdcdn.com/2021/07/face/15.png" alt="е10 001  тео оое "></p>
<p>图片的放大肯定不是相加，而是中间是一个过渡的颜色进行替换，我们现在使用最简单粗暴的替换颜色相加取中间值的方式处理。</p>
<p>以红绿中间的填充色为例（0b010+0b100）/2,应该是靠近这两个颜色中的颜色，结果是2.5，我们不能用0b010绿色去填充，也不能用0b100红色去填充，如果使用0b110,黄色，更是相差太远，在一个大的照片的放大过程中，尽量的贴合两边的颜色的中间颜色，应该是棕褐色，既有绿的过渡也需要红的过渡。(下图的展示可能不是很明显，也不很合适，因为图片的放大，极少有长宽2像素放大为长宽3像素这种操作，颜色直接的过渡也不会这么夸张。)</p>
<p><img src="https://mixley.stdcdn.com/2021/07/face/img.png" alt="img"></p>
<p>对于我们棕褐色，在我们刚才的拓展中，是不存在的，正如灰色在01表示的黑白中不存在，所以我们依然需要一个拓展来表达更多的颜色。</p>
<p>我们现在将颜色拓展为6个bit了，0b000000表示黑色，0b111111表示白色，其余的0b1100000是红，0b001100是绿，0b000011是蓝色。第0-2位的00-11中可以表达4种不同程度的红，黑（无红）、淡红、浅红、正红，其余的等同划分。</p>
<p>现在，差不多可以将棕色表达出来了，虽然依然不够细致，我们现在有2^6 = 64种颜色了。</p>
<h2 id="高彩色"><a href="#高彩色" class="headerlink" title="高彩色"></a>高彩色</h2><p>15或16位彩色（高彩色）：电脑所用的三原色是红、绿和蓝。在15位彩色中，每种原色有2^5 = 32个层次，共32768种颜色；而在16位彩色中，绿色有2^6=64个，共有65536个颜色</p>
<h2 id="真彩色"><a href="#真彩色" class="headerlink" title="真彩色"></a>真彩色</h2><p>24位彩色（真彩色）：每种原色都有256个层次，它们的组合便有256<em>256</em>256种颜色。</p>
<h2 id="32位彩色"><a href="#32位彩色" class="headerlink" title="32位彩色"></a>32位彩色</h2><p>32位彩色：除了24位彩色的颜色外，额外的8位是储存重叠图层的图形资料(alpha频道)。</p>
<p>另外有高动态范围影像(High Dynamic Range Image)，这种影像使用超过一般的256色阶来储存影像，通常来说每个像素会分配到32+32+32个bit来储存颜色资讯，也就是说对于每一个原色都使用一个32bit的浮点数来储存.</p>
<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p><a href="https://www.cnblogs.com/gwind/p/8215771.html">各种类型文件头标准编码</a></p>
]]></content>
      <categories>
        <category>学习</category>
        <category>深度</category>
      </categories>
      <tags>
        <tag>mixley</tag>
      </tags>
  </entry>
  <entry>
    <title>明史·海瑞传</title>
    <url>/2021/1TBZ6GQ.html</url>
    <content><![CDATA[<h2 id="明史·海瑞传"><a href="#明史·海瑞传" class="headerlink" title="明史·海瑞传"></a>明史·海瑞传</h2><h3 id="来源声明"><a href="#来源声明" class="headerlink" title="来源声明"></a>来源声明</h3><p>2022届高三一轮复习之文言文整体阅读题目</p>
<p>试卷问题网络位置：<a href="http://cooco.net.cn/question/11748.html">可圈可点(微信收费)</a>、<a href="https://baijiahao.baidu.com/s?id=1694794526031280061">百度百家号</a>，非原创，联系侵删。</p>
<h3 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h3><p>海瑞，字汝贤，琼山人。举乡试。署南平教谕，迁淳安知县。布袍脱粟，令老仆艺蔬自给。<strong>总督胡宗宪尝语人曰昨闻海令为母寿市肉二斤矣都御史鄢懋卿行部过供具甚薄抗言邑小不足容车马懋卿恚甚然素闻瑞名为敛威去</strong>久之，陆光祖为文选，擢瑞户部主事。时世宗享国日久，不视朝，深居西苑，专意斋醮。督抚大吏争上符瑞，礼官辄表贺，瑞独上疏。帝得疏，大怒，抵之地，顾左右曰：“趣执之，无使得遁！”宦官黄锦在侧曰：“此人素有痴名。闻其上疏时，自知触忤当死，市一棺，诀妻子，待罪于朝，僮仆亦奔散无留者，是不遁也。”帝默然。少顷复取读之，日再三，为感动太息，留中者数月。</p>
<p>遂逮瑞下诏狱，究主使者。帝初崩，外庭多未知。提牢主事闻状，以瑞且见用，设酒馔款之。瑞自疑当赴西市，恣饮啖，不顾。主事因附耳语：“宫车适晏驾，先生今即出大用矣。”即大恸，陨绝于地。既释，复故官。帝屡欲召用瑞，执政阴沮之，乃以为南京右都御史。<strong>诸司素偷惰，瑞以身矫之。有御史偶陈戏乐，欲遵太祖法予之杖。</strong>百司惴恐，多患苦之。提学御史房寰恐见纠擿，欲先发，给事中钟宇淳复怂恿，寰再上疏丑诋。瑞亦屡疏乞休，慰留不允。十五年，卒官。瑞无子。卒时，佥都御史王用汲入视，葛帏敝籯，有寒士所不堪者。因泣下，醵金为敛。<strong>小民罢市。丧出江上，白衣冠送者夹岸，酹而哭者百里不绝。</strong>瑞生平为学，以刚为主，因自号刚峰，天下称刚峰先生。故所至力行清丈，颁一条鞭法。意主于利民，而行事不能无偏云。</p>
<p>（节选自《明史·海瑞传》）</p>
<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>10．下列对文中画波浪线部分的断句，正确的一项是（ ）</p>
<p>A．总督胡宗宪尝语人曰/昨闻海令为母寿/市肉二斤矣/都御史鄢懋卿行部过/供具甚薄/抗言邑小不足容车马/懋卿恚甚/然素闻瑞名/为敛威去/</p>
<p>B．总督胡宗宪尝语人曰/昨闻海令为母寿/市肉二斤矣/都御史鄢懋卿行部过/供具甚薄/抗言邑小不足容车马/懋卿恚甚然/素闻瑞名/为敛威去/</p>
<p>C．总督胡宗宪尝语人曰/昨闻海令/为母寿市肉二斤矣/都御史鄢懋卿行部过/供具甚薄/抗言邑小不足容车马/懋卿恚甚/然素闻瑞名/为敛威去/</p>
<p>D．总督胡宗宪尝语人曰/昨闻海令/为母寿市肉二斤矣/都御史鄢懋卿行部过/供具甚薄/抗言邑小不足容车马/懋卿恚甚然/素闻瑞名/为敛威去/</p>
<p>11．下列对文中加点词语的相关内容的解说，不正确的一项是（ ）</p>
<p>A．乡试是中国古代科举考试之一，由各地州、府主持，考生来自全国各地。</p>
<p>B．宦官也称太监，是古代宫中侍奉皇帝及其家属的人员，由阉割后的男子充任。</p>
<p>C．晏驾是帝王死去的委婉说法，“晏”义为晚，晏驾指帝王车驾未能按时发出。</p>
<p>D．执政指掌管国家政事，又指执掌国家大权的重臣，还可作为高级官员的通称。</p>
<p>12．下列对原文有关内容的概括和分析，不正确的一项是（ ）</p>
<p>A．海瑞生活俭朴，时时关心国事。他担任淳安知县时，布衣粗食，老仆种菜；任职户部时，见皇上深居西苑，不亲理朝政，又独自上奏劝谏。</p>
<p>B．海瑞劝谏皇上，不惧以死报国。皇上得疏大怒，命令火速捉拿，不要让他逃遁，但得知海瑞待罪于朝不会逃跑后，又细读疏文，并感动叹息。</p>
<p>C．海瑞严厉执法，受到小人诋毁。他任南京右都御史时，因要求严明，部下怨恨，部属房寰惧遭揭发，又受怂恿，上疏诋毁，致使海瑞被迫退休。</p>
<p>D．海瑞为人刚直，身后穷困窘迫。他生平以刚为主，虽然一心为民，但行事却有偏颇；他一生清廉自律，家境贫寒，死后竟至靠人凑钱殓葬。</p>
<p>13．把文中画横线的句子翻译成现代汉语。</p>
<p>（1）诸司素偷惰，瑞以身矫之。有御史偶陈戏乐，欲遵太祖法予之杖。</p>
<p>（2）小民罢市。丧出江上，白衣冠送者夹岸，酹而哭者百里不绝。</p>
<p>14．海瑞在向明世宗上疏前，为什么要事先“市一棺，诀妻子”？请简要说明。</p>
<h3 id="阅读答案"><a href="#阅读答案" class="headerlink" title="阅读答案"></a>阅读答案</h3><h4 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a>【答案】</h4><p>10．A</p>
<p>11．A</p>
<p>12．C</p>
<p>13．（1）众多官吏一向偷安怠惰，海瑞以自己的行动加以纠正。有御史偶尔演戏奏乐，海瑞将要遵照太祖法规对他杖责。</p>
<p>（2）市民停业悼念。灵柩经过江面，民众穿戴白衣帽两岸送行，洒酒祭奠而哭的人百里不绝。</p>
<p>14．①自知触怒皇帝将死；②抱定必死的决心。</p>
<h4 id="【分析】"><a href="#【分析】" class="headerlink" title="【分析】"></a>【分析】</h4><p>10．本题考查文言文断句能力。</p>
<p>解答本题注意各选项间不同之处。“昨闻海令为母寿”，是一个完整的句子，中间不宜断开，排除C项、D项；“然”表转折，与后文关系密切，所以应在它之前断开，排除B项。</p>
<p>画波浪线部分句意为：总督胡宗宪曾经告诉别人说：“昨天我听说海县令为母亲祝寿，只买了二斤肉。”都御史（官职名）鄢懋卿从淳安县经过，海瑞对他们的招待都很简陋，说淳安县地方太小容不下车马。鄢懋卿非常愤恨。但是一直都听说过海瑞的名声，只好收敛威风离开了。</p>
<p>故选A。</p>
<p>11．本题考查文化常识。</p>
<p>A项，“考生来自全国各地”错误，考生为本地人。故选A。</p>
<p>12．</p>
<p>本题考查筛选并整合文中信息，归纳内容要点、概括中心意思的能力。</p>
<p>C项，“致使海瑞被迫退休”说法错误，原文为“瑞亦屡疏乞休，慰留不允”，皇上劝慰他，不让他辞官，并未“被迫退休”。</p>
<p>故选C。</p>
<p>13．本题考查理解并翻译文中的句子的能力。</p>
<p>（1）中“素”，一向；“矫”，矫正，纠正；“杖”，名词用作动词，杖责。</p>
<p>（2）中“罢市”，停业；“丧”，灵柩；“白衣冠”，名词用作动词，穿白衣戴白帽；“酹”，洒酒祭奠。</p>
<p>14．本题考查筛选并整合文章信息。</p>
<p>由“自知触忤当死”可知他自知触怒皇帝将死，所以买了一口棺材，诀别妻子儿女；</p>
<p>由“待罪于朝，僮仆亦奔散无留者，是不遁也”可知他抱定了必死的决心，并不打算逃走，而是遣散童仆，等待皇上降罪。</p>
<h3 id="译文"><a href="#译文" class="headerlink" title="译文"></a>译文</h3><p>海瑞，字汝贤，琼山人。乡试中举。（海瑞）代理南平县教谕，升任淳安县知县，在任上穿布衣，吃粗米，让家中老仆种菜自给。总督胡宗宪曾经告诉别人说：“昨天我听说海县令为母亲祝寿，只买了二斤肉。”都御史（官职名）鄢懋卿从淳安县经过，海瑞对他们的招待都很简陋，说淳安县地方太小容不下车马。鄢懋卿非常愤恨。但是一直都听说过海瑞的名声，只好收敛威风离开了。过了一段时间，陆光祖任吏部文选清吏司郎中，他提拔海瑞为户部主事。当时世宗在位时日已久，不再上朝听政，深居皇宫西苑，专心一意斋戒祀神。总督巡抚大臣争相进献各种祥瑞征兆，礼部官员往往就此上表祝贺，唯独海瑞一人上疏。世宗皇帝看了奏章大怒，把它扔到地下，回头对身边的宦官说：“赶紧把他抓起来，别让他跑了。”宦官黄锦在一旁说：“此人一向有痴名。听说他上疏时，自己知道冒犯皇上难免一死，就买了一口棺材，诀别妻子儿女，在朝廷待罪，家中僮仆也都是打发走了没有留一个，这表明他并不打算逃走。”世宗皇帝沉默不语。</p>
<p>过了一会儿，皇帝又拿出奏章来看，（就这样）一天之中看了两三次，被感动而叹息，将它留在宫中数月。于是命令逮捕海瑞，关进诏狱，追究主使他上疏的人。世宗刚去世时，外界多不知道。而监狱主事听到消息，估计海瑞将会受到任用，因此办了酒菜款待海瑞。海瑞怀疑以为要赴西市刑场斩首，于是就恣意饮食，没有顾及其它。提牢主事这时贴着海瑞耳语：“皇上适才已经驾崩，您马上就要出狱，受到重用了。”海瑞随即十分哀恸，晕倒在地。海瑞获释后，恢复了原来的官职。神宗数次想召用海瑞，但被执政的大臣暗地里阻止了，只当了南京右都御史。众多官吏一向偷安怠惰，海瑞以自己的行动加以纠正。有御史偶尔演戏奏乐，海瑞将要遵照太祖法规对他杖责。</p>
<p>官员们惶恐不安，多对此叫苦不迭。提学御史房寰，担心被检举揭露，想先下手发难，给事中钟宇淳又从中怂恿，房寰便二次上疏诬蔑海瑞。海瑞也屡次上疏要求告老回家，皇上劝慰他，不让他辞官。万历十五年，海瑞死于南京任上。海瑞没有儿子。去世之时，佥都御史王用汲前来探视，见他房中只有葛布做的帐子和空箱笼，过着一般寒士都不能忍受的生活。因而感动得流了泪，出面凑钱作为敛棺之用。市民停业悼念。灵柩经过江面，民众穿戴白衣帽两岸送行，洒酒祭奠而哭的人百里不绝。海瑞平生治学，以刚为主，因此自号为刚峰，天下人称他为刚峰先生。所以所到之处均致力于清丈土地，颁行一条鞭法。他的思想主要在于利民，而行事很难避免会出现一些偏差。</p>
]]></content>
      <categories>
        <category>学习</category>
        <category>语文老师</category>
      </categories>
  </entry>
  <entry>
    <title>nacos</title>
    <url>/2022/145360.html</url>
    <content><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull nacos/nacos-server</span><br></pre></td></tr></table></figure>

<p><a href="https://www.cnblogs.com/niunafei/p/12803965.html">https://www.cnblogs.com/niunafei/p/12803965.html</a></p>
<p>url后缀需要添加：&amp;serverTimezone=UTC</p>
<p>完整：</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">MYSQL_SERVICE_DB_PARAM</span>=<span class="string">characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useSSL=false&amp;serverTimezone=UTC</span></span><br><span class="line"><span class="attr">SPRING_DATASOURCE_PLATFORM</span>=<span class="string">mysql</span></span><br><span class="line"><span class="attr">MYSQL_DATABASE_NUM</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">MYSQL_SERVICE_HOST</span>=<span class="string">128.0.0.172</span></span><br><span class="line"><span class="attr">MYSQL_SERVICE_PORT</span>=<span class="string">3307</span></span><br><span class="line"><span class="attr">MYSQL_SERVICE_DB_NAME</span>=<span class="string">nacos</span></span><br><span class="line"><span class="attr">MYSQL_SERVICE_USER</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">MYSQL_SERVICE_PASSWORD</span>=<span class="string">1234</span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">-e PREFER_HOST_MODE=hostname \</span><br><span class="line">-e MODE=standalone \</span><br><span class="line">-e SPRING_DATASOURCE_PLATFORM=mysql \</span><br><span class="line">-e MYSQL_MASTER_SERVICE_HOST=127.0.0.1 \</span><br><span class="line">-e MYSQL_MASTER_SERVICE_PORT=3306 \</span><br><span class="line">-e MYSQL_MASTER_SERVICE_USER=nacos_config \</span><br><span class="line">-e MYSQL_MASTER_SERVICE_PASSWORD=DdsNLrPeRfZiDGNE \</span><br><span class="line">-e MYSQL_MASTER_SERVICE_DB_NAME=nacos_config \</span><br><span class="line">-e MYSQL_SLAVE_SERVICE_HOST=127.0.0.1 \</span><br><span class="line">-p 8848:8848 \</span><br><span class="line">--name nacos \</span><br><span class="line">--restart=always \</span><br><span class="line">nacos/nacos-server</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">开启鉴权，切换端口</span></span><br><span class="line">docker run -d \</span><br><span class="line">-e PREFER_HOST_MODE=hostname \</span><br><span class="line">-e MODE=standalone \</span><br><span class="line">-e SPRING_DATASOURCE_PLATFORM=mysql \</span><br><span class="line">-e MYSQL_DATABASE_NUM=1 \</span><br><span class="line">-e MYSQL_SERVICE_HOST=10.177.43.37 \</span><br><span class="line">-e MYSQL_SERVICE_PORT=3306 \</span><br><span class="line">-e MYSQL_SERVICE_USER=root \</span><br><span class="line">-e MYSQL_SERVICE_PASSWORD=1234 \</span><br><span class="line">-e MYSQL_SERVICE_DB_NAME=nacos \</span><br><span class="line">-e NACOS_AUTH_CACHE_ENABLE=true \</span><br><span class="line">-e NACOS_AUTH_ENABLE=true \</span><br><span class="line">-e NACOS_APPLICATION_PORT=18848 \</span><br><span class="line">-p 18848:18848 \</span><br><span class="line">--name nacosAuth \</span><br><span class="line">--restart=always \</span><br><span class="line">nacos/nacos-server</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>运维</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>常用工具精品软件(持续更新)</title>
    <url>/2021/32T7DFH.html</url>
    <content><![CDATA[<h2 id="系统高效快捷键"><a href="#系统高效快捷键" class="headerlink" title="系统高效快捷键"></a>系统高效快捷键</h2><table>
<thead>
<tr>
<th>Windows 部分高效快捷键</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>打开文件管理器</td>
<td>Win键 + E</td>
</tr>
<tr>
<td>剪贴板历史功能(还能固定某些选项)</td>
<td>Win键 + V</td>
</tr>
<tr>
<td>打开高级用户功能（等同右击开始）</td>
<td>Win键 + X</td>
</tr>
<tr>
<td>显示桌面</td>
<td>Win键 + D</td>
</tr>
<tr>
<td>Xbox游戏录制工具栏(虽然是游戏工具栏，但是提供录屏、截屏)</td>
<td>Win键 + G</td>
</tr>
<tr>
<td>截屏(推荐，可延迟截图，可编辑)</td>
<td>Win键 + Shift + S</td>
</tr>
<tr>
<td>录屏(推荐，录屏后可再Win+G中编辑导出)</td>
<td>Win键 + Alt + R</td>
</tr>
<tr>
<td>运行（可输入命令行）</td>
<td>Win键 + R</td>
</tr>
<tr>
<td>Windows搜索(开启搜索增强后，文件搜索更方便)</td>
<td>Win键 + S</td>
</tr>
<tr>
<td>任务管理器</td>
<td>Ctrl+Shift+Esc</td>
</tr>
</tbody></table>
<h2 id="装机必备"><a href="#装机必备" class="headerlink" title="装机必备"></a>装机必备</h2><h3 id="uTools-免费效率神器"><a href="#uTools-免费效率神器" class="headerlink" title="uTools  免费效率神器"></a><a href="https://u.tools/">uTools</a>  免费效率神器</h3><p>对我而言，最常用的是搜索软件和翻译【大雾】，这种类似的效率神器还有<a href="https://docs.microsoft.com/zh-cn/windows/powertoys/">PowerToys</a>微软家的（功能不多）、<a href="https://getquicker.net/">Quicker</a>国产指尖工具集（这个可以与其它工具结合，设计感不强需要一段时间上手，但是很强大）、<a href="https://github.com/Wox-launcher/Wox">Wox</a>开源win下<strong>Spotlight</strong>神器（和uTools功能重合）……当然，嫌弃麻烦的可能使用Win+S直接打开windows搜索功能完成一切，毕竟现在win的搜索功能也不差了，而mac下面有Spotlight了。</p>
<p>快捷键 「Alt + Space」，功能：搜索软件、使用插件提供的场景功能</p>
<h3 id="7-zip-开源压缩软件"><a href="#7-zip-开源压缩软件" class="headerlink" title="7-zip  开源压缩软件"></a><a href="https://sparanoid.com/lab/7z/">7-zip</a>  开源压缩软件</h3><p>这里必须说一句，7z养活了一大票的国产软件，实际上按道理使用开源协议写的程序也应该开源的，但是实际国产某些X压不仅不开源，一开始还夹带私货让7z或者其它压缩软件无法兼容。后续，现在的国产压缩软件不再去搞什么“独家”压缩算法了，现在兼容性都不错。开源与不开源的争论不好说，如果现在都这样做：使用社区开源的产品做收费，不贡献代码去提升社区产品，甚至想把社区产品击垮。这样的行为真是，没法说。。</p>
<h3 id="QuickLook-开源空格键预览神器-仅Win-Mac本身有空格预览功能"><a href="#QuickLook-开源空格键预览神器-仅Win-Mac本身有空格预览功能" class="headerlink" title="QuickLook  开源空格键预览神器(仅Win,Mac本身有空格预览功能)"></a><a href="https://pooi.moe/QuickLook/">QuickLook </a> 开源空格键预览神器(仅Win,Mac本身有空格预览功能)</h3><p>空格键可以预览声音、视频、macdown、doc、excel等等，无需下载安装对应的软件，只需要在对应文件上按下空格。</p>
<p>office文档需要插件，<a href="https://github.com/QL-Win/QuickLook/wiki/Available-Plugins%EF%BC%8C%E4%B8%8B%E8%BD%BD%E5%90%8E%E7%A9%BA%E6%A0%BC%E9%94%AE%E5%AE%89%E8%A3%85">https://github.com/QL-Win/QuickLook/wiki/Available-Plugins，下载后空格键安装</a></p>
<h2 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h2><h3 id="VsCode-微软开源编辑器-VSCodium前者的开源编译版"><a href="#VsCode-微软开源编辑器-VSCodium前者的开源编译版" class="headerlink" title="VsCode 微软开源编辑器/VSCodium前者的开源编译版"></a><a href="https://code.visualstudio.com/">VsCode </a>微软开源编辑器/<a href="https://vscodium.com/">VSCodium</a>前者的开源编译版</h3><p>大名鼎鼎的VsCode，记事本超级替代工具，编码人员神器，超多插件。介意微软遥测等功能的，可以使用开源编译版本VSCodium，VSCodium已经是能找到的最”干净”的vscode了 。</p>
<p>VsCode缺陷：正则替换大文件会卡顿</p>
<h3 id="Typora-MacDown编辑神器"><a href="#Typora-MacDown编辑神器" class="headerlink" title="Typora  MacDown编辑神器"></a><a href="https://typora.io/">Typora</a>  MacDown编辑神器</h3><p>已经是bate版N多年的”免费”使用的MacDown编辑器，所见即所得。缺陷是非常长的文档编写时会卡顿，但是这个缺陷我从未碰到，因为没有写很长的文章，长到6k字以上的。</p>
<h2 id="办公神器"><a href="#办公神器" class="headerlink" title="办公神器"></a>办公神器</h2><h3 id="scrcpy-开源投屏神器-QtScrcpy-基于前者二开的开源投屏神器-荐！"><a href="#scrcpy-开源投屏神器-QtScrcpy-基于前者二开的开源投屏神器-荐！" class="headerlink" title="scrcpy 开源投屏神器/QtScrcpy 基于前者二开的开源投屏神器(荐！)"></a><a href="https://github.com/Genymobile/scrcpy">scrcpy</a> 开源投屏神器/<a href="https://github.com/barry-ran/QtScrcpy">QtScrcpy</a> 基于前者二开的开源投屏神器(荐！)</h3><p>USB(或通过TCP/IP)连接Android设备，并进行显示和控制，不需要root权限，不需手机安装apk。电脑上可以直接点击操作手机哦！</p>
<table>
<thead>
<tr>
<th>关键点</th>
<th>scrcpy</th>
<th>QtScrcpy</th>
</tr>
</thead>
<tbody><tr>
<td>界面</td>
<td>sdl</td>
<td>qt</td>
</tr>
<tr>
<td>视频解码</td>
<td>ffmpeg</td>
<td>ffmpeg</td>
</tr>
<tr>
<td>视频渲染</td>
<td>sdl</td>
<td>opengl</td>
</tr>
<tr>
<td>跨平台基础设施</td>
<td>自己封装</td>
<td>Qt提供</td>
</tr>
<tr>
<td>编程语言</td>
<td>C</td>
<td>C++</td>
</tr>
<tr>
<td>编程方式</td>
<td>同步</td>
<td>异步</td>
</tr>
<tr>
<td>按键映射</td>
<td>不支持自定义</td>
<td>支持自定义按键映射</td>
</tr>
<tr>
<td>编译方式</td>
<td>meson+gradle</td>
<td>Qt Creator</td>
</tr>
</tbody></table>
<p><a href="http://ffcell.com/">Excel工具箱</a>——插件-方方格子 工作室-做最专业的Excel工具箱 </p>
<p>专业的Excel工具箱</p>
<h2 id="程序员必备"><a href="#程序员必备" class="headerlink" title="程序员必备"></a>程序员必备</h2><h3 id="GitHub-Proxy-GitHub下载加速-在线"><a href="#GitHub-Proxy-GitHub下载加速-在线" class="headerlink" title="GitHub Proxy  GitHub下载加速(在线)"></a><a href="https://ghproxy.com/">GitHub Proxy</a>  GitHub下载加速(在线)</h3><p>良心加速、速度稳定、快，可以去作者那里点点赞。</p>
<h3 id="dev-sidecar-开发者边车-开源开发者便利工具"><a href="#dev-sidecar-开发者边车-开源开发者便利工具" class="headerlink" title="dev-sidecar 开发者边车  开源开发者便利工具"></a><a href="https://github.com/docmirror/dev-sidecar">dev-sidecar</a> 开发者边车  开源开发者便利工具</h3><p>这个车是个便车，实际上也包含了GitHub访问加速、下载加速等功能，代理功能的话你可以慢慢从代码中周旋一下，大致步骤：<br>1、找到注释<br>2、URL解码注释内容<br>3、Base64解码2中内容<br>4、打开解码后网址<br>5、找到网址中的二维码并扫码界面二维码中的文字</p>
<h3 id="glogg-大日志查看-klogg-大日志查看forked-from-glogg"><a href="#glogg-大日志查看-klogg-大日志查看forked-from-glogg" class="headerlink" title="glogg 大日志查看 / klogg 大日志查看forked from glogg"></a><a href="http://glogg.bonnefon.org/download.html">glogg</a> 大日志查看 / <a href="https://github.com/variar/klogg">klogg</a> 大日志查看forked from glogg</h3><p>klogg有便携版，其余区别没太大。</p>
<h3 id="LargeFileSplitter-大文件分割-仅win"><a href="#LargeFileSplitter-大文件分割-仅win" class="headerlink" title="LargeFileSplitter 大文件分割(仅win)"></a><a href="https://github.com/philoushka/LargeFileSplitter">LargeFileSplitter</a> 大文件分割(仅win)</h3><p>11kb，操作简单</p>
<p><a href="https://www.charlesproxy.com/">Charles</a>——web抓包工具，收费(全平台)</p>
<p>简单易用，神秘代码F12 <!-- [PJ文件](https://cloud.189.cn/t/EfMRVnzAnIZb) 访问码：rgc2 --></p>
<p><a href="https://www.telerik.com/fiddler">fiddler</a>——web抓包工具，免费(仅win) </p>
<p>简单易用,仅使用win的推荐使用</p>
<p><a href="https://www.wireshark.org/">Wireshark</a>——抓包神器，dddd，全平台</p>
<p>抓包工具，可抓TCP，强大，但是对于仅web抓包来讲操作稍微复杂点。适用于抓底层协议包。</p>
<h2 id="设计师必备"><a href="#设计师必备" class="headerlink" title="设计师必备"></a>设计师必备</h2><p><a href="https://www.adobe.com/cn/">adobe全家桶</a> 设计师绕不开的神话，神秘代码F12 <!--
2021 SP版和大师版实时更新。
天翼：[*O*网页链接](http://t.cn/A6f0W16M) 访问码：0aaw
百度：[*O*网页链接](http://t.cn/A6fMrOmc) 提取码:gvm5
默认密码为[@vposy](https://weibo.com/n/vposy?from=feed&loc=at)
--></p>
<h2 id="影视音乐"><a href="#影视音乐" class="headerlink" title="影视音乐"></a>影视音乐</h2><p><a href="http://www.foobar2000.com.cn/interface/showimg.php?lang=cn&id=73">Foobox</a>——音乐发烧友专用,搜索功能有”点”东西</p>
<p><a href="https://github.com/lyswhut/lx-music-desktop">洛雪音乐助手桌面版</a>——开源音乐软件，基于electron</p>
<p><a href="https://danboxingqiu.gitee.io/">蛋播星球</a>——开源看片软件，移动端</p>
<p><a href="https://www.mypianku.net/">片库</a>——刷视频，在线</p>
<p>更多 神秘代理F12注释<!--没了，哈哈--></p>
<h2 id="下载工具"><a href="#下载工具" class="headerlink" title="下载工具"></a>下载工具</h2><p><a href="https://www.baiduyun.wiki/zh-cn/mac.html">油猴-网盘、浏览器直链下载助手</a>——提速工具,支持windows、 macos、 linux</p>
<h2 id="浏览器拓展"><a href="#浏览器拓展" class="headerlink" title="浏览器拓展"></a>浏览器拓展</h2><p><a href="https://decentraleyes.org/">Decentraleyes</a>——网页加速和隐私保护插件（本地CDN加速）</p>
<p><a href="https://www.tampermonkey.net/">tampermonkey</a>——油猴，用户脚本管理器</p>
<p>通过为浏览器插入执行js语句、css样式，</p>
<h2 id="其它程序清单"><a href="#其它程序清单" class="headerlink" title="其它程序清单"></a>其它程序清单</h2><p><a href="https://www.faststone.org/FSCaptureDownload.htm">FastStoneCapture</a> 滚动窗口截图、屏幕录像一应俱全，神秘代码F12注释 <!--注册名：microsoft 注册码：WYZQU-RCMZR-KETRH-PKZGN--></p>
<p><a href="https://zh-cn.emeditor.com/download/">EmEditor</a> 大文本编辑器，神秘代码F12注释<!--DMAZM-WHY52-AX222-ZQJXN-79JXH--></p>
<p><a href="https://md.openwrite.cn/">OpenWrite</a> (在线) MD转公众号编辑，另外，极力推荐OpenWrite</p>
<p>更多软件 神秘代理F12注释<!-- 
[蓝灯](https://github.com/getlantern/lantern)----简单好用的梯子(可能不稳定)
[多节点翻墙](https://github.com/freefq/free)----多节点切换翻墙
 --></p>
]]></content>
      <categories>
        <category>工具</category>
        <category>常用工具</category>
      </categories>
  </entry>
  <entry>
    <title>springboot</title>
    <url>/2022/204KFJC.html</url>
    <content><![CDATA[<p><a href="https://www.jianshu.com/p/397929dbc27d">https://www.jianshu.com/p/397929dbc27d</a></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Docker image for springboot file run</span></span><br><span class="line"><span class="comment"># VERSION 0.0.1</span></span><br><span class="line"><span class="comment"># Author: mixley</span></span><br><span class="line"><span class="comment"># 基础镜像使用java</span></span><br><span class="line">FROM <span class="symbol">java:</span><span class="number">8</span></span><br><span class="line"><span class="comment"># 作者</span></span><br><span class="line">MAINTAINER mixley &lt;mixley<span class="variable">@qq</span>.com&gt;</span><br><span class="line"><span class="comment"># VOLUME 指定了临时文件目录为/tmp。</span></span><br><span class="line"><span class="comment"># 其效果是在主机 /var/lib/docker 目录下创建了一个临时文件，并链接到容器的/tmp</span></span><br><span class="line">VOLUME /tmp </span><br><span class="line"><span class="comment"># 将jar包添加到容器中并更名为app.jar</span></span><br><span class="line">ADD province.jar app.jar </span><br><span class="line"><span class="comment"># 运行jar包</span></span><br><span class="line">RUN bash -c <span class="string">&#x27;touch /app.jar&#x27;</span></span><br><span class="line">ENTRYPOINT [<span class="string">&quot;java&quot;</span>,<span class="string">&quot;-Djava.security.egd=file:/dev/./urandom&quot;</span>,<span class="string">&quot;-jar&quot;</span>,<span class="string">&quot;/app.jar&quot;</span>]</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker build -t etkt .</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>运维</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>mixley</tag>
        <tag>java</tag>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>portainer</title>
    <url>/2022/3S92S0N.html</url>
    <content><![CDATA[<p><a href="https://www.portainer.io/">https://www.portainer.io/</a></p>
]]></content>
      <categories>
        <category>运维</category>
        <category>docker</category>
      </categories>
  </entry>
  <entry>
    <title>xxl_job</title>
    <url>/2022/1QAYWPC.html</url>
    <content><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull xuxueli/xxl-job-admin:2.0.1</span><br><span class="line"></span><br><span class="line">docker run -e PARAMS=&quot;--spring.datasource.url=jdbc:mysql://127.0.0.1:3307/xxl-job?Unicode=true&amp;characterEncoding=UTF-8 --spring.datasource.username=root --spring.datasource.password=1234&quot; -p 18080:8080 -v /tmp:/data/applogs --name xxl-job-admin xuxueli/xxl-job-admin:2.3.0</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>运维</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>时区</title>
    <url>/2022/WMPB74.html</url>
    <content><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ENV TZ=&quot;Asia/Shanghai&quot;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>运维</category>
        <category>docker</category>
      </categories>
  </entry>
  <entry>
    <title>清理镜像</title>
    <url>/2022/2ZB6GDV.html</url>
    <content><![CDATA[<p>清理未使用镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker image prune -a</span><br></pre></td></tr></table></figure>

<p>清理none镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker rmi -f `docker images | grep &#x27;&lt;none&gt;&#x27; | awk &#x27;&#123;print $3&#125;&#x27;` </span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>运维</category>
        <category>docker</category>
      </categories>
  </entry>
  <entry>
    <title>mongo</title>
    <url>/2022/1RKVH1Q.html</url>
    <content><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd E:\MongoDB\Server\3.4\bin</span><br><span class="line">mongodump --host 127.0.0.1 --port 27018 -u NewlandPola -p Newland97017 -d pola_mongo_data -o \\tsclient\E\data\mongo</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>运维</category>
        <category>mongo</category>
      </categories>
  </entry>
  <entry>
    <title>[转]shell命令</title>
    <url>/2021/16ESPVN.html</url>
    <content><![CDATA[<h1 id="源"><a href="#源" class="headerlink" title="源"></a>源</h1><p>本文出自：<a href="https://blog.csdn.net/shangboerds/article/details/48623533">https://blog.csdn.net/shangboerds/article/details/48623533</a></p>
<p>一大佬总结，膜拜一下！</p>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh </span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Hello World.&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>第一行代码称为沙邦(sh-bang)，表示由什么程序运行此脚本。<br>第二行的 print 是一个命令，用来打印输出。</p>
<h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 这里是单行注释，单行注释以 # 开始到行尾。</span></span><br><span class="line"></span><br><span class="line">:&lt;&lt;!</span><br><span class="line">这里是多行注释，! 可以是任何成对的字符</span><br><span class="line">!</span><br></pre></td></tr></table></figure>

<h1 id="命令分隔符"><a href="#命令分隔符" class="headerlink" title="命令分隔符"></a>命令分隔符</h1><p>通常，ksh 认为每一行就是一个命令或语句，如果一行包含多条语句，你可以在语句之间加上分号(;)。当然，你也可以在每一行后面加上分号。</p>
<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"><span class="comment"># 定义常量方法 1</span></span><br><span class="line"><span class="built_in">typeset</span> -r CONSTANT_INT=110;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义常量方法 2</span></span><br><span class="line"><span class="built_in">readonly</span> CONSTANT_STR=<span class="string">&quot;TEST&quot;</span>;</span><br></pre></td></tr></table></figure>



<h2 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义整数变量</span></span><br><span class="line"><span class="built_in">integer</span> var_int1=10; <span class="comment"># 方法 1(推荐)</span></span><br><span class="line"><span class="built_in">typeset</span> -i var_int2=-10; <span class="comment"># 方法 2</span></span><br><span class="line"><span class="built_in">let</span> <span class="string">&quot;var_int3=20&quot;</span>; <span class="comment"># 方法 3</span></span><br><span class="line">((var_int4=30)); <span class="comment"># 方法4</span></span><br><span class="line"><span class="built_in">integer</span> var_int5=010; <span class="comment"># 八进制以 0 开头</span></span><br><span class="line"><span class="built_in">integer</span> var_int6=0x10; <span class="comment"># 十六进制以 0x 开头</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#--- 2# 表示后面的数字是二进制</span></span><br><span class="line"><span class="comment">#--- B#N B表示进制，最大 64</span></span><br><span class="line"><span class="built_in">integer</span> var_int5=2<span class="comment">#10;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义浮点数变量</span></span><br><span class="line"><span class="built_in">float</span> var_float1=250.0; <span class="comment"># 方法 1(推荐)</span></span><br><span class="line"><span class="built_in">typeset</span> -F var_float2=250.; <span class="comment"># 方法 2</span></span><br><span class="line"><span class="built_in">typeset</span> -F var_float3=0.25;</span><br><span class="line"><span class="built_in">typeset</span> -F var_float4=.25;</span><br><span class="line"><span class="built_in">typeset</span> -F var_float5=-250.0e2; <span class="comment"># -250.0乘以 10 的 2 次方，e不区分大小写</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># typeset -E 用来定义双精度浮点数变量</span></span><br><span class="line"><span class="built_in">typeset</span> -E var_double1=250.0;</span><br><span class="line"><span class="built_in">typeset</span> -E var_double2=250.;</span><br><span class="line"><span class="built_in">typeset</span> -E var_double3=0.25;</span><br><span class="line"><span class="built_in">typeset</span> -E var_double4=.25;</span><br><span class="line"><span class="built_in">typeset</span> -E var_double5=-250.0e2; <span class="comment"># -250.0乘以 10 的 2 次方，e不区分大小写</span></span><br></pre></td></tr></table></figure>



<h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方式1：双引号  </span></span><br><span class="line"><span class="comment"># 双引号内的字符串可以进行变量插值和字符转义  </span></span><br><span class="line"><span class="built_in">typeset</span> str=<span class="string">&quot;Zhang San&quot;</span>;  </span><br><span class="line"><span class="built_in">typeset</span> string=<span class="string">&quot;Li Si&quot;</span>;  </span><br><span class="line"><span class="built_in">typeset</span> text1=<span class="string">&quot;my name is <span class="variable">$str</span>\n&quot;</span>; <span class="comment">#此处的 $str 将被字符串张三替换，这种能力称之为变量插值，\n 为转义字符  </span></span><br><span class="line"><span class="built_in">typeset</span> text2=<span class="string">&quot;my name is <span class="variable">$string</span>\n&quot;</span>; <span class="comment"># 此处的变量到底是 $str 还是 $string 呢？默认是最长匹配，也就是$string  </span></span><br><span class="line"><span class="built_in">typeset</span> text3=<span class="string">&quot;my name is <span class="variable">$&#123;str&#125;</span>ing\n&quot;</span>; <span class="comment"># 如果想插入变量 $str的值，可以将变量名用大括号围起来  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 方式2：单引号  </span></span><br><span class="line"><span class="comment"># 单引号内的任何字符都代表它自己，无法进行变量插值和字符转义  </span></span><br><span class="line"><span class="built_in">typeset</span> text4=<span class="string">&#x27;my name is $str\n&#x27;</span>; <span class="comment">#此处的 $str 无法被替换为张三，\n 也无法代表换行符</span></span><br></pre></td></tr></table></figure>



<h2 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">######################### 长度 </span></span><br><span class="line"><span class="comment"># $&#123;#xx&#125; 得到变量 xx 的长度 </span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;the length of <span class="variable">$str</span> is <span class="variable">$&#123;#str&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">######################### 子串</span></span><br><span class="line"><span class="comment"># $&#123;xx:start&#125; 从 start 开始得到变量 xx 的子串</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Get substring from 11: <span class="variable">$&#123;text1:11&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># $&#123;xx:start:length&#125; 从 start 开始,取 length 个字符，得到变量 xx 的子串</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Get substring from 11 and get 5 characters: <span class="variable">$&#123;text1:11：5&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># $&#123;xx:start&#125; 和 $&#123;xx:start:length&#125;， 注意 start 可以是负值哦，表示相对于字符串的末尾</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Get substring from -9: <span class="variable">$&#123;text1:-9&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">######################### 替换</span></span><br><span class="line"><span class="comment"># $&#123;xx/pattern/replace&#125; pattern 是个正则表达式，将变量 xx 中 pattern 匹配的字串替换成 replace 指定的字符串，非贪婪模式 </span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;text1 after replaced Zhang to Wang: <span class="variable">$&#123;text1/Zhang/Wang&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># $&#123;xx//pattern/replace&#125; 同上，贪婪模式 </span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;text1 after replaced Zhang to Wang: <span class="variable">$&#123;text1//Zhang/Wang&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># ksh 不支持 行首，行尾，单词边界 正则表达式，下面的方式实现了类似功能</span></span><br><span class="line"><span class="comment"># $&#123;xx/#pattern/replace&#125; pattern 是个正则表达式，从变量 xx 开头查找 pattern 匹配的字串替，如果找到则换成 replace 指定的字符串，非贪婪模式</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;str after replaced Zhang to Wang: <span class="variable">$&#123;str/#Zhang/Wang&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># $&#123;xx/%pattern/replace&#125; pattern 是个正则表达式，查找变量 xx 是否以 pattern 匹配的字串替结尾，如果找到则换成 replace 指定的字符串，非贪婪模式</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;str after replaced San to Four: <span class="variable">$&#123;str/%San/Four&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">######################### 删除子串</span></span><br><span class="line"><span class="comment"># $&#123;xx/pattern&#125; pattern 是个正则表达式，删除变量 xx 中 pattern 匹配的子串，非贪婪模式 </span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;text1 after removed Zhang: <span class="variable">$&#123;text1/Zhang&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># ksh 不支持 行首，行尾，单词边界 正则表达式，下面的方式实现了类似功能</span></span><br><span class="line"><span class="comment"># $&#123;xx#pattern&#125; pattern 是个正则表达式，从变量 xx 开头查找 pattern 匹配的字串替，如果找到则删除，非贪婪模式</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;str after removed Zhang: <span class="variable">$&#123;str#Zhang&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># $&#123;xx##pattern&#125; 同上，贪婪模式</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;str after removed Zhang: <span class="variable">$&#123;str##Zhang&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># $&#123;xx%pattern&#125; pattern 是个正则表达式，查找变量 xx 是否以 pattern 匹配的字串替结尾，如果找到则删除，非贪婪模式</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;str after removed San: <span class="variable">$&#123;str%San&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># $&#123;xx%%pattern&#125; 同上，贪婪模式</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;str after removed San: <span class="variable">$&#123;str%San&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">######################### 判断是否为空</span></span><br><span class="line"><span class="comment"># 接收参数  </span></span><br><span class="line">name=<span class="variable">$1</span>;  </span><br><span class="line">age=<span class="variable">$2</span>;  </span><br><span class="line">gendar=<span class="variable">$3</span>;  </span><br><span class="line">description=<span class="variable">$4</span>;  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># $&#123;xx:-&quot;test&quot;&#125; 表示如果变量 xx 存在且不为 null，返回其值，否则返回  test</span></span><br><span class="line">name=<span class="variable">$&#123;name:-&quot;Shang Bo&quot;&#125;</span>;  </span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;name=<span class="variable">$name</span>&quot;</span>;  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># $&#123;xx:=&#x27;test&#x27;&#125; 表示如果变量 xx 存在且不为 null，返回其值，否则设置 xx 为 test 并返回 test  </span></span><br><span class="line">age=<span class="variable">$&#123;age:=&#x27;30&#x27;&#125;</span>;  </span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;age=<span class="variable">$age</span>&quot;</span>;  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># $&#123;xx:+&#x27;test&#x27;&#125; 表示如果变量 xx 存在且不为 null，返回 test， 否则返回 null  </span></span><br><span class="line">description=<span class="string">&quot;a java developer&quot;</span>;  </span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;<span class="variable">$&#123;description:+&#x27;description already defined&#x27;&#125;</span>&quot;</span>;  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># $&#123;xx:?&quot;error&quot;&#125; 表示如果变量 xx 存在且不为 null，返回其值，否则显示 error 错误消息 并终止程序  </span></span><br><span class="line">gendar=<span class="variable">$&#123;gendar:?&quot;gendar missing.&quot;&#125;</span>;  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -n 判断字符串不为空，长度不为0  </span></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$name</span>&quot;</span> ]; <span class="keyword">then</span>  </span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$name</span> is not empty **#&quot;</span>  </span><br><span class="line"><span class="keyword">fi</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -z 判断字符串为空.长度为0.  </span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$x</span>&quot;</span> ];<span class="keyword">then</span>  </span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> is empty **#&quot;</span>  </span><br><span class="line"><span class="keyword">fi</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">######################### 其他</span></span><br><span class="line"><span class="comment"># $&#123;!xx*&#125; 或 $&#123;!xx@&#125; 得到 以 xx 开头的所有变量</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;We have variables <span class="variable">$&#123;!text*&#125;</span> who start with text&quot;</span>;</span><br><span class="line"></span><br><span class="line">alpha=<span class="string">&quot;   aBcDeFgHiJkLmNoPqRsTuVwXyZ   &quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去掉前面空格</span></span><br><span class="line"><span class="built_in">typeset</span> -L v=<span class="variable">$alpha</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Remove leading spaces: <span class="variable">$v</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去掉尾部空格</span></span><br><span class="line"><span class="built_in">typeset</span> -R v=<span class="variable">$alpha</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Remove trailing spaces: <span class="variable">$v</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去掉前面空格后，保留 10 位字符，如果长度不够 10 位则在尾部补空格</span></span><br><span class="line"><span class="built_in">typeset</span> -L10 v=<span class="variable">$alpha</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;truncate to 10 after remove leading spaces: <span class="variable">$v</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去掉尾部空格，保留 16 位字符，如果长度不够 16 位则在前面补空格</span></span><br><span class="line"><span class="built_in">typeset</span> -R16 v=<span class="variable">$alpha</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;truncate to 16 after remove trailing spaces: <span class="variable">$v</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在前面补 0 使整个数字成 8 位</span></span><br><span class="line"><span class="built_in">typeset</span> -Z8 v=<span class="string">&quot;123.50&quot;</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;add leading 0: <span class="variable">$v</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去掉前面的 0 使整个数字成 6 位</span></span><br><span class="line"><span class="built_in">typeset</span> -LZ6 v=<span class="string">&quot;00123.50&quot;</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;strips leading 0: <span class="variable">$v</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 全部转成小写</span></span><br><span class="line"><span class="built_in">typeset</span> -l v=<span class="variable">$alpha</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;to lowercase: <span class="variable">$v</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 全部转成大写</span></span><br><span class="line"><span class="built_in">typeset</span> -u v=<span class="variable">$alpha</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;to uppercase: <span class="variable">$v</span>&quot;</span>;</span><br></pre></td></tr></table></figure>



<h2 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 转义字符</span></span><br><span class="line">\a	响铃</span><br><span class="line">\b	退格</span><br><span class="line">\c  终止处理字符串</span><br><span class="line">\E	Esc键</span><br><span class="line">\f	换页</span><br><span class="line">\n	换行</span><br><span class="line">\r	回车</span><br><span class="line">\t	水平制表符</span><br><span class="line">\v	垂直制表符</span><br><span class="line">\0n 表示n为8进制数字</span><br><span class="line">\\	反斜线</span><br></pre></td></tr></table></figure>



<h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义函数</span></span><br><span class="line"><span class="keyword">function</span> fun_test &#123;</span><br><span class="line">	<span class="comment"># 定义局部变量</span></span><br><span class="line">	<span class="built_in">typeset</span> local_vardefined_in_function=<span class="string">&quot;local variable defined in function&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment"># 在函数中定义全局变量	</span></span><br><span class="line">	global_var_defined_in_function=<span class="string">&quot;global variable defined in function&quot;</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment"># 改变全局变量的值</span></span><br><span class="line">	global_var_defined_in_main+=<span class="string">&quot; changed in function&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义全局变量</span></span><br><span class="line"><span class="built_in">typeset</span> global_var_defined_in_main=<span class="string">&quot;global variable defined in main&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;global_var_defined_in_main=<span class="variable">$global_var_defined_in_main</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Call function&quot;</span>;</span><br><span class="line">fun_test;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印值是否改变</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;global_var_defined_in_main=<span class="variable">$global_var_defined_in_main</span>&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;global_var_defined_in_function=<span class="variable">$global_var_defined_in_function</span>&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;local_vardefined_in_function=<span class="variable">$local_vardefined_in_function</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 结果</span></span><br><span class="line">global_var_defined_in_main=global variable defined <span class="keyword">in</span> main</span><br><span class="line">Call <span class="keyword">function</span></span><br><span class="line">global_var_defined_in_main=global variable defined <span class="keyword">in</span> main changed <span class="keyword">in</span> <span class="keyword">function</span></span><br><span class="line">global_var_defined_in_function=global variable defined <span class="keyword">in</span> <span class="keyword">function</span></span><br><span class="line">local_vardefined_in_function=</span><br></pre></td></tr></table></figure>

<h2 id="变量导出"><a href="#变量导出" class="headerlink" title="变量导出"></a>变量导出</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导出变量方法 1</span></span><br><span class="line"><span class="built_in">typeset</span> -x CONSTANT_INT=110;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出变量方法 2</span></span><br><span class="line"><span class="built_in">export</span> CONSTANT_STR=<span class="string">&quot;TEST&quot;</span>;</span><br></pre></td></tr></table></figure>



<h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><p>ksh 的正则表达式和其他语言有一些区别，最重要的区别是，在 ksh 中， ? 代表任意一个字符，* 代表任意多个字符，那么它如何匹配次数呢？看看下面的表格吧</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">操作符	            描述</span><br><span class="line">*(exp)              贪婪匹配，匹配任意次</span><br><span class="line">+(exp)              贪婪匹配，匹配 1次或多次</span><br><span class="line">?(exp)              贪婪匹配，匹配 0或1次</span><br><span class="line">&#123;N&#125;(exp)            贪婪匹配，匹配 N 次</span><br><span class="line">&#123;N,M&#125;(exp)          贪婪匹配，匹配 N 到 M 次</span><br><span class="line">@(exp1|exp2|...)    贪婪匹配，匹配 exp1 或 exp2 ...</span><br><span class="line">*-(exp)             非贪婪匹配，匹配任意次</span><br><span class="line">+-(exp)             非贪婪匹配，匹配 1次或多次</span><br><span class="line">?-(exp)             非贪婪匹配，匹配 0或1次</span><br><span class="line">&#123;N&#125;-(exp)           非贪婪匹配，匹配 N 次</span><br><span class="line">&#123;N,M&#125;-(exp)         非贪婪匹配，匹配 N 到 M 次</span><br><span class="line">@-(exp1|exp2|...)	非贪婪匹配，匹配 exp1 或 exp2 ...</span><br><span class="line">!(exp)              匹配非 exp 的任何东西</span><br><span class="line">[:word:]            匹配字母或下划线</span><br><span class="line">\d                  匹配数字，同[[:digit:]]</span><br><span class="line">\D                  匹配非数字，同[![:digit:]]</span><br><span class="line">\s                  匹配空白字符，同[[:space:]]</span><br><span class="line">\S                  匹配非空白字符，同[![:space:]]</span><br><span class="line">\w                  匹配匹配字母或下划线，同[[:word:]]</span><br><span class="line">\W                  匹配非匹配字母或下划线，同[![:word:]]</span><br></pre></td></tr></table></figure>

<p>下面是使用正则表达式的一个简单例子。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">################################ 匹配</span></span><br><span class="line"><span class="built_in">typeset</span> brithday=<span class="string">&#x27;2013-06-25&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$&#123;brithday&#125;</span> = &#123;4&#125;(\d)-&#123;2&#125;(\d)-&#123;2&#125;(\d) ]]; <span class="keyword">then</span>  </span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;legal date&quot;</span>  </span><br><span class="line"><span class="keyword">fi</span>  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">################################ 替换</span></span><br><span class="line"><span class="built_in">typeset</span> str=<span class="string">&quot;Zhang yi, zhang er, Zhuang Si, ZHANG WU&quot;</span>;</span><br><span class="line">  </span><br><span class="line"><span class="comment"># $&#123;xx/pattern/replace&#125; pattern 是个正则表达式，将变量 xx 中 pattern 匹配的字串替换成 replace 指定的字符串，非贪婪模式 </span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\$&#123;xx/pattern/replace&#125; : <span class="variable">$&#123;str/Z*(\w)/C\1&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># $&#123;xx//pattern/replace&#125; 同上，贪婪模式 </span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\$&#123;xx//pattern/replace&#125; : <span class="variable">$&#123;str//Z*(\w)/C\1&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># ~(+i:pattern) 表示 pattern使用忽略大小写匹配模式</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\$&#123;xx//pattern/replace&#125; : <span class="variable">$&#123;str//~(+i:Z*(\w))/C\1&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ksh 不支持 行首，行尾，单词边界 正则表达式，下面的方式实现了类似功能</span></span><br><span class="line"><span class="comment"># $&#123;xx/#pattern/replace&#125; pattern 是个正则表达式，从变量 xx 开头查找 pattern 匹配的字串替，如果找到则换成 replace 指定的字符串，非贪婪模式</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\$&#123;xx/#pattern/replace&#125; : <span class="variable">$&#123;str/#Z*(\w)/C\1&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># $&#123;xx/%pattern/replace&#125; pattern 是个正则表达式，查找变量 xx 是否以 pattern 匹配的字串替结尾，如果找到则换成 replace 指定的字符串，非贪婪模式</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\$&#123;xx/%pattern/replace&#125; : <span class="variable">$&#123;str/%?(\w)/*&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">################################  删除子串</span></span><br><span class="line"><span class="comment"># $&#123;xx/pattern&#125; pattern 是个正则表达式，删除变量 xx 中 pattern 匹配的子串，非贪婪模式 </span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\$&#123;xx/pattern&#125; : <span class="variable">$&#123;str/Z*(\w)&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># ksh 不支持 行首，行尾，单词边界 正则表达式，下面的方式实现了类似功能</span></span><br><span class="line"><span class="comment"># $&#123;xx#pattern&#125; pattern 是个正则表达式，从变量 xx 开头查找 pattern 匹配的字串替，如果找到则删除，非贪婪模式</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\$&#123;xx#pattern&#125; : <span class="variable">$&#123;str#Z*(\w)&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># $&#123;xx##pattern&#125; 同上，贪婪模式</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\$&#123;xx##pattern&#125; : <span class="variable">$&#123;str##Z*(\w)&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># $&#123;xx%pattern&#125; pattern 是个正则表达式，查找变量 xx 是否以 pattern 匹配的字串替结尾，如果找到则删除，非贪婪模式</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\$&#123;xx%pattern&#125; : <span class="variable">$&#123;str%W*(\w)&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># $&#123;xx%%pattern&#125; 同上，贪婪模式</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\$&#123;xx%%pattern&#125; : <span class="variable">$&#123;str%%W*(\w)&#125;</span>&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>上面介绍的正则表达式有个缺陷，它只能匹配英语，如果你想匹配其他语言，你可以使用标准的 POSIX 语法，如下。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">元字符(Metacharacter)	匹配(Matches)</span><br><span class="line">[[:alnum:]]	            字母和数字</span><br><span class="line">[[:alpha:]]	            字母</span><br><span class="line">[[:lower:]]	            小写字母</span><br><span class="line">[[:upper:]]	            大写字母</span><br><span class="line">[[:digit:]]	            数字</span><br><span class="line">[[:blank:]]	            空格和制表符</span><br><span class="line">[[:space:]]	            空白字符</span><br><span class="line">[[:graph:]]	            非空白字符</span><br><span class="line">[[:print:]]	            类似[[:graph:]]，但是包含空白字符</span><br><span class="line">[[:punct:]]	            标点符号</span><br><span class="line">[[:cntrl:]]	            控制字符</span><br><span class="line">[[:xdigit:]]	        十六进制中容许出现的数字(例如 0-9a-fA-f)</span><br><span class="line">[. xx .]                将 xx 作为一个整体匹配, xx 可以是任何字母</span><br><span class="line">[= e =]                 认为等价，在法语中匹配 e, è, 或 é</span><br></pre></td></tr></table></figure>

<h1 id="复合变量"><a href="#复合变量" class="headerlink" title="复合变量"></a>复合变量</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh  </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义复合变量 方法 1</span></span><br><span class="line">zhang_san=<span class="string">&quot;Zhang San&quot;</span></span><br><span class="line">zhang_san.firstname=San</span><br><span class="line">zhang_san.lastname=Zhang</span><br><span class="line">zhang_san.age=18</span><br><span class="line"><span class="built_in">print</span> <span class="variable">$zhang_san</span> <span class="comment"># 简单打印</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义复合变量 方法 2，注意=后面的一个空格</span></span><br><span class="line">li_si= (firstname=si lastname=li age=28);</span><br><span class="line"><span class="built_in">print</span> -r <span class="variable">$li_si</span>; <span class="comment"># 复杂打印，可读性更好</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义复合变量 方法 3，注意=后面的一个空格</span></span><br><span class="line">wang_wu= (<span class="built_in">typeset</span> firstname=wu; <span class="built_in">typeset</span> lastname=Wang; <span class="built_in">typeset</span> -i age=38);</span><br><span class="line"><span class="built_in">print</span> -r <span class="variable">$wang_wu</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加变量，注意+=后面的一个空格</span></span><br><span class="line">wang_wu+= (<span class="built_in">typeset</span> gender=man);</span><br><span class="line"><span class="built_in">print</span> -r <span class="variable">$wang_wu</span>;</span><br></pre></td></tr></table></figure>

<h1 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">typeset</span> -i x=2;</span><br><span class="line"><span class="built_in">typeset</span> -i y=3;</span><br><span class="line"><span class="built_in">typeset</span> -i r=0;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意，算术表达式需要包含在$(())中，否则成了文本表达式</span></span><br><span class="line"><span class="comment"># 注意，括号中没有 $ 哦</span></span><br><span class="line">r=$((x+y)); <span class="comment">#加</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;x+y=<span class="variable">$r</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">r=$((x-y)); <span class="comment">#减</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;x-y=<span class="variable">$r</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">r=$((x*y)); <span class="comment">#乘</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;x*y=<span class="variable">$r</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">r=$((x/y)); <span class="comment">#除</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;x/y=<span class="variable">$r</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">r=$((x**y)); <span class="comment">#幂，相当于2的3次方</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;x**y=<span class="variable">$r</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">r=$((x%y)); <span class="comment">#余</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;x%y=<span class="variable">$r</span>&quot;</span>;</span><br></pre></td></tr></table></figure>

<h2 id="数字比较运算符"><a href="#数字比较运算符" class="headerlink" title="数字比较运算符"></a>数字比较运算符</h2><p>比较数字有两种方法。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">typeset</span> -i x=20;</span><br><span class="line"><span class="built_in">typeset</span> -i y=3;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意，数字比较时需要包含在 （（））中</span></span><br><span class="line"><span class="comment"># 注意，括号中没有 $ 哦</span></span><br><span class="line"><span class="comment"># 大于</span></span><br><span class="line"><span class="keyword">if</span> ((x &gt; y)); <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> &gt; <span class="variable">$y</span> **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$x</span> -gt <span class="variable">$y</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> gt <span class="variable">$y</span> **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 大于等于</span></span><br><span class="line"><span class="keyword">if</span> ((x &gt;= y)); <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> &gt;= <span class="variable">$y</span> **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$x</span> -ge <span class="variable">$y</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> ge <span class="variable">$y</span> **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 小于</span></span><br><span class="line"><span class="keyword">if</span> ((x &lt; y)); <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> &lt; <span class="variable">$y</span> **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$x</span> -lt <span class="variable">$y</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> lt <span class="variable">$y</span> **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 小于等于</span></span><br><span class="line"><span class="keyword">if</span> ((x &lt;= y)); <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> &lt;= <span class="variable">$y</span> **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$x</span> -le <span class="variable">$y</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> le <span class="variable">$y</span> **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 等于</span></span><br><span class="line"><span class="keyword">if</span> ((x == y)); <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> == <span class="variable">$y</span> **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$x</span> -eq <span class="variable">$y</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> le <span class="variable">$y</span> **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不等于</span></span><br><span class="line"><span class="keyword">if</span> ((x != y)); <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> != <span class="variable">$y</span> **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$x</span> -ne <span class="variable">$y</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> ne <span class="variable">$y</span> **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<h2 id="字符串比较运算符"><a href="#字符串比较运算符" class="headerlink" title="字符串比较运算符"></a>字符串比较运算符</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ksh 支持 [] 和 [[]] 测试条件表达式，注意，它们有一些区别，推荐使用 [[]]</span></span><br><span class="line"><span class="comment"># 变量是否包含在双引号中也有一些区别，推荐不要使用双引号</span></span><br><span class="line"><span class="built_in">typeset</span> x=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="built_in">typeset</span> y=<span class="string">&#x27;b&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断字符串不为空</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$x</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> is not empty **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断字符串不为空，长度不为0</span></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$x</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> is not empty **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断字符串为空.长度为0.</span></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="variable">$x</span> ]];<span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> is empty **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 等于 -- 精确匹配</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$x</span> = a* ]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** 1 <span class="variable">$x</span> = a* **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$x</span> == a* ]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** 2 <span class="variable">$x</span> == a* **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 等于 -- 精确匹配</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$x</span>&quot;</span> = <span class="string">&quot;a*&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** 3 \&quot;<span class="variable">$x</span>\&quot; = \&quot;a*\&quot; **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$x</span>&quot;</span> == <span class="string">&quot;a*&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** 4 \&quot;<span class="variable">$x</span>\&quot; == \&quot;a*\&quot; **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 等于 -- 精确匹配</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$x</span>&quot;</span> = <span class="string">&quot;a*&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** 5 \&quot;<span class="variable">$x</span>\&quot; = \&quot;a*\&quot; **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$x</span>&quot;</span> == <span class="string">&quot;a*&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** 6 \&quot;<span class="variable">$x</span>\&quot; == \&quot;a*\&quot; **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 等于 -- 匹配模式</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$x</span> = a* ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** 7 <span class="variable">$x</span> start with a* **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$x</span> == a* ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** 8 <span class="variable">$x</span> start with a* **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不等于 -- 精确匹配</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$x</span> != a* ]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** 1 <span class="variable">$x</span> != a* **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$x</span>&quot;</span> != <span class="string">&quot;a*&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** 2 \&quot;<span class="variable">$x</span>\&quot; != \&quot;a*\&quot; **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$x</span>&quot;</span> != <span class="string">&quot;a*&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** 3 \&quot;<span class="variable">$x</span>\&quot; != \&quot;a*\&quot; **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不等于 -- 精确模式</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$x</span> != a* ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** 4 <span class="variable">$x</span> != a* **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 大于,注意：字符串没有大于等于操作符</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$x</span> &gt; <span class="variable">$y</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> &gt; <span class="variable">$y</span> **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 小于,注意：字符串没有小于等于操作符</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$x</span> &lt; <span class="variable">$y</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> &lt; <span class="variable">$y</span> **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">typeset</span> x=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="built_in">typeset</span> y=<span class="string">&#x27;b&#x27;</span>;</span><br><span class="line"><span class="built_in">typeset</span> z=<span class="string">&#x27;c&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 与</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$x</span> &lt; <span class="variable">$y</span> &amp;&amp; <span class="variable">$y</span> &lt; <span class="variable">$z</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> &lt; <span class="variable">$y</span> &lt; <span class="variable">$z</span> **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$x</span> &lt; <span class="variable">$y</span> || <span class="variable">$y</span> &lt; <span class="variable">$z</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> &lt; <span class="variable">$y</span> || <span class="variable">$y</span> &lt; <span class="variable">$z</span> **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 非</span></span><br><span class="line"><span class="keyword">if</span> [[ ! <span class="variable">$x</span> &gt; <span class="variable">$y</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> &lt;= <span class="variable">$y</span> **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 按位与 &amp;</span></span><br><span class="line"><span class="comment"># 按位或 |</span></span><br><span class="line"><span class="comment"># 按位非 ~</span></span><br><span class="line"><span class="comment"># 按位异或 ^</span></span><br><span class="line"><span class="comment"># 左移(相当于乘2) &lt;&lt;</span></span><br><span class="line"><span class="comment"># 右移(相当于除2) &gt;&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># =</span></span><br><span class="line"><span class="comment"># +=</span></span><br><span class="line"><span class="comment"># -=</span></span><br><span class="line"><span class="comment"># *=</span></span><br><span class="line"><span class="comment"># /=</span></span><br><span class="line"><span class="comment"># %=</span></span><br><span class="line"><span class="comment"># &amp;=</span></span><br><span class="line"><span class="comment"># ^=</span></span><br><span class="line"><span class="comment"># &lt;&lt;= </span></span><br><span class="line"><span class="comment"># &gt;&gt;=</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">typeset</span> -i x=2;</span><br><span class="line"><span class="built_in">typeset</span> -i r=0;</span><br><span class="line"></span><br><span class="line"><span class="comment"># (()) 用来计算数学表达式</span></span><br><span class="line">((r+=x));</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;r=<span class="variable">$r</span>&quot;</span>;</span><br></pre></td></tr></table></figure>

<h2 id="自增自减运算符"><a href="#自增自减运算符" class="headerlink" title="自增自减运算符"></a>自增自减运算符</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">typeset</span> -i x=1;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自增运算符</span></span><br><span class="line">((x++));</span><br><span class="line">((++x));</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自减运算符</span></span><br><span class="line">((x--));</span><br><span class="line">((--x));</span><br></pre></td></tr></table></figure>

<h2 id="逗号运算符"><a href="#逗号运算符" class="headerlink" title="逗号运算符"></a>逗号运算符</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">typeset</span> -i x=1;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 逗号表达式</span></span><br><span class="line">((x++,++x));</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;x=<span class="variable">$x</span>&quot;</span>;</span><br></pre></td></tr></table></figure>

<h2 id="条件运算符"><a href="#条件运算符" class="headerlink" title="条件运算符"></a>条件运算符</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">typeset</span> -i x=2;</span><br><span class="line"><span class="built_in">typeset</span> -i y=3;</span><br><span class="line"><span class="built_in">typeset</span> -i r=0;</span><br><span class="line"></span><br><span class="line">((r=(y &gt; x) ? y : x));</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;r=<span class="variable">$r</span>&quot;</span>; </span><br></pre></td></tr></table></figure>

<h1 id="文件测试"><a href="#文件测试" class="headerlink" title="文件测试"></a>文件测试</h1><p>有时候我们需要判断某个文件是否存在，很简单，使用 -e 即可，下面是一个简单例子。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">typeset</span> test_file=<span class="string">&quot;test.txt&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ ! -e <span class="variable">$test_file</span> ]]; <span class="keyword">then</span>  </span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;<span class="variable">$test_file</span> does not exist&quot;</span>;</span><br><span class="line">	<span class="built_in">exit</span> 2;</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>除此之外，我们还可以通过下面的操作符来测试文件的其他属性。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">文件测试操作符  意义</span><br><span class="line">-e              文件或目录，是否存在</span><br><span class="line">-s              文件存在且不为空</span><br><span class="line">-d              是否为目录</span><br><span class="line">-f              是否为普通文件</span><br><span class="line">-L              是否为符号链接</span><br><span class="line">-r              文件或目录，对当前用户或组来说是可读的</span><br><span class="line">-w              文件或目录，对当前用户或组来说是可写的</span><br><span class="line">-x              文件或目录，对当前用户或组来说是可执行的</span><br><span class="line">-O              文件或目录，当前用户是否是文件的拥有者</span><br><span class="line">-G              文件或目录，当前用户是否和文件属于同一个组</span><br><span class="line">file1 -nt file2 file1 是否比 file2 新</span><br><span class="line">file1 -ot file2 file1 是否比 file2 旧</span><br><span class="line">file1 -ef file2 file1 和 file2 是否是同一个文件</span><br></pre></td></tr></table></figure>

<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="索引数组（Indexed-Arrays）"><a href="#索引数组（Indexed-Arrays）" class="headerlink" title="索引数组（Indexed Arrays）"></a>索引数组（Indexed Arrays）</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">################################ 定义数组</span></span><br><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">names[0]=<span class="string">&quot;Shang Bo&quot;</span>;</span><br><span class="line">names[1]=<span class="string">&quot;Zhang San&quot;</span>;</span><br><span class="line">names[2]=<span class="string">&quot;Li Si&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 2</span></span><br><span class="line">names=(<span class="string">&quot;Shang Bo&quot;</span> <span class="string">&quot;Zhang San&quot;</span> <span class="string">&quot;Li Si&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 3</span></span><br><span class="line"><span class="built_in">set</span> -A names <span class="string">&quot;Shang Bo&quot;</span> <span class="string">&quot;Zhang San&quot;</span> <span class="string">&quot;Li Si&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">################################ 访问数组</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;The first element of names is <span class="variable">$&#123;names[0]&#125;</span>&quot;</span>; <span class="comment"># 取出数组下标为 0 的元素</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;names contains <span class="variable">$&#123;names[*]&#125;</span>&quot;</span>; <span class="comment"># 取出所有元素</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;names contains <span class="variable">$&#123;#names[*]&#125;</span> elements&quot;</span>; <span class="comment"># 数组长度</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;names contains <span class="variable">$&#123;names[@]&#125;</span>&quot;</span>; <span class="comment"># 取出所有元素</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;names contains <span class="variable">$&#123;#names[@]&#125;</span> elements&quot;</span>; <span class="comment"># 数组长度</span></span><br><span class="line"></span><br><span class="line"><span class="comment">################################ 操作数组</span></span><br><span class="line">names+=(<span class="string">&quot;Wang Wu&quot;</span> <span class="string">&quot;Li Qi&quot;</span>); <span class="comment"># 向数组中添加数据</span></span><br><span class="line"></span><br><span class="line">names_part=(<span class="variable">$&#123;names[@]:1&#125;</span>); <span class="comment"># 数组提取，表示从下标 1的元素开始的所有元素</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;names_part contains <span class="variable">$&#123;names_part[@]&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">names_part=(<span class="variable">$&#123;names[@]:1:2&#125;</span>); <span class="comment"># 数组提取，表示从下标 1的元素开始，取两个元素</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;names_part contains <span class="variable">$&#123;names_part[@]&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">names_part=(<span class="variable">$&#123;names[@]:0&#125;</span>); <span class="comment"># 数组复制</span></span><br><span class="line">names_replace=(<span class="variable">$&#123;names_part[@]/Li/Wang&#125;</span>); <span class="comment"># 数组替换(支持正则表达式)，把 Li 替换成  Wang</span></span><br><span class="line"><span class="comment">#names_replace=($&#123;names_part[@]//Li/Wang&#125;); # 同上</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;names_replace contains <span class="variable">$&#123;names_replace[@]&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># ksh 不支持 行首，行尾，单词边界 正则表达式，下面的方式实现了类似功能</span></span><br><span class="line">names_part=(<span class="variable">$&#123;names[@]:0&#125;</span>);</span><br><span class="line">names_replace=(<span class="variable">$&#123;names_part[@]/#S/X&#125;</span>); <span class="comment"># 数组替换，#S 表示S是单词的第一个字母</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;names_replace contains <span class="variable">$&#123;names_replace[@]&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">names_part=(<span class="variable">$&#123;names[@]:0&#125;</span>);</span><br><span class="line">names_replace=(<span class="variable">$&#123;names_part[@]/%i/X&#125;</span>); <span class="comment"># 数组替换，%i 表示 i 是单词的最后一个字母</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;names_replace contains <span class="variable">$&#123;names_replace[@]&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">names_part=(<span class="variable">$&#123;names[@]:0&#125;</span>);</span><br><span class="line">names_delete=(<span class="variable">$&#123;names_part[@]/Z*ang&#125;</span>); <span class="comment"># 数组删除</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;names_delete contains <span class="variable">$&#123;names_delete[@]&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># ksh 不支持 行首，行尾，单词边界 正则表达式，下面的方式实现了类似功能</span></span><br><span class="line">names_part=(<span class="variable">$&#123;names[@]:0&#125;</span>);</span><br><span class="line">names_delete=(<span class="variable">$&#123;names_part[@]/#Z*ang&#125;</span>); <span class="comment"># 数组删除，# 匹配开头</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;names_delete contains <span class="variable">$&#123;names_delete[@]&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">names_delete=(<span class="variable">$&#123;names_part[@]/%*n&#125;</span>); <span class="comment"># 数组删除，% 匹配结尾</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;names_delete contains <span class="variable">$&#123;names_delete[@]&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">################################ 迭代数组</span></span><br><span class="line"><span class="comment"># for 循环迭代,注意此处有双引号哦，</span></span><br><span class="line"><span class="keyword">for</span> e <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;names[@]&#125;</span>&quot;</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span> <span class="variable">$e</span>;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># while 循环迭代</span></span><br><span class="line">i=0;</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -lt <span class="variable">$&#123;#names[@]&#125;</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;The <span class="variable">$&#123;i&#125;</span>th of names is <span class="variable">$&#123;names[$i]&#125;</span>&quot;</span>;</span><br><span class="line">    ((i++));</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">################################ 删除数组</span></span><br><span class="line"><span class="built_in">unset</span> names[1]; <span class="comment"># 删除下标 1的元素</span></span><br><span class="line"><span class="built_in">unset</span> names; <span class="comment"># 删除数组</span></span><br></pre></td></tr></table></figure>

<p>我们可以通过 ${names[@]} 或 ${names[*]} 得到所有数组元素，但是它们有很大的区别，下面的例子演示了它们的区别。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">################################ 定义数组</span></span><br><span class="line">names=(<span class="string">&quot;abc&quot;</span> <span class="string">&quot;x yz&quot;</span> <span class="string">&quot;1 2 \n3&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">################################ 访问数组</span></span><br><span class="line">length=<span class="variable">$&#123;#names[*]&#125;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;The length of array from #names[*] is <span class="variable">$length</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">length=<span class="string">&quot;<span class="variable">$&#123;#names[*]&#125;</span>&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;The length of array from \&quot;#names[*]\&quot; is <span class="variable">$length</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">length=<span class="variable">$&#123;#names[@]&#125;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;The length of array from #names[@] is <span class="variable">$length</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">length=<span class="string">&quot;<span class="variable">$&#123;#names[@]&#125;</span>&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;The length of array from \&quot;#names[@]\&quot; is <span class="variable">$length</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;iterating array $&#123;names[*]&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> e <span class="keyword">in</span> <span class="variable">$&#123;names[*]&#125;</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;#--<span class="variable">$e</span>--#&quot;</span>;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;iterating array &quot;$&#123;names[*]&#125;&quot;&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> e <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;names[*]&#125;</span>&quot;</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;#--<span class="variable">$e</span>--#&quot;</span>;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;iterating array $&#123;names[@]&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> e <span class="keyword">in</span> <span class="variable">$&#123;names[@]&#125;</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;#--<span class="variable">$e</span>--#&quot;</span>;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;iterating array &quot;$&#123;names[@]&#125;&quot;&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> e <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;names[@]&#125;</span>&quot;</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;#--<span class="variable">$e</span>--#&quot;</span>;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>结果如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">The length of array from <span class="comment">#names[*] is 3</span></span><br><span class="line">The length of array from <span class="string">&quot;#names[*]&quot;</span> is 3</span><br><span class="line">The length of array from <span class="comment">#names[@] is 3</span></span><br><span class="line">The length of array from <span class="string">&quot;#names[@]&quot;</span> is 3</span><br><span class="line">iterating array <span class="variable">$&#123;names[*]&#125;</span></span><br><span class="line"><span class="comment">#--abc--#</span></span><br><span class="line"><span class="comment">#--x--#</span></span><br><span class="line"><span class="comment">#--yz--#</span></span><br><span class="line"><span class="comment">#--1--#</span></span><br><span class="line"><span class="comment">#--2--#</span></span><br><span class="line"><span class="comment">#--</span></span><br><span class="line">3--<span class="comment">#</span></span><br><span class="line">iterating array <span class="string">&quot;<span class="variable">$&#123;names[*]&#125;</span>&quot;</span></span><br><span class="line"><span class="comment">#--abc x yz 1 2 </span></span><br><span class="line">3--<span class="comment">#</span></span><br><span class="line">iterating array <span class="variable">$&#123;names[@]&#125;</span></span><br><span class="line"><span class="comment">#--abc--#</span></span><br><span class="line"><span class="comment">#--x--#</span></span><br><span class="line"><span class="comment">#--yz--#</span></span><br><span class="line"><span class="comment">#--1--#</span></span><br><span class="line"><span class="comment">#--2--#</span></span><br><span class="line"><span class="comment">#--</span></span><br><span class="line">3--<span class="comment">#</span></span><br><span class="line">iterating array <span class="string">&quot;<span class="variable">$&#123;names[@]&#125;</span>&quot;</span></span><br><span class="line"><span class="comment">#--abc--#</span></span><br><span class="line"><span class="comment">#--x yz--#</span></span><br><span class="line"><span class="comment">#--1 2 </span></span><br><span class="line">3--<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>迭代数组时，只有 “${names[@]}” 能保证正确，注意有双引号的哦。</p>
<h2 id="关联数组（Associative-Arrays）"><a href="#关联数组（Associative-Arrays）" class="headerlink" title="关联数组（Associative Arrays）"></a>关联数组（Associative Arrays）</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">################################ 定义数组</span></span><br><span class="line"><span class="comment"># 申明关联数组</span></span><br><span class="line"><span class="built_in">typeset</span> -A country_code_name_map;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 赋值方法 1</span></span><br><span class="line">country_code_name_map[CN]=<span class="string">&#x27;CHINA&#x27;</span>;</span><br><span class="line">country_code_name_map[JP]=<span class="string">&#x27;JAPAN&#x27;</span>;</span><br><span class="line">country_code_name_map[US]=<span class="string">&#x27;UNITED STATES&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 赋值方法 2</span></span><br><span class="line">country_code_name_map=([CN]=<span class="string">&#x27;CHINA&#x27;</span> [JP]=<span class="string">&#x27;JAPAN&#x27;</span> [US]=<span class="string">&#x27;UNITED STATES&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">################################ 访问数组</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;CN = <span class="variable">$&#123;country_code_name_map[CN]&#125;</span>&quot;</span>; <span class="comment"># 取出数组键为 CN 的值</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;country name are <span class="variable">$&#123;country_code_name_map[*]&#125;</span>&quot;</span>; <span class="comment"># 取出所有值</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;country name are <span class="variable">$&#123;country_code_name_map[@]&#125;</span>&quot;</span>; <span class="comment"># 取出所有值</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Having <span class="variable">$&#123;#country_code_name_map[*]&#125;</span> country names&quot;</span>; <span class="comment"># 数组长度</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Having  <span class="variable">$&#123;#country_code_name_map[@]&#125;</span> country names&quot;</span>; <span class="comment"># 数组长度</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;country code are <span class="variable">$&#123;!country_code_name_map[*]&#125;</span>&quot;</span>; <span class="comment"># 取出所有键</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;country code are <span class="variable">$&#123;!country_code_name_map[@]&#125;</span>&quot;</span>; <span class="comment"># 取出所有键</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">################################ 操作数组</span></span><br><span class="line">country_code_name_map+=([KR]=<span class="string">&#x27;SOUTH KOREA&#x27;</span>); <span class="comment"># 向数组中添加数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数组提取，替换，删除操作和上面一致</span></span><br><span class="line"></span><br><span class="line"><span class="comment">################################ 迭代数组</span></span><br><span class="line"><span class="comment"># for 循环迭代</span></span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;!country_code_name_map[@]&#125;</span>&quot;</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;<span class="variable">$index</span> = <span class="variable">$&#123;country_code_name_map[$index]&#125;</span>&quot;</span>;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">################################ 删除数组</span></span><br><span class="line"><span class="built_in">unset</span> country_code_name_map[KR]; <span class="comment"># 删除键为 KR的元素</span></span><br><span class="line"><span class="built_in">unset</span> country_code_name_map; <span class="comment"># 删除数组</span></span><br></pre></td></tr></table></figure>

<h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p>引用相当于一个别名。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh  </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">typeset</span> name=<span class="string">&quot;Shangbo&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义引用变量方法 1</span></span><br><span class="line"><span class="built_in">typeset</span> -n name_ref1=name;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;name_ref1=<span class="variable">$name_ref1</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义引用变量方法 2</span></span><br><span class="line">nameref name_ref2=name;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;name_ref2=<span class="variable">$name_ref2</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到实际变量名</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;name_ref1 reference <span class="variable">$&#123;!name_ref1&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除引用变量</span></span><br><span class="line"><span class="built_in">unset</span> -n name_ref1;</span><br><span class="line"><span class="built_in">unset</span> -n name_ref2;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数组的引用</span></span><br><span class="line">names=(<span class="string">&quot;Shang Bo&quot;</span> <span class="string">&quot;Zhang San&quot;</span> <span class="string">&quot;Li Si&quot;</span>);</span><br><span class="line"><span class="built_in">typeset</span> -n names_ref=names;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;names_ref=<span class="variable">$&#123;names_ref[@]&#125;</span>&quot;</span>;</span><br></pre></td></tr></table></figure>

<h1 id="控制结构"><a href="#控制结构" class="headerlink" title="控制结构"></a>控制结构</h1><h2 id="if-语句"><a href="#if-语句" class="headerlink" title="if 语句"></a>if 语句</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">typeset</span> -i x=20;</span><br><span class="line"><span class="built_in">typeset</span> -i y=3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$x</span> -gt <span class="variable">$y</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> &gt;= <span class="variable">$y</span> **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$x</span> -gt <span class="variable">$y</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> &gt; <span class="variable">$y</span> **#&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> &lt;= <span class="variable">$y</span> **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$x</span> -gt <span class="variable">$y</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> &gt; <span class="variable">$y</span> **#&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$x</span> -eq <span class="variable">$y</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> = <span class="variable">$y</span> **#&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#** <span class="variable">$x</span> &lt; <span class="variable">$y</span> **#&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<h2 id="case-语句"><a href="#case-语句" class="headerlink" title="case 语句"></a>case 语句</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">typeset</span> opt=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$opt</span> <span class="keyword">in</span></span><br><span class="line">	a) <span class="built_in">print</span> <span class="string">&quot;<span class="variable">$opt</span> is a&quot;</span>;;</span><br><span class="line">	b) <span class="built_in">print</span> <span class="string">&quot;<span class="variable">$opt</span> is b&quot;</span>;;</span><br><span class="line">	c|d) <span class="built_in">print</span> <span class="string">&quot;<span class="variable">$opt</span> is c or d&quot;</span>;;</span><br><span class="line">	*) <span class="built_in">print</span> <span class="string">&quot;Option not support...&quot;</span>;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>

<h2 id="while-语句"><a href="#while-语句" class="headerlink" title="while 语句"></a>while 语句</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">typeset</span> -i n=0;</span><br><span class="line"><span class="built_in">typeset</span> -i sum=0;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> [[ <span class="variable">$n</span> -lt 11 ]]; <span class="keyword">do</span></span><br><span class="line">	(( sum += n++ ));</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;sum=<span class="variable">$sum</span>&quot;</span>;</span><br></pre></td></tr></table></figure>

<h2 id="until-语句"><a href="#until-语句" class="headerlink" title="until 语句"></a>until 语句</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">typeset</span> -i n=0;</span><br><span class="line"><span class="built_in">typeset</span> -i sum=0;</span><br><span class="line"></span><br><span class="line">until [[ <span class="variable">$n</span> -gt 10 ]]; <span class="keyword">do</span></span><br><span class="line">	(( sum += n++ ));</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;sum=<span class="variable">$sum</span>&quot;</span>;</span><br></pre></td></tr></table></figure>

<h2 id="for-语句"><a href="#for-语句" class="headerlink" title="for 语句"></a>for 语句</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式1</span></span><br><span class="line"><span class="built_in">integer</span> sum=0;</span><br><span class="line"><span class="keyword">for</span> ((i = 1; i &lt;= 10; i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    ((sum+=i));</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">print</span> <span class="variable">$sum</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式2</span></span><br><span class="line"><span class="keyword">for</span> foo <span class="keyword">in</span> $(ls); <span class="keyword">do</span></span><br><span class="line">   <span class="keyword">if</span> [[ -d <span class="variable">$foo</span> ]];<span class="keyword">then</span></span><br><span class="line">      <span class="built_in">print</span> <span class="string">&quot;<span class="variable">$foo</span> is a directory&quot;</span></span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">print</span> <span class="string">&quot;<span class="variable">$foo</span> is a file&quot;</span></span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="select-语句"><a href="#select-语句" class="headerlink" title="select 语句"></a>select 语句</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh  </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># select 语句应用在交互式程序，显示一个菜单供用户输入</span></span><br><span class="line">select opt <span class="keyword">in</span> a b c d; <span class="keyword">do</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment"># $REPLY 是个内置变量，存储用户输入的数字</span></span><br><span class="line">	<span class="keyword">case</span> <span class="variable">$REPLY</span> <span class="keyword">in</span></span><br><span class="line">		1 ) <span class="built_in">print</span> <span class="string">&quot;<span class="variable">$opt</span>&quot;</span>; <span class="built_in">break</span>;;</span><br><span class="line">		2 ) <span class="built_in">print</span> <span class="string">&quot;<span class="variable">$opt</span>&quot;</span>; <span class="built_in">break</span>;;</span><br><span class="line">		3 ) <span class="built_in">print</span> <span class="string">&quot;<span class="variable">$opt</span>&quot;</span>; <span class="built_in">break</span>;;</span><br><span class="line">		4 ) <span class="built_in">print</span> <span class="string">&quot;<span class="variable">$opt</span>&quot;</span>; <span class="built_in">break</span>;;</span><br><span class="line">		* ) <span class="built_in">print</span> <span class="string">&quot;invalid, please select again.&quot;</span>;;</span><br><span class="line">	<span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="循环控制语句"><a href="#循环控制语句" class="headerlink" title="循环控制语句"></a>循环控制语句</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># break：退出循环  </span></span><br><span class="line"><span class="comment"># continue：执行下一循环  </span></span><br></pre></td></tr></table></figure>

<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">################### 函数必须先定义后使用</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义函数方式 1: ksh 语法</span></span><br><span class="line"><span class="keyword">function</span> fun_test1 &#123;</span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;This is function fun_test1.&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义函数方式 2: POSIX 语法</span></span><br><span class="line"><span class="function"><span class="title">fun_test2</span></span> ()&#123;</span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;This is function fun_test2.&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数</span></span><br><span class="line"><span class="keyword">function</span> fun_test3 &#123;</span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;Enter function <span class="variable">$0</span>&quot;</span>; <span class="comment"># $0 表示函数名</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;The first parameter is <span class="variable">$1</span>&quot;</span>; <span class="comment"># $1 引用第一个参数</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;The second parameter is <span class="variable">$2</span>&quot;</span>; <span class="comment"># $2 引用第二个参数</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;This function has <span class="variable">$#</span> parameters&quot;</span>; <span class="comment"># $# 表示参数的个数</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;You are calling <span class="variable">$0</span> $*&quot;</span>; <span class="comment"># $* 是个数组，存储所有的参数</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;You are calling <span class="variable">$0</span> <span class="variable">$@</span>&quot;</span>; <span class="comment"># $@ 是个数组，存储所有的参数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># return 语句返回代码给调用者</span></span><br><span class="line"><span class="comment"># 0 代表函数执行成功， 其他值代表失败</span></span><br><span class="line"><span class="keyword">function</span> equal &#123;</span><br><span class="line">	<span class="keyword">if</span> [[ -z <span class="variable">$1</span> || -z <span class="variable">$2</span> ]];<span class="keyword">then</span>  </span><br><span class="line">    	<span class="built_in">return</span> 1; </span><br><span class="line">	<span class="keyword">fi</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> [ <span class="variable">$1</span> = <span class="variable">$2</span> ]; <span class="keyword">then</span>  </span><br><span class="line">	    <span class="built_in">return</span> 0;</span><br><span class="line">	<span class="keyword">fi</span></span><br><span class="line">	</span><br><span class="line">	<span class="built_in">return</span> 2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据全局变量  max_value 得到函数的返回值</span></span><br><span class="line"><span class="keyword">function</span> max &#123;</span><br><span class="line">	<span class="keyword">if</span> [[ <span class="variable">$1</span> -gt <span class="variable">$2</span> ]]; <span class="keyword">then</span>  </span><br><span class="line">    	max_value=<span class="variable">$1</span>;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		max_value=<span class="variable">$2</span>;</span><br><span class="line">	<span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据引用得到函数的返回值</span></span><br><span class="line"><span class="keyword">function</span> max2 &#123;</span><br><span class="line">	<span class="built_in">typeset</span> -n r=<span class="variable">$3</span>; <span class="comment"># 设置变量 r 引用 $3</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> [[ <span class="variable">$1</span> -gt <span class="variable">$2</span> ]]; <span class="keyword">then</span>  </span><br><span class="line">    	r=<span class="variable">$1</span>;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		r=<span class="variable">$2</span>;</span><br><span class="line">	<span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据标准输出得到函数的返回值</span></span><br><span class="line"><span class="keyword">function</span> min &#123;</span><br><span class="line">	<span class="keyword">if</span> [[ <span class="variable">$1</span> -lt <span class="variable">$2</span> ]]; <span class="keyword">then</span>  </span><br><span class="line">    	<span class="built_in">print</span> <span class="variable">$1</span>;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">print</span> <span class="variable">$2</span>;</span><br><span class="line">	<span class="keyword">fi</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">################### Main</span></span><br><span class="line"><span class="comment"># 调用函数</span></span><br><span class="line">fun_test1;</span><br><span class="line">fun_test2;</span><br><span class="line">fun_test3 a b c d;</span><br><span class="line"></span><br><span class="line">equal;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Call equal function end with error code $?&quot;</span>; <span class="comment"># $? 表示上个命令返回的代码</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">typeset</span> -i max_value=0;</span><br><span class="line">max 1 2;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;the bigger value of 1 and 2 is <span class="variable">$max_value</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">typeset</span> -i max_value=0;</span><br><span class="line">max2 3 4 max_value;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;the bigger value of 3 and 4 is <span class="variable">$max_value</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># `` 用来捕获函数或命令的标准输入到变量中</span></span><br><span class="line">smaller=`min 1 2`;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;the smaller value of 1 and 2 is <span class="variable">$smaller</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># $() 用来捕获函数或命令的标准输入到变量中</span></span><br><span class="line">smaller=$(min 3 4）;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;the smaller value of 3 and 4 is <span class="variable">$smaller</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除函数</span></span><br><span class="line"><span class="built_in">unset</span> -f fun_test1;</span><br><span class="line"><span class="built_in">unset</span> -f fun_test2;</span><br></pre></td></tr></table></figure>



<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>我们可以从 $* 或 $@ 数组中得到函数的所有参数，但是它们有非常大的区别。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">################### 函数</span></span><br><span class="line"><span class="keyword">function</span> fun_test &#123;</span><br><span class="line">	<span class="built_in">print</span> <span class="string">&#x27;iterating array $*&#x27;</span>;  </span><br><span class="line">	<span class="built_in">typeset</span> -i i=1;</span><br><span class="line">	<span class="keyword">for</span> p <span class="keyword">in</span> $*;  </span><br><span class="line">	<span class="keyword">do</span>  </span><br><span class="line">	    <span class="built_in">print</span> <span class="string">&quot;The <span class="variable">$&#123;i&#125;</span>th parameter is [<span class="variable">$p</span>]&quot;</span>;  </span><br><span class="line">	    ((i++));  </span><br><span class="line">	<span class="keyword">done</span>;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">print</span> <span class="string">&#x27;iterating array &quot;$*&quot;&#x27;</span>;</span><br><span class="line">	i=1;</span><br><span class="line">	<span class="keyword">for</span> p <span class="keyword">in</span> <span class="string">&quot;$*&quot;</span>;  </span><br><span class="line">	<span class="keyword">do</span>  </span><br><span class="line">	    <span class="built_in">print</span> <span class="string">&quot;The <span class="variable">$&#123;i&#125;</span>th parameter is [<span class="variable">$p</span>]&quot;</span>;  </span><br><span class="line">	    ((i++));  </span><br><span class="line">	<span class="keyword">done</span>;	</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">print</span> <span class="string">&#x27;iterating array $@&#x27;</span>;</span><br><span class="line">	i=1;  </span><br><span class="line">	<span class="keyword">for</span> p <span class="keyword">in</span> <span class="variable">$@</span>;  </span><br><span class="line">	<span class="keyword">do</span>  </span><br><span class="line">	    <span class="built_in">print</span> <span class="string">&quot;The <span class="variable">$&#123;i&#125;</span>th parameter is [<span class="variable">$p</span>]&quot;</span>;  </span><br><span class="line">	    ((i++));  </span><br><span class="line">	<span class="keyword">done</span>;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">print</span> <span class="string">&#x27;iterating array &quot;$@&quot;&#x27;</span>;</span><br><span class="line">	i=1;</span><br><span class="line">	<span class="keyword">for</span> p <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span>;  </span><br><span class="line">	<span class="keyword">do</span>  </span><br><span class="line">	    <span class="built_in">print</span> <span class="string">&quot;The <span class="variable">$&#123;i&#125;</span>th parameter is [<span class="variable">$p</span>]&quot;</span>;  </span><br><span class="line">	    ((i++));  </span><br><span class="line">	<span class="keyword">done</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">################### Main</span></span><br><span class="line">fun_test abc <span class="string">&quot;x yz&quot;</span> <span class="string">&quot;1 2 \n3&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">iterating array $*</span><br><span class="line">The 1th parameter is [abc]</span><br><span class="line">The 2th parameter is [x]</span><br><span class="line">The 3th parameter is [yz]</span><br><span class="line">The 4th parameter is [1]</span><br><span class="line">The 5th parameter is [2]</span><br><span class="line">The 6th parameter is [</span><br><span class="line">3]</span><br><span class="line"></span><br><span class="line">iterating array <span class="string">&quot;$*&quot;</span></span><br><span class="line">The 1th parameter is [abc x yz 1 2 </span><br><span class="line">3]</span><br><span class="line"></span><br><span class="line">iterating array <span class="variable">$@</span></span><br><span class="line">The 1th parameter is [abc]</span><br><span class="line">The 2th parameter is [x]</span><br><span class="line">The 3th parameter is [yz]</span><br><span class="line">The 4th parameter is [1]</span><br><span class="line">The 5th parameter is [2]</span><br><span class="line">The 6th parameter is [</span><br><span class="line">3]</span><br><span class="line"></span><br><span class="line">iterating array <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">The 1th parameter is [abc]</span><br><span class="line">The 2th parameter is [x yz]</span><br><span class="line">The 3th parameter is [1 2 </span><br><span class="line">3]</span><br></pre></td></tr></table></figure>

<p>从上面的结果中可以看出，<strong>只有 “$@” 能保证正确</strong>，注意，有双引号的哦。</p>
<h2 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">函数        返回值</span><br><span class="line">abs	        Absolute value	</span><br><span class="line">hypot       Euclidean distance</span><br><span class="line">acos	    Arc cosine</span><br><span class="line">int         Integer part</span><br><span class="line">sin	        Arc sine</span><br><span class="line"><span class="built_in">log</span>	        Natural logarithm</span><br><span class="line">atan        Arc tangent</span><br><span class="line">pow         Exponentiation (xy)</span><br><span class="line">atan2       Arc tangent of two variables</span><br><span class="line">sin	        Sine</span><br><span class="line">cos	        Cosine</span><br><span class="line">sinh        Hyperbolic sine</span><br><span class="line">cosh	    Hyperbolic cosine</span><br><span class="line">sqrt        Square root</span><br><span class="line">exp         Exponential (ex)</span><br><span class="line">tan	        Tangent</span><br><span class="line">fmod        Floating-point remainder</span><br><span class="line">tanh        Hyperbolic tangent</span><br></pre></td></tr></table></figure>

<h1 id="命令退出状态"><a href="#命令退出状态" class="headerlink" title="命令退出状态"></a>命令退出状态</h1><p>每个 Linux 命令，脚本或函数都有一个退出状态，它用来指示该命令，脚本或函数是否执行成功。0 代表成功，其他值（1-255） 代表失败。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">退出状态   描述</span><br><span class="line">1-125    命令执行失败</span><br><span class="line">2        命令使用错误，如参数传递不正确</span><br><span class="line">126      命令不可执行</span><br><span class="line">127      找不到命令</span><br><span class="line">128-255  外部命令执行失败</span><br><span class="line">256	     由于一个信号，命令终止</span><br></pre></td></tr></table></figure>

<p>对于函数来说，我们可以使用 return 语句来返回退出状态，如果一个函数没有 return 语句，默认返回函数中最后执行语句的的退出状态。对于脚本来说，我们可以使用 exit 语句来返回退出状态，如果一个脚本没有 exit 语句，默认返回脚本中最后执行语句的的退出状态。有一点需要特别注意，当脚本中的一条命令执行失败时，整个脚本并不会停止运行，所以对于可能出错的命令，我们最好检查它的退出状态，我们可以通过变量 $? 来得到它的退出状态。下面是一个简单的例子。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh  </span></span><br><span class="line"></span><br><span class="line">grep <span class="built_in">test</span> test.txt &gt; /dev/null;</span><br><span class="line"></span><br><span class="line">exit_code=$?;</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$exit_code</span> -ne 0 ]]; <span class="keyword">then</span>  </span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;command failed.&quot;</span></span><br><span class="line">	<span class="built_in">exit</span> 1;</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>事实上，我们可以把命令直接写在 if 语句中，如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh  </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> grep <span class="built_in">test</span> test.txt &gt; /dev/null; <span class="keyword">then</span>  </span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;command success.&quot;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;command failed.&quot;</span>;</span><br><span class="line">    <span class="built_in">exit</span> 1;</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>如果每条语句都这么检查退出状态，那么你的脚本会很长，其实，我们还可以这么写。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh  </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用逻辑运算符的短路特性</span></span><br><span class="line">grep <span class="built_in">test</span> test.txt &gt; /dev/null &amp;&amp; <span class="built_in">print</span> <span class="string">&quot;command success.&quot;</span></span><br><span class="line">grep <span class="built_in">test</span> test.txt &gt; /dev/null || <span class="built_in">print</span> <span class="string">&quot;command failed.&quot;</span>;<span class="built_in">exit</span> 1</span><br></pre></td></tr></table></figure>

<h1 id="向脚本传递参数"><a href="#向脚本传递参数" class="headerlink" title="向脚本传递参数"></a>向脚本传递参数</h1><h2 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h2><p>如果你的脚本只需要很少的参数，你可以通过 $1,$2 … $n 直接引用它们。下面是一个简单的例子。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># $0 表示脚本名</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;The script name is <span class="variable">$0</span>&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;The first parameter is <span class="variable">$1</span>&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;The Second parameter is <span class="variable">$2</span>&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>你也可以使用 shift 删除前面的参数即可，后面的参数会自动前移，下面是一个简单的例子。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;The first parameter is <span class="variable">$1</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># shift 删除第一个参数，同时将后面的参数前移</span></span><br><span class="line"><span class="built_in">shift</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;The Second parameter is <span class="variable">$1</span>&quot;</span>;<span class="comment"># 注意此次还是 $1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;The third parameter is <span class="variable">$2</span>&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;The fourth parameter is <span class="variable">$3</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># shift 删除前三个参数，同时将后面的参数前移</span></span><br><span class="line"><span class="built_in">shift</span> 3;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;The fifth parameter is <span class="variable">$1</span>&quot;</span>;<span class="comment"># 注意此次还是 $1</span></span><br></pre></td></tr></table></figure>



<h2 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h2><p>事实上，ksh 会自动将所有的参数放到数组 $@ 和 $* 数组中，你可以迭代它来得到所有的参数。下面是一个简单的例子</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------- $# 表示参数的数量 ---------------#</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;This script has <span class="variable">$#</span> parameters.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------- 迭代数组 $@ ---------------#</span></span><br><span class="line"><span class="built_in">typeset</span> -i i=1;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;iterating array $@&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> <span class="variable">$@</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;The <span class="variable">$&#123;i&#125;</span>th parameter is [<span class="variable">$p</span>]&quot;</span>;</span><br><span class="line">	((i++));</span><br><span class="line"><span class="keyword">done</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------- 迭代数组 $* ---------------#</span></span><br><span class="line">i=0;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;iterating array $*&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> $*;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;The <span class="variable">$&#123;i&#125;</span>th parameter is [<span class="variable">$p</span>]&quot;</span>;</span><br><span class="line">	((i++));</span><br><span class="line"><span class="keyword">done</span>;</span><br></pre></td></tr></table></figure>

<p>ksh 为什么会将参数放在两个数组中（$@，$*），它们有什么区别呢？下面的例子演示了它们之间的区别。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------- 迭代数组 $*---------------#</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;iterating array $*&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> $*;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#--[<span class="variable">$p</span>]--#&quot;</span>;</span><br><span class="line"><span class="keyword">done</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------- 迭代数组 &quot;$*&quot;,注意数组用双引号括起来 ---------------#</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;iterating array &quot;$*&quot;&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> <span class="string">&quot;$*&quot;</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#--[<span class="variable">$p</span>]--#&quot;</span>;</span><br><span class="line"><span class="keyword">done</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------- 迭代数组 $@ ---------------#</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;iterating array $@&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> <span class="variable">$@</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#--[<span class="variable">$p</span>]--#&quot;</span>;</span><br><span class="line"><span class="keyword">done</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------- 迭代数组 &quot;$@&quot;,注意数组用双引号括起来 ---------------#</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;iterating array &quot;$@&quot;&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;#--[<span class="variable">$p</span>]--#&quot;</span>;</span><br><span class="line"><span class="keyword">done</span>;</span><br></pre></td></tr></table></figure>

<p>结果如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">iterating array $*</span><br><span class="line"><span class="comment">#--[abc]--#</span></span><br><span class="line"><span class="comment">#--[x]--#</span></span><br><span class="line"><span class="comment">#--[yz]--#</span></span><br><span class="line"><span class="comment">#--[1]--#</span></span><br><span class="line"><span class="comment">#--[2</span></span><br><span class="line">3]--<span class="comment">#</span></span><br><span class="line">iterating array <span class="string">&quot;$*&quot;</span></span><br><span class="line"><span class="comment">#--[abc x yz 1 2</span></span><br><span class="line">3]--<span class="comment">#</span></span><br><span class="line">iterating array <span class="variable">$@</span></span><br><span class="line"><span class="comment">#--[abc]--#</span></span><br><span class="line"><span class="comment">#--[x]--#</span></span><br><span class="line"><span class="comment">#--[yz]--#</span></span><br><span class="line"><span class="comment">#--[1]--#</span></span><br><span class="line"><span class="comment">#--[2</span></span><br><span class="line">3]--<span class="comment">#</span></span><br><span class="line">iterating array <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line"><span class="comment">#--[abc]--#</span></span><br><span class="line"><span class="comment">#--[x yz]--#</span></span><br><span class="line"><span class="comment">#--[1 2</span></span><br><span class="line">3]--<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>从上面的结果可以看到，只有”$@”能保证正确，注意有双引号哦。</p>
<h2 id="方法3"><a href="#方法3" class="headerlink" title="方法3"></a>方法3</h2><p>如果你想像 Linux 命令那样传递参数，你需要用到函数 getopts。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># OPTIND 表示当前参数的索引</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Current parameter index is <span class="variable">$OPTIND</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用此脚本的方式： ./test.ksh -a -b &#x27;test&#x27; -c 10 eee ff g</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># getopts 函数有两个参数</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 第一个参数（:ab:c#）是该脚本支持的选项</span></span><br><span class="line"><span class="comment"># 最前面的冒号表示  getopts 抑制错误消息，由脚本自己提供错误处理</span></span><br><span class="line"><span class="comment"># b 后的冒号表示改选项需要一个字符参数 （-b &#x27;test&#x27;）</span></span><br><span class="line"><span class="comment"># c 后的井号表示改选项需要一个数字参数 （-c 10）</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 第二个参数  optname 是一个变量名，接收函数返回的选项</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">getopts</span> <span class="string">&quot;:ab:c#&quot;</span> optname</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="keyword">case</span> <span class="string">&quot;<span class="variable">$optname</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">		<span class="string">&quot;a&quot;</span>)</span><br><span class="line">			<span class="built_in">print</span> <span class="string">&quot;Option <span class="variable">$optname</span> is specified&quot;</span></span><br><span class="line">			;;</span><br><span class="line">		<span class="string">&quot;b&quot;</span>)</span><br><span class="line">			<span class="comment"># $OPTARG 保存选项后面的参数值，此例是 test</span></span><br><span class="line">			<span class="built_in">print</span> <span class="string">&quot;Option <span class="variable">$optname</span> has value <span class="variable">$OPTARG</span>&quot;</span></span><br><span class="line">			;;</span><br><span class="line">		<span class="string">&quot;c&quot;</span>)</span><br><span class="line">			<span class="built_in">print</span> <span class="string">&quot;Option <span class="variable">$optname</span> has value <span class="variable">$OPTARG</span>&quot;</span></span><br><span class="line">			;;</span><br><span class="line">		<span class="string">&quot;?&quot;</span>) <span class="comment"># ? 表示发现不能识别的选项</span></span><br><span class="line">			<span class="built_in">print</span> <span class="string">&quot;Unknown option <span class="variable">$OPTARG</span>&quot;</span></span><br><span class="line">			<span class="built_in">exit</span> -1</span><br><span class="line">			;;</span><br><span class="line">		<span class="string">&quot;:&quot;</span>) <span class="comment"># : 表示发现某个选项需要值，但是找不到这个值， 此时  OPTARG 包含丢失参数的选项</span></span><br><span class="line">			<span class="built_in">print</span> <span class="string">&quot;No argument value for option <span class="variable">$OPTARG</span>&quot;</span></span><br><span class="line">			<span class="built_in">exit</span> -1</span><br><span class="line">			;;</span><br><span class="line">		*)</span><br><span class="line">       <span class="built_in">print</span> <span class="string">&quot;Unknown error while processing options&quot;</span></span><br><span class="line">       <span class="built_in">exit</span> -1</span><br><span class="line">       ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;Current parameter index is <span class="variable">$OPTIND</span>&quot;</span>;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 选项后面的参数 (eee ff g)</span></span><br><span class="line">argstart=<span class="variable">$OPTIND</span>;</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;@:$argstart&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;[<span class="variable">$p</span>]&quot;</span>;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h1 id="I-O"><a href="#I-O" class="headerlink" title="I/O"></a>I/O</h1><p>ksh 支持如下 I/O。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">重定向          描述</span><br><span class="line">&gt; file        标准输出到文件，文件存在则替换</span><br><span class="line">&gt;&gt; file       标准输出到文件，文件存在则添加到末尾</span><br><span class="line">&lt; file        从文件到标准输入</span><br><span class="line">&lt;&gt; file       以读写模式打开文件</span><br><span class="line">cmd1 | cmd2   管道; 把 cmd1 的标准输出作为 cmd2 的标准输入</span><br><span class="line">&gt;| file       Force standard output to file even <span class="keyword">if</span> noclobber is <span class="built_in">set</span></span><br><span class="line">&lt;&lt; <span class="string">label      Here-document</span></span><br><span class="line"><span class="string">&lt;&lt;- label</span>     Here-document variant</span><br><span class="line">&lt;&lt;&lt; <span class="string">label     Here-string</span></span><br><span class="line"><span class="string">n&gt; file       把文件描述符 n 输出到文件（1是标准输出，2是标准错误输出）</span></span><br><span class="line"><span class="string">n&lt; file       输入文件描述符 n （0是标准输入）</span></span><br><span class="line"><span class="string">&lt;&amp;n           从文件描述符 n重复标准输入</span></span><br><span class="line"><span class="string">&gt;&amp;n           重复标准输出到文件描述符 n</span></span><br><span class="line"><span class="string">&lt;&amp;n-          把文件描述符 n作为标准输入</span></span><br><span class="line"><span class="string">&gt;&amp;n-          把文件描述符 n作为标准输出</span></span><br><span class="line"><span class="string">&lt;&amp;-           关闭标准输入</span></span><br><span class="line"><span class="string">&gt;&amp;-           关闭标准输出</span></span><br><span class="line"><span class="string">|&amp;            Background process with I/O from parent shell</span></span><br><span class="line"><span class="string">n&lt;&amp;p          Move input from coprocess to file descriptor n</span></span><br><span class="line"><span class="string">n&gt;&amp;p          Move output to coprocess to file descriptor n</span></span><br></pre></td></tr></table></figure>

<p>大家对 &gt; file， &gt;&gt; file， &lt; file 和 cmd1 | cmd2 应该都很熟悉， 只要懂一点 Linux 的人不可能没用过。 n&gt; file 和 &gt;&amp;n 看上去挺陌生，其实你肯定也用过，看看下面的命令吧，是不是很熟悉。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">cmd &gt; t.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure>

<p>什么是 Here-document （&lt;&lt; label，&lt;&lt;- label） 呢？你肯定也用过，只是不知道它的名字而已。看看下面的代码吧。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line">user=<span class="string">&quot;wave0409@163.com&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#  &lt;&lt; label</span></span><br><span class="line">mail <span class="variable">$user</span> &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">Hi $user,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">This is a test mail, please ignore.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Regards</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#  &lt;&lt;- label 会忽略前面的 TAB，使代码可读性更好</span></span><br><span class="line">mail <span class="variable">$user</span> &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">		Hi $user,</span></span><br><span class="line"><span class="string">		</span></span><br><span class="line"><span class="string">		This is a test mail, please ignore.</span></span><br><span class="line"><span class="string">		</span></span><br><span class="line"><span class="string">		Regards</span></span><br><span class="line"><span class="string">		EOF</span></span><br></pre></td></tr></table></figure>

<p>什么是 Here-string 呢？看看下面的代码吧。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line">user=<span class="string">&quot;wave0409@163.com&quot;</span>;</span><br><span class="line">text=<span class="string">&quot;this is a test mail.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用管道</span></span><br><span class="line"><span class="built_in">print</span> <span class="variable">$text</span> | mail <span class="variable">$user</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#  &lt;&lt;&lt; label</span></span><br><span class="line">mail <span class="variable">$user</span> &lt;&lt;&lt; <span class="variable">$text</span>;</span><br></pre></td></tr></table></figure>

<p>通常，Linux 命令只接受一个输入和一个输出，但是通过下面的方式，我们可以接受多个输入和多个输出。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">cmd  &lt;(input) &lt;(input)</span><br><span class="line">cmd  &gt;(output) &gt;(output)</span><br></pre></td></tr></table></figure>

<p>下面是一个简单的例子。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh  </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将原始数据test.txt，1)排序后输出test.txt.sort 2) 取第二列输出test.txt.id 3) 保存原始数据 test.txt.raw</span></span><br><span class="line">cat test.txt | tee &gt;(sort | uniq &gt; test.txt.sort) &gt;(cut -d, -f2 test.txt &gt; test.txt.id) &gt; test.txt.raw</span><br></pre></td></tr></table></figure>

<h1 id="格式化输出"><a href="#格式化输出" class="headerlink" title="格式化输出"></a>格式化输出</h1><h2 id="简单示例"><a href="#简单示例" class="headerlink" title="简单示例"></a>简单示例</h2><p>几乎所有的语言都支持 printf 函数，ksh 也不例外。下面我们来看一个简单的例子。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;printf example:%,30.6f&quot;</span> 9876543210.0123456789;</span><br></pre></td></tr></table></figure>

<p>结果如下:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span> example:          9,876,543,210.012346</span><br></pre></td></tr></table></figure>

<p>%,30.6f 被称为格式符(format specifier), 格式符由以下几部分组成:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">%[flags][width][.precision]conversion  </span><br><span class="line">%  ,      30      .6         f  </span><br></pre></td></tr></table></figure>

<h2 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h2><ul>
<li>%是必须的, 任何格式符都由百分号开始.</li>
<li>flags 是可选的, 详见下表.</li>
<li>width 是可选的, 表示输出的宽度.</li>
<li>precision 可选的, precision 依赖于 conversion, 详见下表.</li>
<li>conversion 是必须的, 表示如何格式化参数, 详见下表.</li>
</ul>
<h2 id="转换符-conversion"><a href="#转换符-conversion" class="headerlink" title="转换符(conversion)"></a>转换符(conversion)</h2><p>ksh 支持如下转换符(conversion)。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">转换符           描述</span><br><span class="line"> d               十进制整数,也可进制转换</span><br><span class="line"> i               十进制整数</span><br><span class="line"> u               无符号十进制整数 </span><br><span class="line"> e               浮点数科学计数法</span><br><span class="line"> E               浮点数科学计数法</span><br><span class="line"> f               浮点数</span><br><span class="line"> g               %e 或 %f, 取决于哪个更短, 删除尾部0</span><br><span class="line"> G               %E 或 %f, 取决于哪个更短, 删除尾部0</span><br><span class="line"> o               无符号八进制整数</span><br><span class="line"> x               无符号十六进制整数（a-f for 10 to 15）</span><br><span class="line"> X               无符号十六进制整数（A-F for 10 to 15）</span><br><span class="line"> c               ASCII 字符 (打印第一个字符)</span><br><span class="line"> %               %</span><br><span class="line"> s               字符串</span><br><span class="line"> b                %s，支持更多的转义字符</span><br><span class="line"> H                %s，转成 HTML 字符，如：空格转成  </span><br><span class="line"> P                %s，把 egrep 风格的正则表达式转成 ksh 风格</span><br><span class="line"> R                %s，把 ksh 风格的正则表达式转成 egrep 风格</span><br><span class="line"> q                %s，打印成 $&#x27;...&#x27; 风格</span><br><span class="line"> n               到字符串的长度</span><br><span class="line"> (date format)T  格式化日期</span><br></pre></td></tr></table></figure>

<h2 id="日期和时间转换符"><a href="#日期和时间转换符" class="headerlink" title="日期和时间转换符"></a>日期和时间转换符</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">转换符(Conversion)	描述(Description)</span><br><span class="line">Y	                4位数字的年(前面补0)</span><br><span class="line">m	                月,01-12</span><br><span class="line">d	                日,01-31</span><br><span class="line">H	                小时,00-23</span><br><span class="line">M	                分钟,00-59</span><br><span class="line">S	                秒,00-60</span><br><span class="line">I	                小时,01-12</span><br><span class="line">N	                纳秒,000000000 - 999999999</span><br><span class="line">P	                本地敏感, PM or AM</span><br><span class="line">p	                本地敏感,pm or am</span><br><span class="line">z	                时区偏移量, 如 +0800</span><br><span class="line">Z	                时区</span><br><span class="line">s	                从格林威治时间1970-01-01 00:00:00起的秒数</span><br><span class="line">B	                月的完整拼写</span><br><span class="line">b/h	                月的缩写</span><br><span class="line">A	                星期的完整拼写</span><br><span class="line">a	                星期的缩写</span><br><span class="line">y	                年的后两位数字(前面补0)</span><br><span class="line">C	                年的前两位数字(前面补0)</span><br><span class="line">j	                一年的第几天,001-366</span><br><span class="line">e	                日,1-31</span><br><span class="line">R	                24小时时间,如 18:05</span><br><span class="line">T	                24小时时间,如 18:05:19</span><br><span class="line">r	                12小时时间, 如 06:05:19 pm</span><br><span class="line">D	                美国格式的日期(月/日/年),如 02/09/2004</span><br><span class="line">F	                ISO 8601 日期, 如 2004-02-09</span><br><span class="line">c	                完整的日期和时间,如 Tue Oct  6 09:15:27 2015</span><br><span class="line">k	                完整的日期和时间,如 Tue Oct  6 09:18:22 EDT 2015</span><br><span class="line">l                   完整的日期和时间,如 Oct  6 09:19</span><br><span class="line">L                   完整的日期和时间,如  Tue Oct  6 09:20:17 EDT 2015</span><br></pre></td></tr></table></figure>

<h2 id="标志-flag"><a href="#标志-flag" class="headerlink" title="标志(flag)"></a>标志(flag)</h2><p>ksh 支持如下标志(flag)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">标志         描述               举例</span><br><span class="line">-           左对齐             |3333.33 |</span><br><span class="line">空格         在正数之前添加空格    | 3333.33|，|-3333.33|</span><br><span class="line">+           打印正负数符号       |+3333.33|，|-3333.33|</span><br><span class="line">0           数字前面补0         |003333.33|</span><br><span class="line">,           添加千分位          |3,333.33|</span><br><span class="line">#(对于%o)    添加前缀0           |0515|</span><br><span class="line">#(对于%x)    添加前缀0x	      |0x1bc|</span><br><span class="line">#(对于%X)    添加前缀0X	      |0X1bc|</span><br><span class="line">#(对于%e)    添加小数点          |1.000000e+01|</span><br><span class="line">#(对于%E)    添加小数点          |1.000000E+01|</span><br><span class="line">#(对于%f)    添加小数点          | 10.000000|</span><br><span class="line">#(对于%g)    不删除尾部0         |10.4000|</span><br><span class="line">#(对于%G)    不删除尾部0         |10.4000|</span><br></pre></td></tr></table></figure>

<h2 id="精度-precision"><a href="#精度-precision" class="headerlink" title="精度(precision)"></a>精度(precision)</h2><p>ksh 精度(precision)的意义。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">转换符                 精度意义</span><br><span class="line">%d,%i,%o,%u,%x,%X    最少数字位数，如果数字位数少于精度，添加前缀0</span><br><span class="line">%e, %E               最少数字位数，如果数字位数少于精度，添加后缀0</span><br><span class="line">%f                   小数的位数</span><br><span class="line">%g, %G               最多数字位数</span><br><span class="line">%s                   字符位数</span><br></pre></td></tr></table></figure>

<h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># %b 同 %s，支持更多的转义字符</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%b\n&quot;</span> <span class="string">&#x27;hello\nworld&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># %H 同 %s，转成 HTML 字符，如：空格转成  </span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%H\n&quot;</span> <span class="string">&quot;Here are real &lt; and &gt; characters&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># %P 同 %s，把 egrep 风格的正则表达式转成 ksh 风格</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%P\n&quot;</span> <span class="string">&#x27;(.*\.o|.*\.obj|core)+&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># %R 同 %s，把 ksh 风格的正则表达式转成 egrep 风格</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%R\n&quot;</span> <span class="string">&#x27;+(*.o|*.c)&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># %q 同 %s，打印成 $&#x27;...&#x27; 风格</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;print %q\n&quot;</span> <span class="string">&quot;a string with &#x27; and \&quot; in it&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># %d，进制转换</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&#x27;42 is %.3.5d in base 5\n&#x27;</span> 42</span><br><span class="line"></span><br><span class="line"><span class="comment"># %n 得到字符串的长度</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;hello, world\n%n&quot;</span> msglen;</span><br><span class="line"><span class="built_in">print</span> <span class="variable">$msglen</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># %(date format)T, 格式化日期</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%(It is now %Y-%m-%d %H:%M:%S)T\n&quot;</span> <span class="string">&quot;<span class="subst">$(date)</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h1 id="动态命令"><a href="#动态命令" class="headerlink" title="动态命令"></a>动态命令</h1><p>有时候我们需要动态生成一些命令，然后执行。下面是一个简单的例子。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line">cmd=<span class="string">&quot;ls | more&quot;</span>;</span><br><span class="line"><span class="variable">$cmd</span>;</span><br></pre></td></tr></table></figure>

<p>如果你执行上面的脚本，你会收到下面的错误消息，原因是 ksh 把 | 理解成了一个文件名。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls: cannot access |: No such file or directory</span><br></pre></td></tr></table></figure>

<p>遇到这种情况该如何处理呢？呵呵，so easy，你只需要在命令前加上 eval 即可，如下。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line">list=<span class="string">&quot;ls | more&quot;</span>;</span><br><span class="line"><span class="built_in">eval</span> <span class="variable">$list</span>;</span><br></pre></td></tr></table></figure>

<h1 id="多进程"><a href="#多进程" class="headerlink" title="多进程"></a>多进程</h1><h2 id="作业控制"><a href="#作业控制" class="headerlink" title="作业控制"></a>作业控制</h2><p>当我们在 ksh 中执行一条命令时，在命令结束之前，我们能做的只有等待，如果命令需要运行很长时间，在这段时间内你还想干点别的，你可以通过下面的方式运行命令。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在命令的末尾加上 &amp; 表示在后台执行该命令</span></span><br><span class="line">ls &gt; /dev/null &amp;</span><br></pre></td></tr></table></figure>

<p>当你按回车后，你马上会看到如下输出，1 表示作业号(Job Number)，3106 表示进程号(Process ID)。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[1] 3106</span><br></pre></td></tr></table></figure>

<p>命令执行完后，会有如下输出。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[1]+  Done                    ls --color=auto &gt; /dev/null</span><br></pre></td></tr></table></figure>

<p>如果命令执行错误，你会看到如下输出，2 表示错误代码。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[1]+  Exit 2                  ls --color=auto dd /dev/null</span><br></pre></td></tr></table></figure>

<p>你可能想，能不能把一个正在运行的命令放在后台执行呢？答案是肯定的，你需要两步。</p>
<p>第一步，按 CTRL-Z 暂停命令，你会得到如下的输出。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[1]+  Stopped                 vi test.txt</span><br></pre></td></tr></table></figure>

<p>第二步，执行下面的命令把它放在后台执行。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">bg</span> %1</span><br></pre></td></tr></table></figure>

<p>上面的 %1 表示作业号为 1 的作业。我们还可以通过下面的方式引用进程或作业。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">引用        进程</span><br><span class="line">N           进程号 N</span><br><span class="line">-N          进程组号 N</span><br><span class="line">%N          作业号 N</span><br><span class="line">%string	    以 string 开头的命令</span><br><span class="line">%?string    包含 string 的命令</span><br><span class="line">%+或%%      最后被调用的命令</span><br><span class="line">%-          倒数第二被调用的命令</span><br></pre></td></tr></table></figure>

<p>如果你想查看当前有哪些进程在后台执行，你可以运行 jobs 命令，如果你想把某个后台命令放在前台执行，试一试 fg %N 吧。<br>通常，当你退出登录时，你运行的所有命令，不管前台还是后台都会被终止，如果你想让某个命令在你退出登录时继续执行，试一试 disown %N 吧。当然你也可以采用如下的方式运行命令，这样即使你退出登录，也能保证不会被终止。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nohup ls &gt; /dev/null &amp;</span><br></pre></td></tr></table></figure>



<h2 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h2><p>很多人认为 kill 命令就是用来杀掉进程的，其实它是用来给进程发送信号(Signal)的，我们可以给进程发送哪些信号呢？试一试下面的命令吧。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kill -l</span><br><span class="line"></span><br><span class="line">结果如下：</span><br><span class="line"> 1) SIGHUP       2) SIGINT       3) SIGQUIT      4) SIGILL       5) SIGTRAP</span><br><span class="line"> 6) SIGABRT      7) SIGBUS       8) SIGFPE       9) SIGKILL     10) SIGUSR1</span><br><span class="line">11) SIGSEGV     12) SIGUSR2     13) SIGPIPE     14) SIGALRM     15) SIGTERM</span><br><span class="line">16) SIGSTKFLT   17) SIGCHLD     18) SIGCONT     19) SIGSTOP     20) SIGTSTP</span><br><span class="line">21) SIGTTIN     22) SIGTTOU     23) SIGURG      24) SIGXCPU     25) SIGXFSZ</span><br><span class="line">26) SIGVTALRM   27) SIGPROF     28) SIGWINCH    29) SIGIO       30) SIGPWR</span><br><span class="line">31) SIGSYS      34) SIGRTMIN    35) SIGRTMIN+1  36) SIGRTMIN+2  37) SIGRTMIN+3</span><br><span class="line">38) SIGRTMIN+4  39) SIGRTMIN+5  40) SIGRTMIN+6  41) SIGRTMIN+7  42) SIGRTMIN+8</span><br><span class="line">43) SIGRTMIN+9  44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12 47) SIGRTMIN+13</span><br><span class="line">48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14 51) SIGRTMAX-13 52) SIGRTMAX-12</span><br><span class="line">53) SIGRTMAX-11 54) SIGRTMAX-10 55) SIGRTMAX-9  56) SIGRTMAX-8  57) SIGRTMAX-7</span><br><span class="line">58) SIGRTMAX-6  59) SIGRTMAX-5  60) SIGRTMAX-4  61) SIGRTMAX-3  62) SIGRTMAX-2</span><br><span class="line">63) SIGRTMAX-1  64) SIGRTMAX</span><br></pre></td></tr></table></figure>

<p>下面是一些简单的例子。 </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 3106 是进程号，我们也可以通过作业号，命令名引用进程</span></span><br><span class="line"><span class="built_in">kill</span> 3106 <span class="comment"># 发送 TERM 信号终止进程</span></span><br><span class="line"><span class="built_in">kill</span> -15 3106 <span class="comment"># 同上</span></span><br><span class="line"><span class="built_in">kill</span> -s TERM 3106 <span class="comment"># 同上</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">kill</span> -s INT 3106 <span class="comment"># 发送 INT 信号中断进程，同 CTRL-C</span></span><br><span class="line"><span class="built_in">kill</span> -s QUIT 3106 <span class="comment"># 发送 QUIT 信号退出进程</span></span><br><span class="line"><span class="built_in">kill</span> -s KILL 3106 <span class="comment"># 发送 KILL 信号杀死进程</span></span><br></pre></td></tr></table></figure>

<p>上面提到的 jobs 命令只能查询到当前 shell 启动的进程，如果你想查看所有的进程，你可以使用 ps 命令。下面是一个简单的例子。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ps -ef | grep <span class="string">&#x27;vi test.txt&#x27;</span> | grep -v grep</span><br></pre></td></tr></table></figure>



<h2 id="多进程-1"><a href="#多进程-1" class="headerlink" title="多进程"></a>多进程</h2><p>假设某个目录下有好多 SQL 文件，现在让你把它们都运行一遍，你可以采用如下的脚本。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh  </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 扫描所有的 SQL 语句并运行</span></span><br><span class="line"><span class="keyword">for</span> sql <span class="keyword">in</span> $(ls *.sql)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	runSQL <span class="variable">$&#123;sql&#125;</span>;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;done&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>由于某些 SQL 需要运行很长时间，导致这个脚本很慢，其实，你可以并发执行所有的 SQL 文件，如下。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> clean &#123;</span><br><span class="line">	<span class="built_in">print</span> <span class="string">&quot;received interrupt signal.&quot;</span>;</span><br><span class="line">	<span class="comment"># disconnect db and clean tmp file etc</span></span><br><span class="line">	<span class="built_in">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># trap 表示如果收到 INT，TERM 或  QUIT 信号就运行函数 clean</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&#x27;clean&#x27;</span> INT TERM QUIT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扫描所有的 SQL 语句并运行</span></span><br><span class="line"><span class="keyword">for</span> sql <span class="keyword">in</span> $(ls *.sql)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="comment"># 在后台运行 SQL 语句</span></span><br><span class="line">	runSQL <span class="variable">$&#123;sql&#125;</span> &amp;;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># wait 命令等待所有后台命令执行完毕</span></span><br><span class="line"><span class="built_in">wait</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;done&quot;</span>;</span><br></pre></td></tr></table></figure>

<h1 id="控制键"><a href="#控制键" class="headerlink" title="控制键"></a>控制键</h1><p>如果你想结束一个正在运行的命令怎么办？试一试 CTRL-C 吧。 CTRL-C 是一个控制键，如何查看 Shell 都支持哪些控制键呢？试一试下面的命令吧。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">stty -a</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">控制键                 stty名    描述</span><br><span class="line">CTRL-C	              intr     终止当前命令</span><br><span class="line">CTRL-\ or CTRL-|      quit	   终止当前命令</span><br><span class="line">CTRL-Z                susp     暂停当前命令</span><br><span class="line">DEL or CTRL-?         erase    删除最后一个字符</span><br><span class="line">BACKSPACE or CTRL-H	  erase    删除最后一个字符</span><br><span class="line">CTRL-U                kill     删除整行命令</span><br><span class="line">CTRL-D                eof      终止输入</span><br><span class="line">CTRL-S                stop     暂停输出</span><br><span class="line">CTRL-Q                start    恢复输出</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>运维</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>win转linux格式</title>
    <url>/2022/31E0EE6.html</url>
    <content><![CDATA[<p>find /www/server/deploy/ -name “*.sh” | xargs dos2unix</p>
]]></content>
      <categories>
        <category>运维</category>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>yum多服务迁移</title>
    <url>/2021/2M37JZD.html</url>
    <content><![CDATA[<p> 1、尽量保证服务器版本一致</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">建立yum的缓存包路径，名字任意。</span></span><br><span class="line">mkdir /yumlib</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">编辑yum配置</span></span><br><span class="line">vi /etc/yum.conf</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">录入下面参数(开启缓存，y)</span></span><br><span class="line">keepcache=1</span><br><span class="line">cachedir=/yumlib</span><br></pre></td></tr></table></figure>

<p>2、在其它服务复制/yumlib包，相同位置，并且使用相同配置。</p>
]]></content>
      <categories>
        <category>运维</category>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>kafka</title>
    <url>/2022/1DVRX8Q.html</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查看消费者列表</span><br><span class="line">./kafka-consumer-groups.sh --bootstrap-server 127.0.0.1:9092 --list</span><br><span class="line">查看消费者组详情</span><br><span class="line">./kafka-consumer-groups.sh --describe --bootstrap-server 127.0.0.1:9092 --group grouponlinebus-173-8083-0102481q</span><br><span class="line"></span><br><span class="line">./kafka-console-producer.sh --broker-list 127.0.0.1:9092 --topic RP_CHANNEL_INCOME</span><br><span class="line">./kafka-console-producer.sh --bootstrap-server 127.0.0.1:9092 --group grouponlinebus-173-8083-0102481q --describe</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>运维</category>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>安装jdk</title>
    <url>/2021/2YMFT5G.html</url>
    <content><![CDATA[<p> yum的方式安装dragonwell8（阿里的jdk8版本）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">进入repos目录</span></span><br><span class="line">cd /etc/yum.repos.d</span><br><span class="line"></span><br><span class="line">vi alinux-plus.repo</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#alinux-plus.repo中录入下面内容，(i编辑，esc退出，:wq退出并保存)</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> plus packages provided by Aliyun Linux dev team</span></span><br><span class="line">[plus]</span><br><span class="line">name=AliYun-2.1903 - Plus - mirrors.aliyun.com</span><br><span class="line">baseurl=http://mirrors.aliyun.com/alinux/2.1903/plus/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/alinux/RPM-GPG-KEY-ALIYUN</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#保存完毕后，使用yum命令安装java</span></span></span><br><span class="line">yum install -y java-1.8.0-alibaba-dragonwell</span><br></pre></td></tr></table></figure>

<p><img src="https://mixley.stdcdn.com/2021/07/2cccdfc79185c253a2fca2a876b7fa54.png" alt="image-20210714101550980"></p>
<p>安装完成后，找到对应的安装路径和环境设置的值。并将其录入到环境变量中。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">此时仅能作用当前会话，需要将其写入到环境变量中</span></span><br><span class="line"><span class="meta">#</span><span class="bash">修改系统配置，没有vim可以使用vi</span></span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#注意路径以安装时路径为准，可在/opt/alibaba中找到对应的安装路径</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#最后一行输入，在/etc/profile文件中最后一行哦(insert按键或i开启编辑)，esc后 :wq退出保存</span></span></span><br><span class="line">export JAVA_HOME=/opt/alibaba/java-1.8.0-alibaba-dragonwell-8.8.8.302.b1-1.al8</span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使上面的设置立即生效</span></span><br><span class="line">source /etc/profile</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">输入java -version查看java版本，存在则成功</span></span><br><span class="line">java -version</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>运维</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>mixley</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>安装mysql</title>
    <url>/2021/1XRQBRM.html</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">查看是否安装</span></span><br><span class="line">yum list installed | grep mysql</span><br><span class="line"><span class="meta">#</span><span class="bash">卸载</span></span><br><span class="line">yum -y remove mysql-libs.x86_64</span><br><span class="line"><span class="meta">#</span><span class="bash">查看版本库信息</span> </span><br><span class="line">yum list | grep mysql</span><br><span class="line"><span class="meta">#</span><span class="bash"> 或 查看版本库信息</span></span><br><span class="line">yum -y list mysql*</span><br><span class="line"><span class="meta">#</span><span class="bash">安装mysql客户端</span></span><br><span class="line">yum install mysql -y</span><br><span class="line"><span class="meta">#</span><span class="bash">安装mysql服务端</span></span><br><span class="line">yum install mysql-server -y</span><br><span class="line"><span class="meta">#</span><span class="bash">选装mysql开发库</span></span><br><span class="line">yum install mysql-devel -y</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">或者使用下列命令安装</span></span><br><span class="line">yum -y install mysql-server mysql mysql-devel</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="启动命令"><a href="#启动命令" class="headerlink" title="启动命令"></a>启动命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">启动mysql</span></span><br><span class="line">service mysqld start</span><br><span class="line"><span class="meta">#</span><span class="bash">关闭mysql</span></span><br><span class="line">service mysqld stop</span><br><span class="line"><span class="meta">#</span><span class="bash">数据库端口是否开启</span></span><br><span class="line">lsof -i:3306</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">指定用户登录</span></span><br><span class="line">mysqld --user=[username]</span><br></pre></td></tr></table></figure>

<h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">解决root用户无法运行</span></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>//离线安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">uname -a</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Linux localhost.localdomain 4.18.0-193.el8.x86_64 <span class="comment">#1 SMP Fri May 8 10:59:10 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">el8.x86_64表示8</span></span><br></pre></td></tr></table></figure>

<p>下载地址</p>
<p><a href="https://downloads.mysql.com/archives/community/">https://downloads.mysql.com/archives/community/</a></p>
<p>el8针对centos8,el7针对centos7</p>
<p><a href="https://blog.csdn.net/xiguashixiaoyu/article/details/108777534">https://blog.csdn.net/xiguashixiaoyu/article/details/108777534</a></p>
<p>密码修改</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">进入mysql</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="meta">#</span><span class="bash">切换mysql数据库</span></span><br><span class="line">use mysql;</span><br><span class="line"><span class="meta">#</span><span class="bash">查看root信息</span></span><br><span class="line">SELECT `Host`,`User` FROM user where user=&quot;root&quot;;</span><br><span class="line"><span class="meta">#</span><span class="bash">更新用户表</span></span><br><span class="line">UPDATE user SET `Host` = &#x27;%&#x27; WHERE `User` = &#x27;root&#x27; and host=&#x27;localhost&#x27; LIMIT 1;</span><br><span class="line"><span class="meta">#</span><span class="bash">强制刷新权限：</span></span><br><span class="line">flush privileges;</span><br><span class="line"><span class="meta">#</span><span class="bash">如果仍不可访问，就需要设置访问权限</span></span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;密码&#x27; WITH GRANT OPTION;</span><br><span class="line"><span class="meta">#</span><span class="bash">强制刷新权限：</span></span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>运维</category>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>安装nginx</title>
    <url>/2021/15DR29D.html</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#若在安装jdk时已经配置阿里的yum源，可以跳过下面的步骤，直接到 yum install -y  nginx</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">nginx的源</span></span><br><span class="line">rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">安装nginx</span></span><br><span class="line">yum install -y  nginx</span><br><span class="line"><span class="meta">#</span><span class="bash">获取nginx目录</span></span><br><span class="line">whereis nginx</span><br></pre></td></tr></table></figure>

<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">启动</span></span><br><span class="line">nginx</span><br><span class="line"><span class="meta">#</span><span class="bash">测试Nginx配置是否正确</span></span><br><span class="line">nginx -t</span><br><span class="line"><span class="meta">#</span><span class="bash">优雅重启</span></span><br><span class="line">nginx -s reload</span><br><span class="line"><span class="meta">#</span><span class="bash">查看服务是否启动</span></span><br><span class="line">ps -ef | grep nginx | grep -v grep</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">防火</span></span><br></pre></td></tr></table></figure>

<h2 id="配置路径"><a href="#配置路径" class="headerlink" title="配置路径"></a>配置路径</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">推荐vim去编辑，vi不提供高亮，yum install vim -y</span></span><br><span class="line">vim /etc/nginx/nginx.conf</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">或者直接在下面目录新建config文件</span></span><br><span class="line">cd /etc/nginx/conf.d/</span><br></pre></td></tr></table></figure>

<h2 id="转发配置"><a href="#转发配置" class="headerlink" title="转发配置"></a>转发配置</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#TCP 转发</span></span><br><span class="line">stream&#123;</span><br><span class="line">	<span class="attribute">upstream</span> kafka&#123;</span><br><span class="line">		<span class="attribute">hash</span> $remote_addr consistent;</span><br><span class="line">		<span class="attribute">server</span> <span class="number">10.177.43.37:9092</span> max_fails=<span class="number">3</span> fail_timeout=<span class="number">10s</span>; </span><br><span class="line">        <span class="comment">#多一个是负载</span></span><br><span class="line">		<span class="attribute">server</span> <span class="number">10.177.43.37:9093</span> max_fails=<span class="number">3</span> fail_timeout=<span class="number">10s</span>; </span><br><span class="line">	&#125;</span><br><span class="line">	server&#123;</span><br><span class="line">		<span class="attribute">listen</span> <span class="number">9092</span>;</span><br><span class="line">		<span class="attribute">proxy_connect_timeout</span> <span class="number">20s</span>;</span><br><span class="line">		<span class="attribute">proxy_timeout</span> <span class="number">5m</span>;</span><br><span class="line">		<span class="attribute">proxy_pass</span> kafka;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#HTTP转发</span></span><br><span class="line">server&#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">location</span><span class="regexp"> ^~</span> /bus &#123;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host $host;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP $remote_addr;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> REMOTE-HOST $remote_addr;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Context-Path /bus;<span class="comment">#这里配合了代码</span></span><br><span class="line">        <span class="comment"># proxy_cookie_path / /bus/;</span></span><br><span class="line">        <span class="attribute">proxy_pass</span> http://10.177.43.36:58080/;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>运维</category>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>安装redis</title>
    <url>/2021/2ARWSSS.html</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">redis</span></span><br><span class="line">yum install redis -y</span><br></pre></td></tr></table></figure>

<h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">启动redis服务</span></span><br><span class="line">systemctl start redis</span><br><span class="line"><span class="meta">#</span><span class="bash">查看redis状态</span></span><br><span class="line">systemctl status redis</span><br><span class="line"><span class="meta">#</span><span class="bash">停止服务</span></span><br><span class="line">systemctl stop redis </span><br><span class="line"><span class="meta">#</span><span class="bash">重启服务</span></span><br><span class="line">systemctl restart redis</span><br><span class="line"><span class="meta">#</span><span class="bash">开机自动重启</span></span><br><span class="line">systemctl enable redis</span><br></pre></td></tr></table></figure>

<h2 id="其它命令"><a href="#其它命令" class="headerlink" title="其它命令"></a>其它命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">连接redis</span></span><br><span class="line">redis-cli -h 127.0.0.1 -p 6379</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">获取当前的db数</span> </span><br><span class="line">config get databases</span><br><span class="line"><span class="meta">#</span><span class="bash">切换指定db (可为0-15)</span></span><br><span class="line">select 1</span><br></pre></td></tr></table></figure>

<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">redis配置</span></span><br><span class="line">vim /etc/redis.conf</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#将下面注释，并设置protected-mode为no</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="built_in">bind</span> 127.0.0.1</span></span><br><span class="line"><span class="meta">#</span><span class="bash">保护模式</span></span><br><span class="line">protected-mode no</span><br><span class="line"><span class="meta">#</span><span class="bash">默认端口</span></span><br><span class="line">port 6379</span><br><span class="line"><span class="meta">#</span><span class="bash">设置密码</span></span><br><span class="line">requirepass 1111</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">需要重启</span></span><br><span class="line">systemctl restart redis</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>运维</category>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>安装sqlserver</title>
    <url>/2022/1HDKCNH.html</url>
    <content><![CDATA[<h1 id="SQLServer-for-linux安装"><a href="#SQLServer-for-linux安装" class="headerlink" title="SQLServer for linux安装"></a>SQLServer for linux安装</h1><p>转自：<a href="https://www.jianshu.com/p/2adcf1f0655d">https://www.jianshu.com/p/2adcf1f0655d</a></p>
<p>linux下安装sqlserver数据库有2种办法，第一使用yum镜像安装，第二使用rpm安装包安装</p>
<p>rpm安装地址为：<a href="https://packages.microsoft.com/rhel/7/mssql-server-2017/">https://packages.microsoft.com/rhel/7/mssql-server-2017/</a></p>
<p>使用rpm安装的话可能存在依赖问题，此处不做详细安装说明。</p>
<p>重点说一下yum方式安装，我们这里安装的版本为sqlserver2017，步骤如下：</p>
<p>一、要求</p>
<p>1.centos或redhat7.0以上系统</p>
<p>2.内存2G以上</p>
<p>二、安装步骤</p>
<p>1.设置sqlserver安装镜像</p>
<p>curl <a href="https://packages.microsoft.com/config/rhel/7/mssql-server-2017.repo">https://packages.microsoft.com/config/rhel/7/mssql-server-2017.repo</a> &gt; /etc/yum.repos.d/mssql-server.repo</p>
<p>2.执行安装</p>
<p>yum install -y mssql-server</p>
<p>完毕之后运行 sudo /opt/mssql/bin/mssql-conf setup 做相关配置</p>
<p><img src="/2022/1HDKCNH/webp.webp" alt="img"></p>
<p>image</p>
<p>输入2使用Developer(免费，无生产许可)版本</p>
<p><img src="/2022/1HDKCNH/webp-16478359799771.webp" alt="img"></p>
<p>image.png</p>
<p>输入yes，接受许可条款</p>
<p><img src="/2022/1HDKCNH/webp-16478359799772.webp" alt="img"></p>
<p>image.png</p>
<p>输入10，选择语言为简体中文</p>
<p><img src="/2022/1HDKCNH/webp-16478359799773.webp" alt="img"></p>
<p>image.png</p>
<p>设置sa的账号密码，要求8位包含大小写字母和数字，推荐设置1234Qwer</p>
<p>完毕之后即可启动完成，如果内存不够安装失败则重新命令 sudo /opt/mssql/bin/mssql-conf setup</p>
<p>3.下面查看我们安装的sql server版本</p>
<p>rpm -qa | grep mssql</p>
<p>4.查看安装的路径</p>
<p>find / -name mssql</p>
<p>5.设置开机启动</p>
<p>systemctl enable mssql-server</p>
<p>6.打开1433端口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=1433/tcp --permanent</span><br><span class="line"></span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<p>7.几个命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl start mssql-server</span><br><span class="line"></span><br><span class="line">systemctl restart mssql-server</span><br><span class="line"></span><br><span class="line">systemctl stop mssql-server</span><br><span class="line"></span><br><span class="line">systemctl status mssql-server</span><br></pre></td></tr></table></figure>

<p>具体配置路劲为/opt/mssql/bin/mssql-conf</p>
]]></content>
      <categories>
        <category>运维</category>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>运维工具与常用命令</title>
    <url>/2021/3RJKVD3.html</url>
    <content><![CDATA[<h2 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">vim文本文本编辑器</span></span><br><span class="line">yum install vim -y</span><br><span class="line"><span class="meta">#</span><span class="bash">lsof -i:3306 查看端口是否启用</span></span><br><span class="line">yum install lsof -y</span><br><span class="line"><span class="meta">#</span><span class="bash">当service报错时service: <span class="built_in">command</span> not found，使用服务必</span></span><br><span class="line">yum install initscripts -y</span><br></pre></td></tr></table></figure>

<h2 id="常用路径"><a href="#常用路径" class="headerlink" title="常用路径"></a>常用路径</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 修改系统配置</span></span><br><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure>

<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">确认j启动</span></span><br><span class="line">ps -ef | grep minio | grep -v grep</span><br><span class="line"><span class="meta">#</span><span class="bash">数据库端口是否开启</span></span><br><span class="line">lsof -i:3306</span><br><span class="line"><span class="meta">#</span><span class="bash">查看d</span></span><br><span class="line">netstat -lnp|grep 6379</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">解压tar包</span></span><br><span class="line">tar -xvf  a.tar</span><br><span class="line"><span class="meta">#</span><span class="bash">安装</span></span><br><span class="line">rpm -ivh 包全名</span><br><span class="line"><span class="meta">#</span><span class="bash">j</span></span><br><span class="line">rpm -evh 包名</span><br></pre></td></tr></table></figure>

<h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">开放端口</span></span><br><span class="line">firewall-cmd --zone=public --add-port=6379/tcp --permanent</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">重启防火墙</span></span><br><span class="line">systemctl restart firewalld</span><br></pre></td></tr></table></figure>

<h3 id="启动命令"><a href="#启动命令" class="headerlink" title="启动命令"></a>启动命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#systemctl操作</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">启动redis服务</span></span><br><span class="line">systemctl start redis</span><br><span class="line"><span class="meta">#</span><span class="bash">查看redis状态</span></span><br><span class="line">systemctl status redis</span><br><span class="line"><span class="meta">#</span><span class="bash">停止服务</span></span><br><span class="line">systemctl stop redis </span><br><span class="line"><span class="meta">#</span><span class="bash">重启服务</span></span><br><span class="line">systemctl restart redis</span><br><span class="line"><span class="meta">#</span><span class="bash">开机自动重启</span></span><br><span class="line">systemctl enable redis</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#service操作</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">启动mysql</span></span><br><span class="line">service mysqld start</span><br><span class="line"><span class="meta">#</span><span class="bash">关闭mysql</span></span><br><span class="line">service mysqld stop</span><br></pre></td></tr></table></figure>

<h3 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /etc/rc.d/</span><br><span class="line">chmod +x /etc/rc.d/rc.local</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>运维</category>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>jmx</title>
    <url>/2022/T8RYR0.html</url>
    <content><![CDATA[<p>tomcat提供了默认环境变量的默认文件setenv.bat/setenv.sh</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">set CATALINA_OPTS=%CATALINA_OPTS% -Dcom.sun.management.jmxremote</span><br><span class="line">set CATALINA_OPTS=%CATALINA_OPTS% -Dcom.sun.management.jmxremote.port=6666</span><br><span class="line">set CATALINA_OPTS=%CATALINA_OPTS% -Dcom.sun.management.jmxremote.local.only=false</span><br><span class="line">set CATALINA_OPTS=%CATALINA_OPTS% -Dcom.sun.management.jmxremote.ssl=false</span><br><span class="line">set CATALINA_OPTS=%CATALINA_OPTS% -Dcom.sun.management.jmxremote.authenticate=true</span><br><span class="line">set CATALINA_OPTS=%CATALINA_OPTS% -Dcom.sun.management.jmxremote.access.file=./jmx.access</span><br><span class="line">set CATALINA_OPTS=%CATALINA_OPTS% -Dcom.sun.management.jmxremote.password.file=./jmx.password </span><br><span class="line">set JAVA_OPTS=%JAVA_OPTS% -XX:+UnlockCommercialFeatures -XX:+FlightRecorder</span><br><span class="line">exit /b 0</span><br></pre></td></tr></table></figure>

<p>jmx.access </p>
<ul>
<li>readonly 只能读取 MBean 的属性和接受通知。</li>
<li>readwrite 还允许设置属性，调用方法，创建和删除 MBean。</li>
</ul>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">user</span> <span class="string">readonly</span></span><br><span class="line"><span class="attr">admin</span> <span class="string">readwrite</span></span><br></pre></td></tr></table></figure>

<p>jmx.password</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">user</span> <span class="string">user</span></span><br><span class="line"><span class="attr">admin</span> <span class="string">password</span></span><br></pre></td></tr></table></figure>

<p>授权</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chmod 600 jmx.access</span><br><span class="line">chmod 600 jmx.password</span><br><span class="line">chown root:root jmx.access</span><br><span class="line">chown root:root jmx.password</span><br></pre></td></tr></table></figure>

<p>开启并使用SSL可以参考链接<a href="https://db.apache.org/derby/docs/10.10/adminguide/radminjmxenablepwdssl.html">https://db.apache.org/derby/docs/10.10/adminguide/radminjmxenablepwdssl.html</a></p>
]]></content>
      <categories>
        <category>运维</category>
        <category>server</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>sqlserver</title>
    <url>/2022/3M68A3M.html</url>
    <content><![CDATA[<h2 id="查看死锁"><a href="#查看死锁" class="headerlink" title="查看死锁"></a>查看死锁</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询死锁1</span></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line"> request_session_id spid,   </span><br><span class="line"> OBJECT_NAME(resource_associated_entity_id) tableName    </span><br><span class="line"><span class="keyword">from</span> </span><br><span class="line">  sys.dm_tran_locks   </span><br><span class="line"><span class="keyword">where</span> </span><br><span class="line">    resource_type<span class="operator">=</span><span class="string">&#x27;OBJECT&#x27;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">-- 查询死锁2</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">[session_id],</span><br><span class="line">[request_id],</span><br><span class="line">[start_time] <span class="keyword">AS</span> <span class="string">&#x27;开始时间&#x27;</span>,</span><br><span class="line">[status] <span class="keyword">AS</span> <span class="string">&#x27;状态&#x27;</span>,</span><br><span class="line">[command] <span class="keyword">AS</span> <span class="string">&#x27;命令&#x27;</span>,</span><br><span class="line">dest.[text] <span class="keyword">AS</span> <span class="string">&#x27;sql语句&#x27;</span>, </span><br><span class="line">DB_NAME([database_id]) <span class="keyword">AS</span> <span class="string">&#x27;数据库名&#x27;</span>,</span><br><span class="line">[blocking_session_id] <span class="keyword">AS</span> <span class="string">&#x27;正在阻塞其他会话的会话ID&#x27;</span>,</span><br><span class="line">[wait_type] <span class="keyword">AS</span> <span class="string">&#x27;等待资源类型&#x27;</span>,</span><br><span class="line">[wait_time] <span class="keyword">AS</span> <span class="string">&#x27;等待时间&#x27;</span>,</span><br><span class="line">[wait_resource] <span class="keyword">AS</span> <span class="string">&#x27;等待的资源&#x27;</span>,</span><br><span class="line">[<span class="keyword">reads</span>] <span class="keyword">AS</span> <span class="string">&#x27;物理读次数&#x27;</span>,</span><br><span class="line">[writes] <span class="keyword">AS</span> <span class="string">&#x27;写次数&#x27;</span>,</span><br><span class="line">[logical_reads] <span class="keyword">AS</span> <span class="string">&#x27;逻辑读次数&#x27;</span>,</span><br><span class="line">[row_count] <span class="keyword">AS</span> <span class="string">&#x27;返回结果行数&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span> sys.[dm_exec_requests] <span class="keyword">AS</span> der </span><br><span class="line"><span class="keyword">CROSS</span> APPLY </span><br><span class="line">sys.[dm_exec_sql_text](der.[sql_handle]) <span class="keyword">AS</span> dest </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> [cpu_time] <span class="keyword">DESC</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="根据spid查询执行的sql语句"><a href="#根据spid查询执行的sql语句" class="headerlink" title="根据spid查询执行的sql语句"></a>根据spid查询执行的sql语句</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- sp_who2查询出的spid</span></span><br><span class="line"><span class="comment">-- 查进程执行的语句1</span></span><br><span class="line"><span class="comment">-- 根据spid来查询执行的SQL语句</span></span><br><span class="line"><span class="keyword">select</span> er.session_id,<span class="built_in">CAST</span>(csql.text <span class="keyword">AS</span> <span class="type">varchar</span>(<span class="number">255</span>)) <span class="keyword">AS</span> CallingSQL</span><br><span class="line"><span class="keyword">from</span> master.sys.dm_exec_requests er</span><br><span class="line"><span class="keyword">WITH</span> (NOLOCK)</span><br><span class="line"> <span class="keyword">CROSS</span> APPLY MASTER.sys.fn_get_sql (er.sql_handle) csql</span><br><span class="line"><span class="keyword">where</span> er.session_id <span class="operator">=</span><span class="variable">@spid</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查进程执行的语句2</span></span><br><span class="line">DBCC INPUTBUFFER(<span class="variable">@spid</span>)</span><br></pre></td></tr></table></figure>



<h2 id="字段属性生成-依据表名生成excel表样"><a href="#字段属性生成-依据表名生成excel表样" class="headerlink" title="字段属性生成(依据表名生成excel表样)"></a>字段属性生成(依据表名生成excel表样)</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 表名 <span class="operator">=</span> <span class="keyword">case</span> <span class="keyword">when</span> a.colorder <span class="operator">=</span> <span class="number">1</span> <span class="keyword">then</span> d.name <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">end</span>,</span><br><span class="line"> 字段名称 <span class="operator">=</span> a.name,</span><br><span class="line"> 字段类型 <span class="operator">=</span> b.name <span class="operator">+</span> <span class="string">&#x27;(&#x27;</span> <span class="operator">+</span> <span class="built_in">cast</span>(COLUMNPROPERTY(a.id, a.name, <span class="string">&#x27;PRECISION&#x27;</span>) <span class="keyword">AS</span> <span class="type">VARCHAR</span>(<span class="number">10</span>)) <span class="operator">+</span> <span class="string">&#x27;)&#x27;</span>,</span><br><span class="line"> 约束 <span class="operator">=</span> <span class="keyword">case</span></span><br><span class="line">    <span class="keyword">when</span> <span class="keyword">exists</span>(<span class="keyword">SELECT</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">FROM</span> sysobjects</span><br><span class="line">    <span class="keyword">where</span> xtype <span class="operator">=</span> <span class="string">&#x27;PK&#x27;</span></span><br><span class="line">      <span class="keyword">and</span> parent_obj <span class="operator">=</span> a.id</span><br><span class="line">      <span class="keyword">and</span> name <span class="keyword">in</span> (</span><br><span class="line">        <span class="keyword">SELECT</span> name</span><br><span class="line">        <span class="keyword">FROM</span> sysindexes</span><br><span class="line">        <span class="keyword">WHERE</span> indid <span class="keyword">in</span> (<span class="keyword">SELECT</span> indid</span><br><span class="line">           <span class="keyword">FROM</span> sysindexkeys <span class="keyword">as</span> ind</span><br><span class="line">            <span class="keyword">WHERE</span> ind.id <span class="operator">=</span> a.id</span><br><span class="line">        <span class="keyword">AND</span> ind.colid <span class="operator">=</span> a.colid))) <span class="keyword">then</span> <span class="string">&#x27;主键&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="keyword">exists</span>(<span class="keyword">SELECT</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">FROM</span> sysobjects</span><br><span class="line">    <span class="keyword">where</span> xtype <span class="operator">=</span> <span class="string">&#x27;F&#x27;</span></span><br><span class="line">      <span class="keyword">and</span> parent_obj <span class="operator">=</span> a.id</span><br><span class="line">      <span class="keyword">and</span> name <span class="keyword">in</span> (</span><br><span class="line">        <span class="keyword">SELECT</span> name</span><br><span class="line">        <span class="keyword">FROM</span> sysindexes</span><br><span class="line">        <span class="keyword">WHERE</span> indid <span class="keyword">in</span> (<span class="keyword">SELECT</span> indid</span><br><span class="line">          <span class="keyword">FROM</span> sysforeignkeys <span class="keyword">as</span> fore</span><br><span class="line">          <span class="keyword">WHERE</span> fore.fkey <span class="operator">=</span> a.id</span><br><span class="line">        <span class="keyword">AND</span> fore.rkey <span class="operator">=</span> a.colid))) <span class="keyword">then</span> <span class="string">&#x27;外键&#x27;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">end</span>,</span><br><span class="line"> 是否为空 <span class="operator">=</span> <span class="keyword">case</span> <span class="keyword">when</span> a.isnullable <span class="operator">=</span> <span class="number">1</span> <span class="keyword">then</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;NOT NULL&#x27;</span> <span class="keyword">end</span>,</span><br><span class="line"> 中文说明 <span class="operator">=</span> isnull(e.text, <span class="string">&#x27;&#x27;</span>),</span><br><span class="line"> 注释 <span class="operator">=</span> isnull(g.[<span class="keyword">value</span>], <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="keyword">FROM</span> syscolumns a</span><br><span class="line">   <span class="keyword">left</span> <span class="keyword">join</span></span><br><span class="line">     systypes b</span><br><span class="line">     <span class="keyword">on</span></span><br><span class="line">   a.xusertype <span class="operator">=</span> b.xusertype</span><br><span class="line">   <span class="keyword">inner</span> <span class="keyword">join</span></span><br><span class="line">     sysobjects d</span><br><span class="line">     <span class="keyword">on</span></span><br><span class="line">   a.id <span class="operator">=</span> d.id <span class="keyword">and</span> d.xtype <span class="operator">=</span> <span class="string">&#x27;U&#x27;</span> <span class="keyword">and</span> d.name <span class="operator">&lt;&gt;</span> <span class="string">&#x27;dtproperties&#x27;</span></span><br><span class="line">   <span class="keyword">left</span> <span class="keyword">join</span></span><br><span class="line">     syscomments e</span><br><span class="line">     <span class="keyword">on</span></span><br><span class="line">   a.cdefault <span class="operator">=</span> e.id</span><br><span class="line">   <span class="keyword">left</span> <span class="keyword">join</span></span><br><span class="line">     sys.extended_properties g</span><br><span class="line">     <span class="keyword">on</span></span><br><span class="line">   a.id <span class="operator">=</span> G.major_id <span class="keyword">and</span> a.colid <span class="operator">=</span> g.minor_id</span><br><span class="line">   <span class="keyword">left</span> <span class="keyword">join</span></span><br><span class="line">     sys.extended_properties f</span><br><span class="line">     <span class="keyword">on</span></span><br><span class="line">   d.id <span class="operator">=</span> f.major_id <span class="keyword">and</span> f.minor_id <span class="operator">=</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">where</span> d.name <span class="operator">=</span> <span class="variable">@tablename</span> <span class="comment">-- 如果只查询指定表,加上此红色where条件，tablename是要查询的表名；去除红色where条件查询说有的表信息</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> a.id, a.colorder</span><br></pre></td></tr></table></figure>

<h2 id="JavaBean生成"><a href="#JavaBean生成" class="headerlink" title="JavaBean生成"></a>JavaBean生成</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="string">&#x27;/**&#x27;</span><span class="operator">+</span><span class="type">char</span>(<span class="number">13</span>)<span class="operator">+</span><span class="type">char</span>(<span class="number">10</span>)  </span><br><span class="line"><span class="operator">+</span><span class="string">&#x27;*&#x27;</span><span class="operator">+</span>isnull(<span class="keyword">CONVERT</span>(<span class="type">VARCHAR</span>(<span class="number">100</span>),g.value),<span class="string">&#x27;&#x27;</span>) <span class="operator">+</span> <span class="type">char</span>(<span class="number">13</span>)<span class="operator">+</span><span class="type">char</span>(<span class="number">10</span>)  </span><br><span class="line"><span class="operator">+</span><span class="string">&#x27;*/&#x27;</span><span class="operator">+</span><span class="type">char</span>(<span class="number">13</span>)<span class="operator">+</span><span class="type">char</span>(<span class="number">10</span>)  </span><br><span class="line"><span class="operator">+</span><span class="string">&#x27;private &#x27;</span><span class="operator">+</span>  </span><br><span class="line"><span class="keyword">case</span> b.name <span class="keyword">when</span>   </span><br><span class="line"><span class="string">&#x27;int&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;Integer&#x27;</span>  </span><br><span class="line"><span class="keyword">when</span> <span class="string">&#x27;varchar&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;String&#x27;</span>  </span><br><span class="line"><span class="keyword">when</span> <span class="string">&#x27;nvarchar&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;String&#x27;</span>  </span><br><span class="line"><span class="keyword">when</span> <span class="string">&#x27;text&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;String&#x27;</span>  </span><br><span class="line"><span class="keyword">when</span> <span class="string">&#x27;float&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;Double&#x27;</span>  </span><br><span class="line"><span class="keyword">when</span> <span class="string">&#x27;numeric&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;Float&#x27;</span>  </span><br><span class="line"><span class="keyword">when</span> <span class="string">&#x27;datetime&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;Date&#x27;</span> </span><br><span class="line"><span class="keyword">when</span> <span class="string">&#x27;decimal&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;BigDecimal&#x27;</span> </span><br><span class="line"><span class="keyword">else</span> b.name <span class="keyword">end</span>  </span><br><span class="line"><span class="operator">+</span><span class="string">&#x27; &#x27;</span><span class="operator">+</span>a.name <span class="comment">-- 保持字段名称的原始大小写则直接用a.name  </span></span><br><span class="line"><span class="operator">+</span><span class="string">&#x27;;&#x27;</span><span class="operator">+</span><span class="type">char</span>(<span class="number">13</span>)<span class="operator">+</span><span class="type">char</span>(<span class="number">10</span>)<span class="operator">+</span><span class="type">char</span>(<span class="number">13</span>)<span class="operator">+</span><span class="type">char</span>(<span class="number">10</span>)  </span><br><span class="line"><span class="comment">--,b.name,a.max_length ,g.value,b.name,a.name  </span></span><br><span class="line"><span class="keyword">from</span> sys.columns a <span class="keyword">left</span> <span class="keyword">join</span> sys.types b <span class="keyword">on</span> a.user_type_id<span class="operator">=</span>b.user_type_id   </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> sys.extended_properties g <span class="keyword">on</span> a.object_id<span class="operator">=</span>g.major_id <span class="keyword">and</span> a.column_id<span class="operator">=</span>g.minor_id  </span><br><span class="line"><span class="keyword">where</span> object_id<span class="operator">=</span>object_id(<span class="variable">@tablename</span>) ; <span class="comment">-- 其中@tablename为表名</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>运维</category>
        <category>sql</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx配置文件说明</title>
    <url>/2021/39Z4WNX.html</url>
    <content><![CDATA[<p> nginx 配置文件说明</p>
<h2 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">root</span> /home/newland/soft/scenic/dist;</span><br></pre></td></tr></table></figure>

<h2 id="SSL及证书配置"><a href="#SSL及证书配置" class="headerlink" title="SSL及证书配置"></a>SSL及证书配置</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="comment">#SSL 访问端口号为 443</span></span><br><span class="line">	<span class="attribute">listen</span> <span class="number">443</span> ssl http2;</span><br><span class="line">    <span class="comment">#填写绑定证书的域名</span></span><br><span class="line">    <span class="attribute">server_name</span> test.tencent.cn;</span><br><span class="line">    <span class="attribute">root</span> /test/deploy/dist;</span><br><span class="line">    <span class="comment">#HTTP_TO_HTTPS_END</span></span><br><span class="line">    <span class="attribute">ssl_certificate</span>    /test/fullchain.pem;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span>    /test/privkey.pem;</span><br><span class="line">    <span class="attribute">ssl_session_timeout</span> <span class="number">10m</span>;</span><br><span class="line">    <span class="attribute">ssl_session_cache</span> shared:SSL:<span class="number">10m</span>;</span><br><span class="line">    <span class="comment">#请按照以下协议配置</span></span><br><span class="line">    <span class="attribute">ssl_protocols</span> TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span> TLSv1.<span class="number">3</span>;</span><br><span class="line">    <span class="comment">#请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。</span></span><br><span class="line">    <span class="comment">#ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; </span></span><br><span class="line">    <span class="attribute">ssl_ciphers</span> EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;</span><br><span class="line">    <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="配置转发"><a href="#配置转发" class="headerlink" title="配置转发"></a>配置转发</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">   <span class="comment">#转发方式为连同路径一起转发，如路径输入 /auth时，转发到下面9999的 /auth上</span></span><br><span class="line">   <span class="attribute">location</span> <span class="regexp">~* ^/(auth|code|admin|gen|wxmp|weixin|mall|scenic|sceapi)</span> &#123;</span><br><span class="line">         <span class="attribute">proxy_pass</span> http://127.0.0.1:9999;</span><br><span class="line">         <span class="comment">#proxy_set_header Host $http_host;</span></span><br><span class="line">         <span class="attribute">proxy_connect_timeout</span> <span class="number">15s</span>;</span><br><span class="line">         <span class="attribute">proxy_send_timeout</span> <span class="number">15s</span>;</span><br><span class="line">         <span class="attribute">proxy_read_timeout</span> <span class="number">15s</span>;</span><br><span class="line">         <span class="attribute">proxy_set_header</span> X-Real-IP $remote_addr;</span><br><span class="line">         <span class="attribute">proxy_set_header</span> X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#二级路径转发，当输入 /rental/ 时转发到指定路径</span></span><br><span class="line">    <span class="attribute">location</span> /rental/ &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://127.0.0.1:8383/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>运维</category>
        <category>server</category>
      </categories>
  </entry>
  <entry>
    <title>win安装centos</title>
    <url>/2021/3VEA8ZS.html</url>
    <content><![CDATA[<h2 id="子系统开启"><a href="#子系统开启" class="headerlink" title="子系统开启"></a>子系统开启</h2><p>启用“适用于 Linux 的 Windows 子系统”可选功能</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">dism.exe /online /<span class="built_in">enable-feature</span> /featurename:Microsoft<span class="literal">-Windows</span><span class="literal">-Subsystem</span><span class="literal">-Linux</span> /all /norestart</span><br></pre></td></tr></table></figure>

<p>启用“虚拟机平台”可选功能。 以管理员身份打开 PowerShell 并运行（请保证开启了bios的虚拟化，失败则跳过）：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">dism.exe /online /<span class="built_in">enable-feature</span> /featurename:VirtualMachinePlatform /all /norestart</span><br></pre></td></tr></table></figure>

<p>若上一个失败，则尝试安装Hyper-V（失败则跳过）。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 启用Hyper-V</span></span><br><span class="line">DISM /Online /<span class="built_in">Enable-Feature</span> /All /FeatureName:Microsoft<span class="literal">-Hyper</span><span class="literal">-V</span> /all /norestart</span><br></pre></td></tr></table></figure>
<p>下载更新安装wsl2，并设置wsl2为默认（建议重启一次，安装wsl2再使用下面命令）</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#下载安装升级wsl2 ，下载链接：https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi</span></span><br><span class="line">wsl -<span class="literal">-set</span><span class="literal">-default</span><span class="literal">-version</span> <span class="number">2</span></span><br></pre></td></tr></table></figure>

<p> 参考链接：</p>
<p>Winux之路-WSL 2的使用及填坑:<a href="https://zhuanlan.zhihu.com/p/224753478">https://zhuanlan.zhihu.com/p/224753478</a> </p>
<p>WSL Linux 子系统，真香！完整实操:<a href="https://zhuanlan.zhihu.com/p/146545159">https://zhuanlan.zhihu.com/p/146545159</a></p>
<p>【微软】适用于 Linux 的 Windows 子系统安装指南 (Windows 10):<a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-win10#step-4---download-the-linux-kernel-update-package">https://docs.microsoft.com/zh-cn/windows/wsl/install-win10#step-4—download-the-linux-kernel-update-package</a></p>
<h2 id="Centos安装"><a href="#Centos安装" class="headerlink" title="Centos安装"></a>Centos安装</h2><p>下载：<a href="https://github.com/wsldl-pg/CentWSL">https://github.com/wsldl-pg/CentWSL</a></p>
<p>解压后直接管理员运行</p>
<p><img src="https://mixley.stdcdn.com/2021/07/fb9318d4db326992d8e2e0c37ee55d57.png" alt="image-20210713230538373"></p>
<p>安装成功后再次右击，管理员运行，则直接进入子系统</p>
<p><img src="https://mixley.stdcdn.com/2021/07/513a21ed979f4769369490caca1e805e.png" alt="image-20210713231027745"></p>
<p>参考链接：</p>
<p>在Windows 10上使用WSL安装Centos：<a href="https://zhuanlan.zhihu.com/p/272735470">https://zhuanlan.zhihu.com/p/272735470</a></p>
<h2 id="其它操作"><a href="#其它操作" class="headerlink" title="其它操作"></a>其它操作</h2><p>wsl使用</p>
<p>su密码修改：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">sudo passwd </span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>运维</category>
        <category>win</category>
      </categories>
      <tags>
        <tag>mixley</tag>
      </tags>
  </entry>
  <entry>
    <title>MAVEN使用</title>
    <url>/2022/S3R6PQ.html</url>
    <content><![CDATA[<h2 id="Maven生命周期及生命周期绑定"><a href="#Maven生命周期及生命周期绑定" class="headerlink" title="Maven生命周期及生命周期绑定"></a>Maven生命周期及生命周期绑定</h2><h3 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h3><p><strong>package</strong> <strong>即将本地编译好的文件打包为war 或者jar</strong> </p>
<p><strong>install</strong> <strong>将打包的代码存放到本地maven仓库，可供本地其它项目依赖使用</strong> </p>
<p><strong>deploy</strong> <strong>将打包在本地仓库中的项目发到服务器，供他人依赖使用</strong> </p>
<p><img src="https://mixley.stdcdn.com/2021/07/maven/clip_image002.png" alt="img"></p>
<h3 id="Plugins绑定maven生命周期"><a href="#Plugins绑定maven生命周期" class="headerlink" title="Plugins绑定maven生命周期"></a>Plugins绑定maven生命周期</h3><p>新建一个plugin工具后，通过**<executions><phase><strong>绑定生命周期，maven-</strong>-plugin的groupId为org.apache.maven.plugins一般都有<strong>默认的生命周期</strong>。如maven-jar-plugin</phase></executions></p>
<p><img src="https://mixley.stdcdn.com/2021/07/maven/clip_image004.jpg" alt="img"></p>
<h2 id="无法在maven中引用的lib包处理"><a href="#无法在maven中引用的lib包处理" class="headerlink" title="无法在maven中引用的lib包处理"></a>无法在maven中引用的lib包处理</h2><h3 id="Idea使用时报错处理"><a href="#Idea使用时报错处理" class="headerlink" title="Idea使用时报错处理"></a>Idea使用时报错处理</h3><p><img src="https://mixley.stdcdn.com/2021/07/maven/clip_image006.jpg" alt="img"></p>
<h3 id="Maven编译打包报错时处理"><a href="#Maven编译打包报错时处理" class="headerlink" title="Maven编译打包报错时处理"></a>Maven编译打包报错时处理</h3><p><img src="https://mixley.stdcdn.com/2021/07/maven/clip_image008.jpg" alt="img"></p>
<h2 id="Maven项目Version版本自动写入文件"><a href="#Maven项目Version版本自动写入文件" class="headerlink" title="Maven项目Version版本自动写入文件"></a>Maven项目Version版本自动写入文件</h2><h3 id="resources目录下-新增文件version"><a href="#resources目录下-新增文件version" class="headerlink" title="resources目录下 新增文件version"></a>resources目录下 新增文件version</h3><p>内容复制为：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">#$&#123;project.artifactId&#125;#$&#123;project.version&#125;#$&#123;project.packaging&#125;#$&#123;project.timestamp&#125;#</span><br></pre></td></tr></table></figure>

<p>截图示例：（下面的是目录结构及version中包含的内容）</p>
<p><img src="https://mixley.stdcdn.com/2021/07/maven/clip_image010.jpg" alt="img"></p>
<h3 id="Properties配置"><a href="#Properties配置" class="headerlink" title="Properties配置"></a>Properties配置</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 日期显示格式 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">maven.build.timestamp.format</span>&gt;</span>yyyy-MM-dd HH:mm:ss<span class="tag">&lt;/<span class="name">maven.build.timestamp.format</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 对应version里面显示的project.timestamp --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">project.timestamp</span>&gt;</span>$&#123;maven.build.timestamp&#125;<span class="tag">&lt;/<span class="name">project.timestamp</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 文件拷贝时的编码 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 编译时的编码 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">maven.compiler.encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">maven.compiler.encoding</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- maven方式跳过maven test, 等同$ mvn package -Dmaven.test.skip=true --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">maven.test.skip</span>&gt;</span>true<span class="tag">&lt;/<span class="name">maven.test.skip</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Build配置"><a href="#Build配置" class="headerlink" title="Build配置"></a>Build配置</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 编译配置，source源码版本target编译器版本1.7表示jdk7 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 编译帮助工具，这里用作时区转换工具 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.mojo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>build-helper-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 执行这个命令timestamp-property --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>timestamp-property<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 生命周期 validate时执行--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">phase</span>&gt;</span>validate<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 替换project.timestamp的值(没有这里时区是UTC)--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>project.timestamp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;maven.build.timestamp.format&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">timeZone</span>&gt;</span>GMT+8<span class="tag">&lt;/<span class="name">timeZone</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 处理资源文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 生命周期 validate时执行--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">phase</span>&gt;</span>validate<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>copy-resources<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>$&#123;project.build.directory&#125;/$&#123;project.build.finalName&#125;<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                  <span class="comment">&lt;!-- 选择文件--&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">include</span>&gt;</span>version<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Maven常用工具"><a href="#Maven常用工具" class="headerlink" title="Maven常用工具"></a>Maven常用工具</h2><h3 id="jar包打包（需依赖外部lib）maven-jar-plugin"><a href="#jar包打包（需依赖外部lib）maven-jar-plugin" class="headerlink" title="jar包打包（需依赖外部lib）maven-jar-plugin"></a>jar包打包（需依赖外部lib）maven-jar-plugin</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">addClasspath</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addClasspath</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">classpathPrefix</span>&gt;</span>lib/<span class="tag">&lt;/<span class="name">classpathPrefix</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.newland.buscontrol.message.MainServer<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>../deploy/release<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="Jar单文件打包（无需依赖）maven-assembly-plugin"><a href="#Jar单文件打包（无需依赖）maven-assembly-plugin" class="headerlink" title="Jar单文件打包（无需依赖）maven-assembly-plugin"></a>Jar单文件打包（无需依赖）maven-assembly-plugin</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>assembly<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>$&#123;mainClass&#125;<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appendAssemblyId</span>&gt;</span>false<span class="tag">&lt;/<span class="name">appendAssemblyId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">descriptorRef</span>&gt;</span>jar-with-dependencies<span class="tag">&lt;/<span class="name">descriptorRef</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>../deploy/release<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="配置清理及不清理的文件maven-clean-plugin"><a href="#配置清理及不清理的文件maven-clean-plugin" class="headerlink" title="配置清理及不清理的文件maven-clean-plugin"></a>配置清理及不清理的文件maven-clean-plugin</h3><p>**(<strong>与绑定生命周期一起用时，可以在package时清理一些指定文件)</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filesets</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">fileset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>deploy/release<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>BusControl.properties<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>排除文件.jar<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">fileset</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filesets</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="多模块项目（重复工作放在一个模块下）"><a href="#多模块项目（重复工作放在一个模块下）" class="headerlink" title="多模块项目（重复工作放在一个模块下）"></a>多模块项目（重复工作放在一个模块下）</h2><h3 id="多模块展示及创建方法（主模块右击新建模块）"><a href="#多模块展示及创建方法（主模块右击新建模块）" class="headerlink" title="多模块展示及创建方法（主模块右击新建模块）"></a>多模块展示及创建方法<strong>（主模块右击新建模块）</strong></h3><p><img src="https://mixley.stdcdn.com/2021/07/maven/clip_image012.jpg" alt="img"><img src="https://mixley.stdcdn.com/2021/07/maven/clip_image014.jpg" alt="img"></p>
<h3 id="指定项目中公有的模块"><a href="#指定项目中公有的模块" class="headerlink" title="指定项目中公有的模块"></a>指定项目中公有的模块</h3><p><strong>父pom指定公用模块</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--指定项目中公有的模块--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.newland<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Utils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>子模块使用(可以不用指定版本号)</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.newland<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Utils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="指定项目公共插件及插件公共配置"><a href="#指定项目公共插件及插件公共配置" class="headerlink" title="指定项目公共插件及插件公共配置"></a>指定项目公共插件及插件公共配置</h3><p><strong>父pom指定公共插件</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>assembly<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appendAssemblyId</span>&gt;</span>false<span class="tag">&lt;/<span class="name">appendAssemblyId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">descriptorRef</span>&gt;</span>jar-with-dependencies<span class="tag">&lt;/<span class="name">descriptorRef</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>../deploy/release<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>子模块使用（不需版本号与其它公共配置）</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>$&#123;mainClass&#125;<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Maven模块引用配置"><a href="#Maven模块引用配置" class="headerlink" title="Maven模块引用配置"></a><strong>Maven</strong>模块引用配置</h2><h3 id="环境选择classifier（json-lib）"><a href="#环境选择classifier（json-lib）" class="headerlink" title="环境选择classifier（json-lib）"></a>环境选择classifier（json-lib）</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sf.json-lib<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>json-lib<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">classifier</span>&gt;</span>jdk15<span class="tag">&lt;/<span class="name">classifier</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="Jar包冲突之运行环境冲突-使用provided"><a href="#Jar包冲突之运行环境冲突-使用provided" class="headerlink" title="Jar包冲突之运行环境冲突**(**使用provided)"></a><strong>Jar</strong>包冲突之运行环境冲突**(**使用<scope>provided</scope>)</h3><p>在运行环境中存在（tomcat中）且项目中需要直接使用的包，如果直接加maven引用会导致jar冲突。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="Maven-引用的jar包导致的冲突（dependencies工具）"><a href="#Maven-引用的jar包导致的冲突（dependencies工具）" class="headerlink" title="**Maven ** 引用的jar包导致的冲突（dependencies工具）"></a>**Maven ** 引用的jar包导致的冲突（dependencies工具）</h3><p>可以直接用exclusions排除，或者使用show dependencies查看冲突关系</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.struts<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>struts-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://mixley.stdcdn.com/2021/07/maven/clip_image016.jpg" alt="img"></p>
<p><img src="https://mixley.stdcdn.com/2021/07/maven/clip_image018.jpg" alt="img"></p>
<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><h3 id="maven指令"><a href="#maven指令" class="headerlink" title="maven指令"></a>maven指令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">打包指定项目，并同时打包项目相关依赖</span></span><br><span class="line">mvn package -pl xxx -am</span><br></pre></td></tr></table></figure>

<h3 id="ant插件执行打包单个项目的配置"><a href="#ant插件执行打包单个项目的配置" class="headerlink" title="ant插件执行打包单个项目的配置"></a>ant插件执行打包单个项目的配置</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 父组件里面使用这个--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-antrun-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tasks</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">condition</span> <span class="attr">property</span>=<span class="string">&quot;osFamily&quot;</span> <span class="attr">value</span>=<span class="string">&quot;windows&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">os</span> <span class="attr">family</span>=<span class="string">&quot;windows&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">condition</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">condition</span> <span class="attr">property</span>=<span class="string">&quot;osFamily&quot;</span> <span class="attr">value</span>=<span class="string">&quot;unix&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">os</span> <span class="attr">family</span>=<span class="string">&quot;unix&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">condition</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exec</span> <span class="attr">dir</span>=<span class="string">&quot;../&quot;</span> <span class="attr">executable</span>=<span class="string">&quot;C:\\Windows\\System32\\cmd.exe&quot;</span> <span class="attr">osfamily</span>=<span class="string">&quot;windows&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">arg</span> <span class="attr">line</span>=<span class="string">&quot;/c &quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">arg</span> <span class="attr">line</span>=<span class="string">&quot;echo &#x27;chcp 65001 <span class="symbol">&amp;amp;</span> mvn package -pl $&#123;artifactId&#125; -am -Dfile.encoding=UTF-8&#x27; <span class="symbol">&amp;amp;</span>&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 这里防止输出乱码的 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">arg</span> <span class="attr">line</span>=<span class="string">&quot;set MAVEN_OPTS=-Dfile.encoding=UTF-8 <span class="symbol">&amp;amp;</span>&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">arg</span> <span class="attr">line</span>=<span class="string">&quot;chcp 65001 <span class="symbol">&amp;amp;</span> mvn package -pl $&#123;artifactId&#125; -am -Dfile.encoding=UTF-8&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exec</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exec</span> <span class="attr">dir</span>=<span class="string">&quot;../&quot;</span> <span class="attr">executable</span>=<span class="string">&quot;/bin/bash&quot;</span> <span class="attr">osfamily</span>=<span class="string">&quot;unix&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">arg</span> <span class="attr">line</span>=<span class="string">&quot;-c mvn package -pl $&#123;artifactId&#125; -am -Dfile.encoding=UTF-8&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exec</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tasks</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>学习</category>
        <category>java</category>
        <category>maven</category>
      </categories>
      <tags>
        <tag>mixley</tag>
        <tag>java</tag>
      </tags>
  </entry>
</search>
